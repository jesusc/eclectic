/*
* generated by Xtext
*/

package org.eclectic.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class ApiDescriptionLanguageGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ApiDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ApiDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cApiKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cApiNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cApiNameEStringParserRuleCall_1_0 = (RuleCall)cApiNameAssignment_1.eContents().get(0);
		private final Keyword cDescribedKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cByKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMetamodelNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMetamodelNameEStringParserRuleCall_4_0 = (RuleCall)cMetamodelNameAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cGenericKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cMapperKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cMapperClassNameAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cMapperClassNameQualifiedNameParserRuleCall_5_2_0 = (RuleCall)cMapperClassNameAssignment_5_2.eContents().get(0);
		private final Assignment cDeclaredElementsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDeclaredElementsDeclaredElementParserRuleCall_6_0 = (RuleCall)cDeclaredElementsAssignment_6.eContents().get(0);
		private final Assignment cClassMappingsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cClassMappingsClassMappingParserRuleCall_7_0 = (RuleCall)cClassMappingsAssignment_7.eContents().get(0);
		
		////'end';
		//ApiDescription:
		//	"api" apiName=EString "described" "by" metamodelName=EString ("generic" "mapper" mapperClassName=QualifiedName)?
		//	declaredElements+=DeclaredElement* classMappings+=ClassMapping+;
		public ParserRule getRule() { return rule; }

		//"api" apiName=EString "described" "by" metamodelName=EString ("generic" "mapper" mapperClassName=QualifiedName)?
		//declaredElements+=DeclaredElement* classMappings+=ClassMapping+
		public Group getGroup() { return cGroup; }

		//"api"
		public Keyword getApiKeyword_0() { return cApiKeyword_0; }

		//apiName=EString
		public Assignment getApiNameAssignment_1() { return cApiNameAssignment_1; }

		//EString
		public RuleCall getApiNameEStringParserRuleCall_1_0() { return cApiNameEStringParserRuleCall_1_0; }

		//"described"
		public Keyword getDescribedKeyword_2() { return cDescribedKeyword_2; }

		//"by"
		public Keyword getByKeyword_3() { return cByKeyword_3; }

		//metamodelName=EString
		public Assignment getMetamodelNameAssignment_4() { return cMetamodelNameAssignment_4; }

		//EString
		public RuleCall getMetamodelNameEStringParserRuleCall_4_0() { return cMetamodelNameEStringParserRuleCall_4_0; }

		//("generic" "mapper" mapperClassName=QualifiedName)?
		public Group getGroup_5() { return cGroup_5; }

		//"generic"
		public Keyword getGenericKeyword_5_0() { return cGenericKeyword_5_0; }

		//"mapper"
		public Keyword getMapperKeyword_5_1() { return cMapperKeyword_5_1; }

		//mapperClassName=QualifiedName
		public Assignment getMapperClassNameAssignment_5_2() { return cMapperClassNameAssignment_5_2; }

		//QualifiedName
		public RuleCall getMapperClassNameQualifiedNameParserRuleCall_5_2_0() { return cMapperClassNameQualifiedNameParserRuleCall_5_2_0; }

		//declaredElements+=DeclaredElement*
		public Assignment getDeclaredElementsAssignment_6() { return cDeclaredElementsAssignment_6; }

		//DeclaredElement
		public RuleCall getDeclaredElementsDeclaredElementParserRuleCall_6_0() { return cDeclaredElementsDeclaredElementParserRuleCall_6_0; }

		//classMappings+=ClassMapping+
		public Assignment getClassMappingsAssignment_7() { return cClassMappingsAssignment_7; }

		//ClassMapping
		public RuleCall getClassMappingsClassMappingParserRuleCall_7_0() { return cClassMappingsClassMappingParserRuleCall_7_0; }
	}

	public class ClassMappingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ClassMapping");
		private final RuleCall cSimpleClassMappingParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ClassMapping:
		//	SimpleClassMapping;
		public ParserRule getRule() { return rule; }

		//SimpleClassMapping
		public RuleCall getSimpleClassMappingParserRuleCall() { return cSimpleClassMappingParserRuleCall; }
	}

	public class SimpleClassMappingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleClassMapping");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMetaclassKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMetaclassNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMetaclassNameEStringParserRuleCall_1_0 = (RuleCall)cMetaclassNameAssignment_1.eContents().get(0);
		private final Keyword cToKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCanonicalClassNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCanonicalClassNameQualifiedNameParserRuleCall_3_0 = (RuleCall)cCanonicalClassNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cCreationAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cCreationCreationMechanismParserRuleCall_4_1_0 = (RuleCall)cCreationAssignment_4_1.eContents().get(0);
		private final Assignment cFeatureMappingsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cFeatureMappingsFeatureMappingParserRuleCall_4_2_0 = (RuleCall)cFeatureMappingsAssignment_4_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		
		//SimpleClassMapping:
		//	"metaclass" metaclassName=EString "to" canonicalClassName=QualifiedName ("{" creation=CreationMechanism
		//	featureMappings+=FeatureMapping* "}")?;
		public ParserRule getRule() { return rule; }

		//"metaclass" metaclassName=EString "to" canonicalClassName=QualifiedName ("{" creation=CreationMechanism
		//featureMappings+=FeatureMapping* "}")?
		public Group getGroup() { return cGroup; }

		//"metaclass"
		public Keyword getMetaclassKeyword_0() { return cMetaclassKeyword_0; }

		//metaclassName=EString
		public Assignment getMetaclassNameAssignment_1() { return cMetaclassNameAssignment_1; }

		//EString
		public RuleCall getMetaclassNameEStringParserRuleCall_1_0() { return cMetaclassNameEStringParserRuleCall_1_0; }

		//"to"
		public Keyword getToKeyword_2() { return cToKeyword_2; }

		//canonicalClassName=QualifiedName
		public Assignment getCanonicalClassNameAssignment_3() { return cCanonicalClassNameAssignment_3; }

		//QualifiedName
		public RuleCall getCanonicalClassNameQualifiedNameParserRuleCall_3_0() { return cCanonicalClassNameQualifiedNameParserRuleCall_3_0; }

		//("{" creation=CreationMechanism featureMappings+=FeatureMapping* "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }

		//creation=CreationMechanism
		public Assignment getCreationAssignment_4_1() { return cCreationAssignment_4_1; }

		//CreationMechanism
		public RuleCall getCreationCreationMechanismParserRuleCall_4_1_0() { return cCreationCreationMechanismParserRuleCall_4_1_0; }

		//featureMappings+=FeatureMapping*
		public Assignment getFeatureMappingsAssignment_4_2() { return cFeatureMappingsAssignment_4_2; }

		//FeatureMapping
		public RuleCall getFeatureMappingsFeatureMappingParserRuleCall_4_2_0() { return cFeatureMappingsFeatureMappingParserRuleCall_4_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_3() { return cRightCurlyBracketKeyword_4_3; }
	}

	public class CreationMechanismElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CreationMechanism");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEmptyConstructorParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNonEmptyConstructorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//CreationMechanism:
		//	EmptyConstructor | NonEmptyConstructor;
		public ParserRule getRule() { return rule; }

		//EmptyConstructor | NonEmptyConstructor
		public Alternatives getAlternatives() { return cAlternatives; }

		//EmptyConstructor
		public RuleCall getEmptyConstructorParserRuleCall_0() { return cEmptyConstructorParserRuleCall_0; }

		//NonEmptyConstructor
		public RuleCall getNonEmptyConstructorParserRuleCall_1() { return cNonEmptyConstructorParserRuleCall_1; }
	}

	public class EmptyConstructorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EmptyConstructor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEmptyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Action cConstructorAction_1 = (Action)cGroup.eContents().get(1);
		private final Keyword cConstructorKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cStatementAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cStatementStatementParserRuleCall_3_1_0 = (RuleCall)cStatementAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		
		//EmptyConstructor returns Constructor:
		//	"empty" {Constructor} "constructor" ("{" statement+=Statement+ "}")?;
		public ParserRule getRule() { return rule; }

		//"empty" {Constructor} "constructor" ("{" statement+=Statement+ "}")?
		public Group getGroup() { return cGroup; }

		//"empty"
		public Keyword getEmptyKeyword_0() { return cEmptyKeyword_0; }

		//{Constructor}
		public Action getConstructorAction_1() { return cConstructorAction_1; }

		//"constructor"
		public Keyword getConstructorKeyword_2() { return cConstructorKeyword_2; }

		//("{" statement+=Statement+ "}")?
		public Group getGroup_3() { return cGroup_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }

		//statement+=Statement+
		public Assignment getStatementAssignment_3_1() { return cStatementAssignment_3_1; }

		//Statement
		public RuleCall getStatementStatementParserRuleCall_3_1_0() { return cStatementStatementParserRuleCall_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_2() { return cRightCurlyBracketKeyword_3_2; }
	}

	public class NonEmptyConstructorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NonEmptyConstructor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConstructorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cConstructorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cParametersAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cParametersFeatureMappingCrossReference_3_0 = (CrossReference)cParametersAssignment_3.eContents().get(0);
		private final RuleCall cParametersFeatureMappingIDTerminalRuleCall_3_0_1 = (RuleCall)cParametersFeatureMappingCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cParametersAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cParametersFeatureMappingCrossReference_4_1_0 = (CrossReference)cParametersAssignment_4_1.eContents().get(0);
		private final RuleCall cParametersFeatureMappingIDTerminalRuleCall_4_1_0_1 = (RuleCall)cParametersFeatureMappingCrossReference_4_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftCurlyBracketKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cStatementAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cStatementStatementParserRuleCall_6_1_0 = (RuleCall)cStatementAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		
		//NonEmptyConstructor returns Constructor:
		//	{Constructor} "constructor" "(" parameters+=[FeatureMapping] ("," parameters+=[FeatureMapping])* ")" ("{"
		//	statement+=Statement+ "}")?;
		public ParserRule getRule() { return rule; }

		//{Constructor} "constructor" "(" parameters+=[FeatureMapping] ("," parameters+=[FeatureMapping])* ")" ("{"
		//statement+=Statement+ "}")?
		public Group getGroup() { return cGroup; }

		//{Constructor}
		public Action getConstructorAction_0() { return cConstructorAction_0; }

		//"constructor"
		public Keyword getConstructorKeyword_1() { return cConstructorKeyword_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//parameters+=[FeatureMapping]
		public Assignment getParametersAssignment_3() { return cParametersAssignment_3; }

		//[FeatureMapping]
		public CrossReference getParametersFeatureMappingCrossReference_3_0() { return cParametersFeatureMappingCrossReference_3_0; }

		//ID
		public RuleCall getParametersFeatureMappingIDTerminalRuleCall_3_0_1() { return cParametersFeatureMappingIDTerminalRuleCall_3_0_1; }

		//("," parameters+=[FeatureMapping])*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//parameters+=[FeatureMapping]
		public Assignment getParametersAssignment_4_1() { return cParametersAssignment_4_1; }

		//[FeatureMapping]
		public CrossReference getParametersFeatureMappingCrossReference_4_1_0() { return cParametersFeatureMappingCrossReference_4_1_0; }

		//ID
		public RuleCall getParametersFeatureMappingIDTerminalRuleCall_4_1_0_1() { return cParametersFeatureMappingIDTerminalRuleCall_4_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }

		//("{" statement+=Statement+ "}")?
		public Group getGroup_6() { return cGroup_6; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6_0() { return cLeftCurlyBracketKeyword_6_0; }

		//statement+=Statement+
		public Assignment getStatementAssignment_6_1() { return cStatementAssignment_6_1; }

		//Statement
		public RuleCall getStatementStatementParserRuleCall_6_1_0() { return cStatementStatementParserRuleCall_6_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6_2() { return cRightCurlyBracketKeyword_6_2; }
	}

	public class StatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Statement");
		private final RuleCall cSetFeatureParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Statement:
		//	SetFeature;
		public ParserRule getRule() { return rule; }

		//SetFeature
		public RuleCall getSetFeatureParserRuleCall() { return cSetFeatureParserRuleCall; }
	}

	public class SetFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SetFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSetKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFeatureAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cFeatureFeatureMappingCrossReference_1_0 = (CrossReference)cFeatureAssignment_1.eContents().get(0);
		private final RuleCall cFeatureFeatureMappingIDTerminalRuleCall_1_0_1 = (RuleCall)cFeatureFeatureMappingCrossReference_1_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cIntValueAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cIntValueINTTerminalRuleCall_3_0_0 = (RuleCall)cIntValueAssignment_3_0.eContents().get(0);
		private final Assignment cStrValueAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cStrValueSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cStrValueAssignment_3_1.eContents().get(0);
		private final Assignment cBoolValueAssignment_3_2 = (Assignment)cAlternatives_3.eContents().get(2);
		private final RuleCall cBoolValueEBooleanParserRuleCall_3_2_0 = (RuleCall)cBoolValueAssignment_3_2.eContents().get(0);
		
		//SetFeature:
		//	"set" feature=[FeatureMapping] "=" (intValue=INT | strValue=STRING | boolValue=EBoolean);
		public ParserRule getRule() { return rule; }

		//"set" feature=[FeatureMapping] "=" (intValue=INT | strValue=STRING | boolValue=EBoolean)
		public Group getGroup() { return cGroup; }

		//"set"
		public Keyword getSetKeyword_0() { return cSetKeyword_0; }

		//feature=[FeatureMapping]
		public Assignment getFeatureAssignment_1() { return cFeatureAssignment_1; }

		//[FeatureMapping]
		public CrossReference getFeatureFeatureMappingCrossReference_1_0() { return cFeatureFeatureMappingCrossReference_1_0; }

		//ID
		public RuleCall getFeatureFeatureMappingIDTerminalRuleCall_1_0_1() { return cFeatureFeatureMappingIDTerminalRuleCall_1_0_1; }

		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }

		//intValue=INT | strValue=STRING | boolValue=EBoolean
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//intValue=INT
		public Assignment getIntValueAssignment_3_0() { return cIntValueAssignment_3_0; }

		//INT
		public RuleCall getIntValueINTTerminalRuleCall_3_0_0() { return cIntValueINTTerminalRuleCall_3_0_0; }

		//strValue=STRING
		public Assignment getStrValueAssignment_3_1() { return cStrValueAssignment_3_1; }

		//STRING
		public RuleCall getStrValueSTRINGTerminalRuleCall_3_1_0() { return cStrValueSTRINGTerminalRuleCall_3_1_0; }

		//boolValue=EBoolean
		public Assignment getBoolValueAssignment_3_2() { return cBoolValueAssignment_3_2; }

		//EBoolean
		public RuleCall getBoolValueEBooleanParserRuleCall_3_2_0() { return cBoolValueEBooleanParserRuleCall_3_2_0; }
	}

	public class FeatureMappingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FeatureMapping");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSimpleAttributeMappingParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSimpleReferenceMappingParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//FeatureMapping:
		//	SimpleAttributeMapping | SimpleReferenceMapping;
		public ParserRule getRule() { return rule; }

		//SimpleAttributeMapping | SimpleReferenceMapping
		public Alternatives getAlternatives() { return cAlternatives; }

		//SimpleAttributeMapping
		public RuleCall getSimpleAttributeMappingParserRuleCall_0() { return cSimpleAttributeMappingParserRuleCall_0; }

		//SimpleReferenceMapping
		public RuleCall getSimpleReferenceMappingParserRuleCall_1() { return cSimpleReferenceMappingParserRuleCall_1; }
	}

	public class SimpleAttributeMappingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleAttributeMapping");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttrKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFeatureNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFeatureNameEStringParserRuleCall_1_0 = (RuleCall)cFeatureNameAssignment_1.eContents().get(0);
		private final Assignment cIsMultivaluedAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cIsMultivaluedAsteriskKeyword_2_0 = (Keyword)cIsMultivaluedAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeIDTerminalRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cConstructorKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cColonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cConstructorTypeAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cConstructorTypeQualifiedNameParserRuleCall_5_2_0 = (RuleCall)cConstructorTypeAssignment_5_2.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cGetKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cGetMethodAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cGetMethodGetMechanismParserRuleCall_6_1_0 = (RuleCall)cGetMethodAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cSetKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cSetMethodAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cSetMethodSetMechanismParserRuleCall_7_1_0 = (RuleCall)cSetMethodAssignment_7_1.eContents().get(0);
		
		//SimpleAttributeMapping:
		//	"attr" featureName=EString isMultivalued?="*"? ":" type=ID ("constructor" ":" constructorType=QualifiedName)? ("get"
		//	getMethod=GetMechanism)? ("set" setMethod=SetMechanism)?;
		public ParserRule getRule() { return rule; }

		//"attr" featureName=EString isMultivalued?="*"? ":" type=ID ("constructor" ":" constructorType=QualifiedName)? ("get"
		//getMethod=GetMechanism)? ("set" setMethod=SetMechanism)?
		public Group getGroup() { return cGroup; }

		//"attr"
		public Keyword getAttrKeyword_0() { return cAttrKeyword_0; }

		//featureName=EString
		public Assignment getFeatureNameAssignment_1() { return cFeatureNameAssignment_1; }

		//EString
		public RuleCall getFeatureNameEStringParserRuleCall_1_0() { return cFeatureNameEStringParserRuleCall_1_0; }

		//isMultivalued?="*"?
		public Assignment getIsMultivaluedAssignment_2() { return cIsMultivaluedAssignment_2; }

		//"*"
		public Keyword getIsMultivaluedAsteriskKeyword_2_0() { return cIsMultivaluedAsteriskKeyword_2_0; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//type=ID
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }

		//ID
		public RuleCall getTypeIDTerminalRuleCall_4_0() { return cTypeIDTerminalRuleCall_4_0; }

		//("constructor" ":" constructorType=QualifiedName)?
		public Group getGroup_5() { return cGroup_5; }

		//"constructor"
		public Keyword getConstructorKeyword_5_0() { return cConstructorKeyword_5_0; }

		//":"
		public Keyword getColonKeyword_5_1() { return cColonKeyword_5_1; }

		//constructorType=QualifiedName
		public Assignment getConstructorTypeAssignment_5_2() { return cConstructorTypeAssignment_5_2; }

		//QualifiedName
		public RuleCall getConstructorTypeQualifiedNameParserRuleCall_5_2_0() { return cConstructorTypeQualifiedNameParserRuleCall_5_2_0; }

		//("get" getMethod=GetMechanism)?
		public Group getGroup_6() { return cGroup_6; }

		//"get"
		public Keyword getGetKeyword_6_0() { return cGetKeyword_6_0; }

		//getMethod=GetMechanism
		public Assignment getGetMethodAssignment_6_1() { return cGetMethodAssignment_6_1; }

		//GetMechanism
		public RuleCall getGetMethodGetMechanismParserRuleCall_6_1_0() { return cGetMethodGetMechanismParserRuleCall_6_1_0; }

		//("set" setMethod=SetMechanism)?
		public Group getGroup_7() { return cGroup_7; }

		//"set"
		public Keyword getSetKeyword_7_0() { return cSetKeyword_7_0; }

		//setMethod=SetMechanism
		public Assignment getSetMethodAssignment_7_1() { return cSetMethodAssignment_7_1; }

		//SetMechanism
		public RuleCall getSetMethodSetMechanismParserRuleCall_7_1_0() { return cSetMethodSetMechanismParserRuleCall_7_1_0; }
	}

	public class SimpleReferenceMappingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleReferenceMapping");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFeatureNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFeatureNameEStringParserRuleCall_1_0 = (RuleCall)cFeatureNameAssignment_1.eContents().get(0);
		private final Assignment cIsMultivaluedAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cIsMultivaluedAsteriskKeyword_2_0 = (Keyword)cIsMultivaluedAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cTypeClassMappingCrossReference_4_0 = (CrossReference)cTypeAssignment_4.eContents().get(0);
		private final RuleCall cTypeClassMappingIDTerminalRuleCall_4_0_1 = (RuleCall)cTypeClassMappingCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cConstructorKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cColonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cConstructorTypeAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cConstructorTypeQualifiedNameParserRuleCall_5_2_0 = (RuleCall)cConstructorTypeAssignment_5_2.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cGetKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cGetMethodAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cGetMethodGetMechanismParserRuleCall_6_1_0 = (RuleCall)cGetMethodAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cSetKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cSetMethodAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cSetMethodSetMechanismParserRuleCall_7_1_0 = (RuleCall)cSetMethodAssignment_7_1.eContents().get(0);
		
		/// *
		// * enum PrimitiveType : 
		//	PRIMITIVE_STRING='String' |
		//	PRIMITIVE_BOOLEAN='Boolean' |
		//	PRIMITIVE_INTEGER='Integer'		
		//;
		// * / SimpleReferenceMapping:
		//	"ref" featureName=EString isMultivalued?="*"? ":" type=[ClassMapping] ("constructor" ":"
		//	constructorType=QualifiedName)? ("get" getMethod=GetMechanism)? ("set" setMethod=SetMechanism)?;
		public ParserRule getRule() { return rule; }

		//"ref" featureName=EString isMultivalued?="*"? ":" type=[ClassMapping] ("constructor" ":" constructorType=QualifiedName)?
		//("get" getMethod=GetMechanism)? ("set" setMethod=SetMechanism)?
		public Group getGroup() { return cGroup; }

		//"ref"
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }

		//featureName=EString
		public Assignment getFeatureNameAssignment_1() { return cFeatureNameAssignment_1; }

		//EString
		public RuleCall getFeatureNameEStringParserRuleCall_1_0() { return cFeatureNameEStringParserRuleCall_1_0; }

		//isMultivalued?="*"?
		public Assignment getIsMultivaluedAssignment_2() { return cIsMultivaluedAssignment_2; }

		//"*"
		public Keyword getIsMultivaluedAsteriskKeyword_2_0() { return cIsMultivaluedAsteriskKeyword_2_0; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//type=[ClassMapping]
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }

		//[ClassMapping]
		public CrossReference getTypeClassMappingCrossReference_4_0() { return cTypeClassMappingCrossReference_4_0; }

		//ID
		public RuleCall getTypeClassMappingIDTerminalRuleCall_4_0_1() { return cTypeClassMappingIDTerminalRuleCall_4_0_1; }

		//("constructor" ":" constructorType=QualifiedName)?
		public Group getGroup_5() { return cGroup_5; }

		//"constructor"
		public Keyword getConstructorKeyword_5_0() { return cConstructorKeyword_5_0; }

		//":"
		public Keyword getColonKeyword_5_1() { return cColonKeyword_5_1; }

		//constructorType=QualifiedName
		public Assignment getConstructorTypeAssignment_5_2() { return cConstructorTypeAssignment_5_2; }

		//QualifiedName
		public RuleCall getConstructorTypeQualifiedNameParserRuleCall_5_2_0() { return cConstructorTypeQualifiedNameParserRuleCall_5_2_0; }

		//("get" getMethod=GetMechanism)?
		public Group getGroup_6() { return cGroup_6; }

		//"get"
		public Keyword getGetKeyword_6_0() { return cGetKeyword_6_0; }

		//getMethod=GetMechanism
		public Assignment getGetMethodAssignment_6_1() { return cGetMethodAssignment_6_1; }

		//GetMechanism
		public RuleCall getGetMethodGetMechanismParserRuleCall_6_1_0() { return cGetMethodGetMechanismParserRuleCall_6_1_0; }

		//("set" setMethod=SetMechanism)?
		public Group getGroup_7() { return cGroup_7; }

		//"set"
		public Keyword getSetKeyword_7_0() { return cSetKeyword_7_0; }

		//setMethod=SetMechanism
		public Assignment getSetMethodAssignment_7_1() { return cSetMethodAssignment_7_1; }

		//SetMechanism
		public RuleCall getSetMethodSetMechanismParserRuleCall_7_1_0() { return cSetMethodSetMechanismParserRuleCall_7_1_0; }
	}

	public class GetMechanismElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GetMechanism");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSimpleGetParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGenericGetParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cIteratorGetParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//GetMechanism:
		//	SimpleGet | GenericGet | IteratorGet;
		public ParserRule getRule() { return rule; }

		//SimpleGet | GenericGet | IteratorGet
		public Alternatives getAlternatives() { return cAlternatives; }

		//SimpleGet
		public RuleCall getSimpleGetParserRuleCall_0() { return cSimpleGetParserRuleCall_0; }

		//GenericGet
		public RuleCall getGenericGetParserRuleCall_1() { return cGenericGetParserRuleCall_1; }

		//IteratorGet
		public RuleCall getIteratorGetParserRuleCall_2() { return cIteratorGetParserRuleCall_2; }
	}

	public class SetMechanismElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SetMechanism");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSimpleSetParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGenericSetParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//SetMechanism:
		//	SimpleSet | GenericSet;
		public ParserRule getRule() { return rule; }

		//SimpleSet | GenericSet
		public Alternatives getAlternatives() { return cAlternatives; }

		//SimpleSet
		public RuleCall getSimpleSetParserRuleCall_0() { return cSimpleSetParserRuleCall_0; }

		//GenericSet
		public RuleCall getGenericSetParserRuleCall_1() { return cGenericSetParserRuleCall_1; }
	}

	public class SimpleGetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleGet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMethodKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cGetterAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cGetterMethodParserRuleCall_1_0 = (RuleCall)cGetterAssignment_1.eContents().get(0);
		
		//SimpleGet:
		//	"method" getter=Method;
		public ParserRule getRule() { return rule; }

		//"method" getter=Method
		public Group getGroup() { return cGroup; }

		//"method"
		public Keyword getMethodKeyword_0() { return cMethodKeyword_0; }

		//getter=Method
		public Assignment getGetterAssignment_1() { return cGetterAssignment_1; }

		//Method
		public RuleCall getGetterMethodParserRuleCall_1_0() { return cGetterMethodParserRuleCall_1_0; }
	}

	public class SimpleSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMethodKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSetterAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSetterMethodParserRuleCall_1_0 = (RuleCall)cSetterAssignment_1.eContents().get(0);
		
		//SimpleSet:
		//	"method" setter=Method;
		public ParserRule getRule() { return rule; }

		//"method" setter=Method
		public Group getGroup() { return cGroup; }

		//"method"
		public Keyword getMethodKeyword_0() { return cMethodKeyword_0; }

		//setter=Method
		public Assignment getSetterAssignment_1() { return cSetterAssignment_1; }

		//Method
		public RuleCall getSetterMethodParserRuleCall_1_0() { return cSetterMethodParserRuleCall_1_0; }
	}

	public class GenericGetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GenericGet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGenericKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cGetterAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cGetterMethodParserRuleCall_1_0 = (RuleCall)cGetterAssignment_1.eContents().get(0);
		
		//GenericGet:
		//	"generic" getter=Method;
		public ParserRule getRule() { return rule; }

		//"generic" getter=Method
		public Group getGroup() { return cGroup; }

		//"generic"
		public Keyword getGenericKeyword_0() { return cGenericKeyword_0; }

		//getter=Method
		public Assignment getGetterAssignment_1() { return cGetterAssignment_1; }

		//Method
		public RuleCall getGetterMethodParserRuleCall_1_0() { return cGetterMethodParserRuleCall_1_0; }
	}

	public class GenericSetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GenericSet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGenericKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSetterAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSetterMethodParserRuleCall_1_0 = (RuleCall)cSetterAssignment_1.eContents().get(0);
		
		//GenericSet:
		//	"generic" setter=Method;
		public ParserRule getRule() { return rule; }

		//"generic" setter=Method
		public Group getGroup() { return cGroup; }

		//"generic"
		public Keyword getGenericKeyword_0() { return cGenericKeyword_0; }

		//setter=Method
		public Assignment getSetterAssignment_1() { return cSetterAssignment_1; }

		//Method
		public RuleCall getSetterMethodParserRuleCall_1_0() { return cSetterMethodParserRuleCall_1_0; }
	}

	public class IteratorGetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IteratorGet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIteratorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIteratorAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cIteratorIteratorDescriptionCrossReference_1_0 = (CrossReference)cIteratorAssignment_1.eContents().get(0);
		private final RuleCall cIteratorIteratorDescriptionIDTerminalRuleCall_1_0_1 = (RuleCall)cIteratorIteratorDescriptionCrossReference_1_0.eContents().get(1);
		private final Keyword cMethodKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cGetIteratorAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cGetIteratorMethodParserRuleCall_3_0 = (RuleCall)cGetIteratorAssignment_3.eContents().get(0);
		
		//IteratorGet returns patterns::IteratorGetter:
		//	"iterator" iterator=[patterns::IteratorDescription] "method" getIterator=Method;
		public ParserRule getRule() { return rule; }

		//"iterator" iterator=[patterns::IteratorDescription] "method" getIterator=Method
		public Group getGroup() { return cGroup; }

		//"iterator"
		public Keyword getIteratorKeyword_0() { return cIteratorKeyword_0; }

		//iterator=[patterns::IteratorDescription]
		public Assignment getIteratorAssignment_1() { return cIteratorAssignment_1; }

		//[patterns::IteratorDescription]
		public CrossReference getIteratorIteratorDescriptionCrossReference_1_0() { return cIteratorIteratorDescriptionCrossReference_1_0; }

		//ID
		public RuleCall getIteratorIteratorDescriptionIDTerminalRuleCall_1_0_1() { return cIteratorIteratorDescriptionIDTerminalRuleCall_1_0_1; }

		//"method"
		public Keyword getMethodKeyword_2() { return cMethodKeyword_2; }

		//getIterator=Method
		public Assignment getGetIteratorAssignment_3() { return cGetIteratorAssignment_3; }

		//Method
		public RuleCall getGetIteratorMethodParserRuleCall_3_0() { return cGetIteratorMethodParserRuleCall_3_0; }
	}

	public class DeclaredElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DeclaredElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIteratorDescriptionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cObserverDescriptionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//// Being-of patterns
		//DeclaredElement:
		//	IteratorDescription | ObserverDescription;
		public ParserRule getRule() { return rule; }

		//IteratorDescription | ObserverDescription
		public Alternatives getAlternatives() { return cAlternatives; }

		//IteratorDescription
		public RuleCall getIteratorDescriptionParserRuleCall_0() { return cIteratorDescriptionParserRuleCall_0; }

		//ObserverDescription
		public RuleCall getObserverDescriptionParserRuleCall_1() { return cObserverDescriptionParserRuleCall_1; }
	}

	public class IteratorDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IteratorDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIteratorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cIteratorClassAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIteratorClassQualifiedNameParserRuleCall_3_0 = (RuleCall)cIteratorClassAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cFinishedKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cHasFinishedAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cHasFinishedMethodParserRuleCall_6_0 = (RuleCall)cHasFinishedAssignment_6.eContents().get(0);
		private final Keyword cNextKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cNextElementAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cNextElementMethodParserRuleCall_8_0 = (RuleCall)cNextElementAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//IteratorDescription returns patterns::IteratorDescription:
		//	"iterator" name=ID ":" iteratorClass=QualifiedName "{" "finished" hasFinished=Method "next" nextElement=Method "}";
		public ParserRule getRule() { return rule; }

		//"iterator" name=ID ":" iteratorClass=QualifiedName "{" "finished" hasFinished=Method "next" nextElement=Method "}"
		public Group getGroup() { return cGroup; }

		//"iterator"
		public Keyword getIteratorKeyword_0() { return cIteratorKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//iteratorClass=QualifiedName
		public Assignment getIteratorClassAssignment_3() { return cIteratorClassAssignment_3; }

		//QualifiedName
		public RuleCall getIteratorClassQualifiedNameParserRuleCall_3_0() { return cIteratorClassQualifiedNameParserRuleCall_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//"finished"
		public Keyword getFinishedKeyword_5() { return cFinishedKeyword_5; }

		//hasFinished=Method
		public Assignment getHasFinishedAssignment_6() { return cHasFinishedAssignment_6; }

		//Method
		public RuleCall getHasFinishedMethodParserRuleCall_6_0() { return cHasFinishedMethodParserRuleCall_6_0; }

		//"next"
		public Keyword getNextKeyword_7() { return cNextKeyword_7; }

		//nextElement=Method
		public Assignment getNextElementAssignment_8() { return cNextElementAssignment_8; }

		//Method
		public RuleCall getNextElementMethodParserRuleCall_8_0() { return cNextElementMethodParserRuleCall_8_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class ObserverDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ObserverDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cObserverKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cObserverClassAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cObserverClassQualifiedNameParserRuleCall_3_0 = (RuleCall)cObserverClassAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cUpdateMethodsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cUpdateMethodsUpdateMethodParserRuleCall_5_0 = (RuleCall)cUpdateMethodsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ObserverDescription returns patterns::ObserverDescription:
		//	"observer" name=ID ":" observerClass=QualifiedName "{" updateMethods+=UpdateMethod+ "}";
		public ParserRule getRule() { return rule; }

		//"observer" name=ID ":" observerClass=QualifiedName "{" updateMethods+=UpdateMethod+ "}"
		public Group getGroup() { return cGroup; }

		//"observer"
		public Keyword getObserverKeyword_0() { return cObserverKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//observerClass=QualifiedName
		public Assignment getObserverClassAssignment_3() { return cObserverClassAssignment_3; }

		//QualifiedName
		public RuleCall getObserverClassQualifiedNameParserRuleCall_3_0() { return cObserverClassQualifiedNameParserRuleCall_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//updateMethods+=UpdateMethod+
		public Assignment getUpdateMethodsAssignment_5() { return cUpdateMethodsAssignment_5; }

		//UpdateMethod
		public RuleCall getUpdateMethodsUpdateMethodParserRuleCall_5_0() { return cUpdateMethodsUpdateMethodParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class UpdateMethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UpdateMethod");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUpdateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cInterestAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cInterestINTTerminalRuleCall_1_1_0 = (RuleCall)cInterestAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cInterestAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cInterestINTTerminalRuleCall_1_2_1_0 = (RuleCall)cInterestAssignment_1_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cParameterTypesAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cParameterTypesQualifiedNameParserRuleCall_4_0_0 = (RuleCall)cParameterTypesAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cParameterTypesAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cParameterTypesQualifiedNameParserRuleCall_4_1_1_0 = (RuleCall)cParameterTypesAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final Group cGroup_7_0 = (Group)cAlternatives_7.eContents().get(0);
		private final Assignment cReturnArrayAssignment_7_0_0 = (Assignment)cGroup_7_0.eContents().get(0);
		private final Keyword cReturnArrayArrayKeyword_7_0_0_0 = (Keyword)cReturnArrayAssignment_7_0_0.eContents().get(0);
		private final Keyword cLessThanSignKeyword_7_0_1 = (Keyword)cGroup_7_0.eContents().get(1);
		private final Assignment cReturnTypeAssignment_7_0_2 = (Assignment)cGroup_7_0.eContents().get(2);
		private final RuleCall cReturnTypeQualifiedNameParserRuleCall_7_0_2_0 = (RuleCall)cReturnTypeAssignment_7_0_2.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_7_0_3 = (Keyword)cGroup_7_0.eContents().get(3);
		private final Group cGroup_7_1 = (Group)cAlternatives_7.eContents().get(1);
		private final Assignment cReturnCollectionAssignment_7_1_0 = (Assignment)cGroup_7_1.eContents().get(0);
		private final Keyword cReturnCollectionCollectionKeyword_7_1_0_0 = (Keyword)cReturnCollectionAssignment_7_1_0.eContents().get(0);
		private final Keyword cLessThanSignKeyword_7_1_1 = (Keyword)cGroup_7_1.eContents().get(1);
		private final Assignment cReturnTypeAssignment_7_1_2 = (Assignment)cGroup_7_1.eContents().get(2);
		private final RuleCall cReturnTypeQualifiedNameParserRuleCall_7_1_2_0 = (RuleCall)cReturnTypeAssignment_7_1_2.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_7_1_3 = (Keyword)cGroup_7_1.eContents().get(3);
		private final Assignment cReturnTypeAssignment_7_2 = (Assignment)cAlternatives_7.eContents().get(2);
		private final RuleCall cReturnTypeQualifiedNameParserRuleCall_7_2_0 = (RuleCall)cReturnTypeAssignment_7_2.eContents().get(0);
		private final Assignment cReturnVoidAssignment_7_3 = (Assignment)cAlternatives_7.eContents().get(3);
		private final Keyword cReturnVoidVoidKeyword_7_3_0 = (Keyword)cReturnVoidAssignment_7_3.eContents().get(0);
		
		//// copied from method
		//UpdateMethod returns patterns::UpdateMethod:
		//	"update" ("[" interest+=INT ("," interest+=INT)* "]")? name=EString "(" (parameterTypes+=QualifiedName (","
		//	parameterTypes+=QualifiedName)*)? ")" ":" (returnArray?="Array" "<" returnType=QualifiedName ">" |
		//	returnCollection?="Collection" "<" returnType=QualifiedName ">" | returnType=QualifiedName | returnVoid?="void");
		public ParserRule getRule() { return rule; }

		//"update" ("[" interest+=INT ("," interest+=INT)* "]")? name=EString "(" (parameterTypes+=QualifiedName (","
		//parameterTypes+=QualifiedName)*)? ")" ":" (returnArray?="Array" "<" returnType=QualifiedName ">" |
		//returnCollection?="Collection" "<" returnType=QualifiedName ">" | returnType=QualifiedName | returnVoid?="void")
		public Group getGroup() { return cGroup; }

		//"update"
		public Keyword getUpdateKeyword_0() { return cUpdateKeyword_0; }

		//("[" interest+=INT ("," interest+=INT)* "]")?
		public Group getGroup_1() { return cGroup_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1_0() { return cLeftSquareBracketKeyword_1_0; }

		//interest+=INT
		public Assignment getInterestAssignment_1_1() { return cInterestAssignment_1_1; }

		//INT
		public RuleCall getInterestINTTerminalRuleCall_1_1_0() { return cInterestINTTerminalRuleCall_1_1_0; }

		//("," interest+=INT)*
		public Group getGroup_1_2() { return cGroup_1_2; }

		//","
		public Keyword getCommaKeyword_1_2_0() { return cCommaKeyword_1_2_0; }

		//interest+=INT
		public Assignment getInterestAssignment_1_2_1() { return cInterestAssignment_1_2_1; }

		//INT
		public RuleCall getInterestINTTerminalRuleCall_1_2_1_0() { return cInterestINTTerminalRuleCall_1_2_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_1_3() { return cRightSquareBracketKeyword_1_3; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }

		//(parameterTypes+=QualifiedName ("," parameterTypes+=QualifiedName)*)?
		public Group getGroup_4() { return cGroup_4; }

		//parameterTypes+=QualifiedName
		public Assignment getParameterTypesAssignment_4_0() { return cParameterTypesAssignment_4_0; }

		//QualifiedName
		public RuleCall getParameterTypesQualifiedNameParserRuleCall_4_0_0() { return cParameterTypesQualifiedNameParserRuleCall_4_0_0; }

		//("," parameterTypes+=QualifiedName)*
		public Group getGroup_4_1() { return cGroup_4_1; }

		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }

		//parameterTypes+=QualifiedName
		public Assignment getParameterTypesAssignment_4_1_1() { return cParameterTypesAssignment_4_1_1; }

		//QualifiedName
		public RuleCall getParameterTypesQualifiedNameParserRuleCall_4_1_1_0() { return cParameterTypesQualifiedNameParserRuleCall_4_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }

		//":"
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }

		//returnArray?="Array" "<" returnType=QualifiedName ">" | returnCollection?="Collection" "<" returnType=QualifiedName ">"
		//| returnType=QualifiedName | returnVoid?="void"
		public Alternatives getAlternatives_7() { return cAlternatives_7; }

		//returnArray?="Array" "<" returnType=QualifiedName ">"
		public Group getGroup_7_0() { return cGroup_7_0; }

		//returnArray?="Array"
		public Assignment getReturnArrayAssignment_7_0_0() { return cReturnArrayAssignment_7_0_0; }

		//"Array"
		public Keyword getReturnArrayArrayKeyword_7_0_0_0() { return cReturnArrayArrayKeyword_7_0_0_0; }

		//"<"
		public Keyword getLessThanSignKeyword_7_0_1() { return cLessThanSignKeyword_7_0_1; }

		//returnType=QualifiedName
		public Assignment getReturnTypeAssignment_7_0_2() { return cReturnTypeAssignment_7_0_2; }

		//QualifiedName
		public RuleCall getReturnTypeQualifiedNameParserRuleCall_7_0_2_0() { return cReturnTypeQualifiedNameParserRuleCall_7_0_2_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_7_0_3() { return cGreaterThanSignKeyword_7_0_3; }

		//returnCollection?="Collection" "<" returnType=QualifiedName ">"
		public Group getGroup_7_1() { return cGroup_7_1; }

		//returnCollection?="Collection"
		public Assignment getReturnCollectionAssignment_7_1_0() { return cReturnCollectionAssignment_7_1_0; }

		//"Collection"
		public Keyword getReturnCollectionCollectionKeyword_7_1_0_0() { return cReturnCollectionCollectionKeyword_7_1_0_0; }

		//"<"
		public Keyword getLessThanSignKeyword_7_1_1() { return cLessThanSignKeyword_7_1_1; }

		//returnType=QualifiedName
		public Assignment getReturnTypeAssignment_7_1_2() { return cReturnTypeAssignment_7_1_2; }

		//QualifiedName
		public RuleCall getReturnTypeQualifiedNameParserRuleCall_7_1_2_0() { return cReturnTypeQualifiedNameParserRuleCall_7_1_2_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_7_1_3() { return cGreaterThanSignKeyword_7_1_3; }

		//returnType=QualifiedName
		public Assignment getReturnTypeAssignment_7_2() { return cReturnTypeAssignment_7_2; }

		//QualifiedName
		public RuleCall getReturnTypeQualifiedNameParserRuleCall_7_2_0() { return cReturnTypeQualifiedNameParserRuleCall_7_2_0; }

		//returnVoid?="void"
		public Assignment getReturnVoidAssignment_7_3() { return cReturnVoidAssignment_7_3; }

		//"void"
		public Keyword getReturnVoidVoidKeyword_7_3_0() { return cReturnVoidVoidKeyword_7_3_0; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//// End-of patterns
		//EString returns ecore::EString:
		//	STRING | ID;
		public ParserRule getRule() { return rule; }

		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}

	public class MethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Method");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cParameterTypesAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cParameterTypesQualifiedNameParserRuleCall_2_0_0 = (RuleCall)cParameterTypesAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cParameterTypesAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cParameterTypesQualifiedNameParserRuleCall_2_1_1_0 = (RuleCall)cParameterTypesAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cAlternatives_5.eContents().get(0);
		private final Assignment cReturnArrayAssignment_5_0_0 = (Assignment)cGroup_5_0.eContents().get(0);
		private final Keyword cReturnArrayArrayKeyword_5_0_0_0 = (Keyword)cReturnArrayAssignment_5_0_0.eContents().get(0);
		private final Keyword cLessThanSignKeyword_5_0_1 = (Keyword)cGroup_5_0.eContents().get(1);
		private final Assignment cReturnTypeAssignment_5_0_2 = (Assignment)cGroup_5_0.eContents().get(2);
		private final RuleCall cReturnTypeQualifiedNameParserRuleCall_5_0_2_0 = (RuleCall)cReturnTypeAssignment_5_0_2.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_5_0_3 = (Keyword)cGroup_5_0.eContents().get(3);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final Assignment cReturnCollectionAssignment_5_1_0 = (Assignment)cGroup_5_1.eContents().get(0);
		private final Keyword cReturnCollectionCollectionKeyword_5_1_0_0 = (Keyword)cReturnCollectionAssignment_5_1_0.eContents().get(0);
		private final Keyword cLessThanSignKeyword_5_1_1 = (Keyword)cGroup_5_1.eContents().get(1);
		private final Assignment cReturnTypeAssignment_5_1_2 = (Assignment)cGroup_5_1.eContents().get(2);
		private final RuleCall cReturnTypeQualifiedNameParserRuleCall_5_1_2_0 = (RuleCall)cReturnTypeAssignment_5_1_2.eContents().get(0);
		private final Keyword cGreaterThanSignKeyword_5_1_3 = (Keyword)cGroup_5_1.eContents().get(3);
		private final Assignment cReturnTypeAssignment_5_2 = (Assignment)cAlternatives_5.eContents().get(2);
		private final RuleCall cReturnTypeQualifiedNameParserRuleCall_5_2_0 = (RuleCall)cReturnTypeAssignment_5_2.eContents().get(0);
		private final Assignment cReturnVoidAssignment_5_3 = (Assignment)cAlternatives_5.eContents().get(3);
		private final Keyword cReturnVoidVoidKeyword_5_3_0 = (Keyword)cReturnVoidAssignment_5_3.eContents().get(0);
		
		////'{'
		////	('parameterTypes' '{' parameterTypes+=EString ( "," parameterTypes+=EString)* '}' )?
		////	('returnType' returnType=EString)?
		////	'returnKind' returnKind=ReturnKind
		////'}';
		//Method:
		//	name=EString "(" (parameterTypes+=QualifiedName ("," parameterTypes+=QualifiedName)*)? ")" ":" (returnArray?="Array"
		//	"<" returnType=QualifiedName ">" | returnCollection?="Collection" "<" returnType=QualifiedName ">" |
		//	returnType=QualifiedName | returnVoid?="void");
		public ParserRule getRule() { return rule; }

		//name=EString "(" (parameterTypes+=QualifiedName ("," parameterTypes+=QualifiedName)*)? ")" ":" (returnArray?="Array" "<"
		//returnType=QualifiedName ">" | returnCollection?="Collection" "<" returnType=QualifiedName ">" |
		//returnType=QualifiedName | returnVoid?="void")
		public Group getGroup() { return cGroup; }

		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }

		//(parameterTypes+=QualifiedName ("," parameterTypes+=QualifiedName)*)?
		public Group getGroup_2() { return cGroup_2; }

		//parameterTypes+=QualifiedName
		public Assignment getParameterTypesAssignment_2_0() { return cParameterTypesAssignment_2_0; }

		//QualifiedName
		public RuleCall getParameterTypesQualifiedNameParserRuleCall_2_0_0() { return cParameterTypesQualifiedNameParserRuleCall_2_0_0; }

		//("," parameterTypes+=QualifiedName)*
		public Group getGroup_2_1() { return cGroup_2_1; }

		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }

		//parameterTypes+=QualifiedName
		public Assignment getParameterTypesAssignment_2_1_1() { return cParameterTypesAssignment_2_1_1; }

		//QualifiedName
		public RuleCall getParameterTypesQualifiedNameParserRuleCall_2_1_1_0() { return cParameterTypesQualifiedNameParserRuleCall_2_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3() { return cRightParenthesisKeyword_3; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//returnArray?="Array" "<" returnType=QualifiedName ">" | returnCollection?="Collection" "<" returnType=QualifiedName ">"
		//| returnType=QualifiedName | returnVoid?="void"
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//returnArray?="Array" "<" returnType=QualifiedName ">"
		public Group getGroup_5_0() { return cGroup_5_0; }

		//returnArray?="Array"
		public Assignment getReturnArrayAssignment_5_0_0() { return cReturnArrayAssignment_5_0_0; }

		//"Array"
		public Keyword getReturnArrayArrayKeyword_5_0_0_0() { return cReturnArrayArrayKeyword_5_0_0_0; }

		//"<"
		public Keyword getLessThanSignKeyword_5_0_1() { return cLessThanSignKeyword_5_0_1; }

		//returnType=QualifiedName
		public Assignment getReturnTypeAssignment_5_0_2() { return cReturnTypeAssignment_5_0_2; }

		//QualifiedName
		public RuleCall getReturnTypeQualifiedNameParserRuleCall_5_0_2_0() { return cReturnTypeQualifiedNameParserRuleCall_5_0_2_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_5_0_3() { return cGreaterThanSignKeyword_5_0_3; }

		//returnCollection?="Collection" "<" returnType=QualifiedName ">"
		public Group getGroup_5_1() { return cGroup_5_1; }

		//returnCollection?="Collection"
		public Assignment getReturnCollectionAssignment_5_1_0() { return cReturnCollectionAssignment_5_1_0; }

		//"Collection"
		public Keyword getReturnCollectionCollectionKeyword_5_1_0_0() { return cReturnCollectionCollectionKeyword_5_1_0_0; }

		//"<"
		public Keyword getLessThanSignKeyword_5_1_1() { return cLessThanSignKeyword_5_1_1; }

		//returnType=QualifiedName
		public Assignment getReturnTypeAssignment_5_1_2() { return cReturnTypeAssignment_5_1_2; }

		//QualifiedName
		public RuleCall getReturnTypeQualifiedNameParserRuleCall_5_1_2_0() { return cReturnTypeQualifiedNameParserRuleCall_5_1_2_0; }

		//">"
		public Keyword getGreaterThanSignKeyword_5_1_3() { return cGreaterThanSignKeyword_5_1_3; }

		//returnType=QualifiedName
		public Assignment getReturnTypeAssignment_5_2() { return cReturnTypeAssignment_5_2; }

		//QualifiedName
		public RuleCall getReturnTypeQualifiedNameParserRuleCall_5_2_0() { return cReturnTypeQualifiedNameParserRuleCall_5_2_0; }

		//returnVoid?="void"
		public Assignment getReturnVoidAssignment_5_3() { return cReturnVoidAssignment_5_3; }

		//"void"
		public Keyword getReturnVoidVoidKeyword_5_3_0() { return cReturnVoidVoidKeyword_5_3_0; }
	}

	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//	"true" | "false";
		public ParserRule getRule() { return rule; }

		//"true" | "false"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"true"
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }

		//"false"
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}

	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//// TODO: Replace with XBase
		//QualifiedName returns ecore::EString:
		//	ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//(=> "." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//=> "."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	
	
	public class SetKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "SetKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPRIMITIVE_STRINGEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPRIMITIVE_STRINGStringKeyword_0_0 = (Keyword)cPRIMITIVE_STRINGEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPRIMITIVE_BOOLEANEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPRIMITIVE_BOOLEANBooleanKeyword_1_0 = (Keyword)cPRIMITIVE_BOOLEANEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cPRIMITIVE_INTEGEREnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cPRIMITIVE_INTEGERIntegerKeyword_2_0 = (Keyword)cPRIMITIVE_INTEGEREnumLiteralDeclaration_2.eContents().get(0);
		
		//// Not sure if needed
		//enum SetKind returns ReturnKind:
		//	PRIMITIVE_STRING="String" | PRIMITIVE_BOOLEAN="Boolean" | PRIMITIVE_INTEGER="Integer";
		public EnumRule getRule() { return rule; }

		//PRIMITIVE_STRING="String" | PRIMITIVE_BOOLEAN="Boolean" | PRIMITIVE_INTEGER="Integer"
		public Alternatives getAlternatives() { return cAlternatives; }

		//PRIMITIVE_STRING="String"
		public EnumLiteralDeclaration getPRIMITIVE_STRINGEnumLiteralDeclaration_0() { return cPRIMITIVE_STRINGEnumLiteralDeclaration_0; }

		//"String"
		public Keyword getPRIMITIVE_STRINGStringKeyword_0_0() { return cPRIMITIVE_STRINGStringKeyword_0_0; }

		//PRIMITIVE_BOOLEAN="Boolean"
		public EnumLiteralDeclaration getPRIMITIVE_BOOLEANEnumLiteralDeclaration_1() { return cPRIMITIVE_BOOLEANEnumLiteralDeclaration_1; }

		//"Boolean"
		public Keyword getPRIMITIVE_BOOLEANBooleanKeyword_1_0() { return cPRIMITIVE_BOOLEANBooleanKeyword_1_0; }

		//PRIMITIVE_INTEGER="Integer"
		public EnumLiteralDeclaration getPRIMITIVE_INTEGEREnumLiteralDeclaration_2() { return cPRIMITIVE_INTEGEREnumLiteralDeclaration_2; }

		//"Integer"
		public Keyword getPRIMITIVE_INTEGERIntegerKeyword_2_0() { return cPRIMITIVE_INTEGERIntegerKeyword_2_0; }
	}

	public class ReturnKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ReturnKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSINGLE_OBJECTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSINGLE_OBJECTSINGLE_OBJECTKeyword_0_0 = (Keyword)cSINGLE_OBJECTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPRIMITIVE_INTEGEREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPRIMITIVE_INTEGERPRIMITIVE_INTEGERKeyword_1_0 = (Keyword)cPRIMITIVE_INTEGEREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cPRIMITIVE_STRINGEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cPRIMITIVE_STRINGPRIMITIVE_STRINGKeyword_2_0 = (Keyword)cPRIMITIVE_STRINGEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cPRIMITIVE_BOOLEANEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cPRIMITIVE_BOOLEANPRIMITIVE_BOOLEANKeyword_3_0 = (Keyword)cPRIMITIVE_BOOLEANEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cPRIMITIVE_DOUBLEEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cPRIMITIVE_DOUBLEPRIMITIVE_DOUBLEKeyword_4_0 = (Keyword)cPRIMITIVE_DOUBLEEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cPRIMITIVE_FLOATEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cPRIMITIVE_FLOATPRIMITIVE_FLOATKeyword_5_0 = (Keyword)cPRIMITIVE_FLOATEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cARRAYEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cARRAYARRAYKeyword_6_0 = (Keyword)cARRAYEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cCOLLECTIONEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cCOLLECTIONCOLLECTIONKeyword_7_0 = (Keyword)cCOLLECTIONEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cVOIDEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cVOIDVOIDKeyword_8_0 = (Keyword)cVOIDEnumLiteralDeclaration_8.eContents().get(0);
		
		//enum ReturnKind:
		//	SINGLE_OBJECT | PRIMITIVE_INTEGER | PRIMITIVE_STRING | PRIMITIVE_BOOLEAN | PRIMITIVE_DOUBLE | PRIMITIVE_FLOAT | ARRAY
		//	| COLLECTION | VOID;
		public EnumRule getRule() { return rule; }

		//SINGLE_OBJECT | PRIMITIVE_INTEGER | PRIMITIVE_STRING | PRIMITIVE_BOOLEAN | PRIMITIVE_DOUBLE | PRIMITIVE_FLOAT | ARRAY |
		//COLLECTION | VOID
		public Alternatives getAlternatives() { return cAlternatives; }

		//SINGLE_OBJECT
		public EnumLiteralDeclaration getSINGLE_OBJECTEnumLiteralDeclaration_0() { return cSINGLE_OBJECTEnumLiteralDeclaration_0; }

		//"SINGLE_OBJECT"
		public Keyword getSINGLE_OBJECTSINGLE_OBJECTKeyword_0_0() { return cSINGLE_OBJECTSINGLE_OBJECTKeyword_0_0; }

		//PRIMITIVE_INTEGER
		public EnumLiteralDeclaration getPRIMITIVE_INTEGEREnumLiteralDeclaration_1() { return cPRIMITIVE_INTEGEREnumLiteralDeclaration_1; }

		//"PRIMITIVE_INTEGER"
		public Keyword getPRIMITIVE_INTEGERPRIMITIVE_INTEGERKeyword_1_0() { return cPRIMITIVE_INTEGERPRIMITIVE_INTEGERKeyword_1_0; }

		//PRIMITIVE_STRING
		public EnumLiteralDeclaration getPRIMITIVE_STRINGEnumLiteralDeclaration_2() { return cPRIMITIVE_STRINGEnumLiteralDeclaration_2; }

		//"PRIMITIVE_STRING"
		public Keyword getPRIMITIVE_STRINGPRIMITIVE_STRINGKeyword_2_0() { return cPRIMITIVE_STRINGPRIMITIVE_STRINGKeyword_2_0; }

		//PRIMITIVE_BOOLEAN
		public EnumLiteralDeclaration getPRIMITIVE_BOOLEANEnumLiteralDeclaration_3() { return cPRIMITIVE_BOOLEANEnumLiteralDeclaration_3; }

		//"PRIMITIVE_BOOLEAN"
		public Keyword getPRIMITIVE_BOOLEANPRIMITIVE_BOOLEANKeyword_3_0() { return cPRIMITIVE_BOOLEANPRIMITIVE_BOOLEANKeyword_3_0; }

		//PRIMITIVE_DOUBLE
		public EnumLiteralDeclaration getPRIMITIVE_DOUBLEEnumLiteralDeclaration_4() { return cPRIMITIVE_DOUBLEEnumLiteralDeclaration_4; }

		//"PRIMITIVE_DOUBLE"
		public Keyword getPRIMITIVE_DOUBLEPRIMITIVE_DOUBLEKeyword_4_0() { return cPRIMITIVE_DOUBLEPRIMITIVE_DOUBLEKeyword_4_0; }

		//PRIMITIVE_FLOAT
		public EnumLiteralDeclaration getPRIMITIVE_FLOATEnumLiteralDeclaration_5() { return cPRIMITIVE_FLOATEnumLiteralDeclaration_5; }

		//"PRIMITIVE_FLOAT"
		public Keyword getPRIMITIVE_FLOATPRIMITIVE_FLOATKeyword_5_0() { return cPRIMITIVE_FLOATPRIMITIVE_FLOATKeyword_5_0; }

		//ARRAY
		public EnumLiteralDeclaration getARRAYEnumLiteralDeclaration_6() { return cARRAYEnumLiteralDeclaration_6; }

		//"ARRAY"
		public Keyword getARRAYARRAYKeyword_6_0() { return cARRAYARRAYKeyword_6_0; }

		//COLLECTION
		public EnumLiteralDeclaration getCOLLECTIONEnumLiteralDeclaration_7() { return cCOLLECTIONEnumLiteralDeclaration_7; }

		//"COLLECTION"
		public Keyword getCOLLECTIONCOLLECTIONKeyword_7_0() { return cCOLLECTIONCOLLECTIONKeyword_7_0; }

		//VOID
		public EnumLiteralDeclaration getVOIDEnumLiteralDeclaration_8() { return cVOIDEnumLiteralDeclaration_8; }

		//"VOID"
		public Keyword getVOIDVOIDKeyword_8_0() { return cVOIDVOIDKeyword_8_0; }
	}
	
	private ApiDescriptionElements pApiDescription;
	private ClassMappingElements pClassMapping;
	private SimpleClassMappingElements pSimpleClassMapping;
	private CreationMechanismElements pCreationMechanism;
	private EmptyConstructorElements pEmptyConstructor;
	private NonEmptyConstructorElements pNonEmptyConstructor;
	private StatementElements pStatement;
	private SetFeatureElements pSetFeature;
	private SetKindElements unknownRuleSetKind;
	private FeatureMappingElements pFeatureMapping;
	private SimpleAttributeMappingElements pSimpleAttributeMapping;
	private SimpleReferenceMappingElements pSimpleReferenceMapping;
	private GetMechanismElements pGetMechanism;
	private SetMechanismElements pSetMechanism;
	private SimpleGetElements pSimpleGet;
	private SimpleSetElements pSimpleSet;
	private GenericGetElements pGenericGet;
	private GenericSetElements pGenericSet;
	private IteratorGetElements pIteratorGet;
	private DeclaredElementElements pDeclaredElement;
	private IteratorDescriptionElements pIteratorDescription;
	private ObserverDescriptionElements pObserverDescription;
	private UpdateMethodElements pUpdateMethod;
	private EStringElements pEString;
	private MethodElements pMethod;
	private EBooleanElements pEBoolean;
	private ReturnKindElements unknownRuleReturnKind;
	private QualifiedNameElements pQualifiedName;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public ApiDescriptionLanguageGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	////'end';
	//ApiDescription:
	//	"api" apiName=EString "described" "by" metamodelName=EString ("generic" "mapper" mapperClassName=QualifiedName)?
	//	declaredElements+=DeclaredElement* classMappings+=ClassMapping+;
	public ApiDescriptionElements getApiDescriptionAccess() {
		return (pApiDescription != null) ? pApiDescription : (pApiDescription = new ApiDescriptionElements());
	}
	
	public ParserRule getApiDescriptionRule() {
		return getApiDescriptionAccess().getRule();
	}

	//ClassMapping:
	//	SimpleClassMapping;
	public ClassMappingElements getClassMappingAccess() {
		return (pClassMapping != null) ? pClassMapping : (pClassMapping = new ClassMappingElements());
	}
	
	public ParserRule getClassMappingRule() {
		return getClassMappingAccess().getRule();
	}

	//SimpleClassMapping:
	//	"metaclass" metaclassName=EString "to" canonicalClassName=QualifiedName ("{" creation=CreationMechanism
	//	featureMappings+=FeatureMapping* "}")?;
	public SimpleClassMappingElements getSimpleClassMappingAccess() {
		return (pSimpleClassMapping != null) ? pSimpleClassMapping : (pSimpleClassMapping = new SimpleClassMappingElements());
	}
	
	public ParserRule getSimpleClassMappingRule() {
		return getSimpleClassMappingAccess().getRule();
	}

	//CreationMechanism:
	//	EmptyConstructor | NonEmptyConstructor;
	public CreationMechanismElements getCreationMechanismAccess() {
		return (pCreationMechanism != null) ? pCreationMechanism : (pCreationMechanism = new CreationMechanismElements());
	}
	
	public ParserRule getCreationMechanismRule() {
		return getCreationMechanismAccess().getRule();
	}

	//EmptyConstructor returns Constructor:
	//	"empty" {Constructor} "constructor" ("{" statement+=Statement+ "}")?;
	public EmptyConstructorElements getEmptyConstructorAccess() {
		return (pEmptyConstructor != null) ? pEmptyConstructor : (pEmptyConstructor = new EmptyConstructorElements());
	}
	
	public ParserRule getEmptyConstructorRule() {
		return getEmptyConstructorAccess().getRule();
	}

	//NonEmptyConstructor returns Constructor:
	//	{Constructor} "constructor" "(" parameters+=[FeatureMapping] ("," parameters+=[FeatureMapping])* ")" ("{"
	//	statement+=Statement+ "}")?;
	public NonEmptyConstructorElements getNonEmptyConstructorAccess() {
		return (pNonEmptyConstructor != null) ? pNonEmptyConstructor : (pNonEmptyConstructor = new NonEmptyConstructorElements());
	}
	
	public ParserRule getNonEmptyConstructorRule() {
		return getNonEmptyConstructorAccess().getRule();
	}

	//Statement:
	//	SetFeature;
	public StatementElements getStatementAccess() {
		return (pStatement != null) ? pStatement : (pStatement = new StatementElements());
	}
	
	public ParserRule getStatementRule() {
		return getStatementAccess().getRule();
	}

	//SetFeature:
	//	"set" feature=[FeatureMapping] "=" (intValue=INT | strValue=STRING | boolValue=EBoolean);
	public SetFeatureElements getSetFeatureAccess() {
		return (pSetFeature != null) ? pSetFeature : (pSetFeature = new SetFeatureElements());
	}
	
	public ParserRule getSetFeatureRule() {
		return getSetFeatureAccess().getRule();
	}

	//// Not sure if needed
	//enum SetKind returns ReturnKind:
	//	PRIMITIVE_STRING="String" | PRIMITIVE_BOOLEAN="Boolean" | PRIMITIVE_INTEGER="Integer";
	public SetKindElements getSetKindAccess() {
		return (unknownRuleSetKind != null) ? unknownRuleSetKind : (unknownRuleSetKind = new SetKindElements());
	}
	
	public EnumRule getSetKindRule() {
		return getSetKindAccess().getRule();
	}

	//FeatureMapping:
	//	SimpleAttributeMapping | SimpleReferenceMapping;
	public FeatureMappingElements getFeatureMappingAccess() {
		return (pFeatureMapping != null) ? pFeatureMapping : (pFeatureMapping = new FeatureMappingElements());
	}
	
	public ParserRule getFeatureMappingRule() {
		return getFeatureMappingAccess().getRule();
	}

	//SimpleAttributeMapping:
	//	"attr" featureName=EString isMultivalued?="*"? ":" type=ID ("constructor" ":" constructorType=QualifiedName)? ("get"
	//	getMethod=GetMechanism)? ("set" setMethod=SetMechanism)?;
	public SimpleAttributeMappingElements getSimpleAttributeMappingAccess() {
		return (pSimpleAttributeMapping != null) ? pSimpleAttributeMapping : (pSimpleAttributeMapping = new SimpleAttributeMappingElements());
	}
	
	public ParserRule getSimpleAttributeMappingRule() {
		return getSimpleAttributeMappingAccess().getRule();
	}

	/// *
	// * enum PrimitiveType : 
	//	PRIMITIVE_STRING='String' |
	//	PRIMITIVE_BOOLEAN='Boolean' |
	//	PRIMITIVE_INTEGER='Integer'		
	//;
	// * / SimpleReferenceMapping:
	//	"ref" featureName=EString isMultivalued?="*"? ":" type=[ClassMapping] ("constructor" ":"
	//	constructorType=QualifiedName)? ("get" getMethod=GetMechanism)? ("set" setMethod=SetMechanism)?;
	public SimpleReferenceMappingElements getSimpleReferenceMappingAccess() {
		return (pSimpleReferenceMapping != null) ? pSimpleReferenceMapping : (pSimpleReferenceMapping = new SimpleReferenceMappingElements());
	}
	
	public ParserRule getSimpleReferenceMappingRule() {
		return getSimpleReferenceMappingAccess().getRule();
	}

	//GetMechanism:
	//	SimpleGet | GenericGet | IteratorGet;
	public GetMechanismElements getGetMechanismAccess() {
		return (pGetMechanism != null) ? pGetMechanism : (pGetMechanism = new GetMechanismElements());
	}
	
	public ParserRule getGetMechanismRule() {
		return getGetMechanismAccess().getRule();
	}

	//SetMechanism:
	//	SimpleSet | GenericSet;
	public SetMechanismElements getSetMechanismAccess() {
		return (pSetMechanism != null) ? pSetMechanism : (pSetMechanism = new SetMechanismElements());
	}
	
	public ParserRule getSetMechanismRule() {
		return getSetMechanismAccess().getRule();
	}

	//SimpleGet:
	//	"method" getter=Method;
	public SimpleGetElements getSimpleGetAccess() {
		return (pSimpleGet != null) ? pSimpleGet : (pSimpleGet = new SimpleGetElements());
	}
	
	public ParserRule getSimpleGetRule() {
		return getSimpleGetAccess().getRule();
	}

	//SimpleSet:
	//	"method" setter=Method;
	public SimpleSetElements getSimpleSetAccess() {
		return (pSimpleSet != null) ? pSimpleSet : (pSimpleSet = new SimpleSetElements());
	}
	
	public ParserRule getSimpleSetRule() {
		return getSimpleSetAccess().getRule();
	}

	//GenericGet:
	//	"generic" getter=Method;
	public GenericGetElements getGenericGetAccess() {
		return (pGenericGet != null) ? pGenericGet : (pGenericGet = new GenericGetElements());
	}
	
	public ParserRule getGenericGetRule() {
		return getGenericGetAccess().getRule();
	}

	//GenericSet:
	//	"generic" setter=Method;
	public GenericSetElements getGenericSetAccess() {
		return (pGenericSet != null) ? pGenericSet : (pGenericSet = new GenericSetElements());
	}
	
	public ParserRule getGenericSetRule() {
		return getGenericSetAccess().getRule();
	}

	//IteratorGet returns patterns::IteratorGetter:
	//	"iterator" iterator=[patterns::IteratorDescription] "method" getIterator=Method;
	public IteratorGetElements getIteratorGetAccess() {
		return (pIteratorGet != null) ? pIteratorGet : (pIteratorGet = new IteratorGetElements());
	}
	
	public ParserRule getIteratorGetRule() {
		return getIteratorGetAccess().getRule();
	}

	//// Being-of patterns
	//DeclaredElement:
	//	IteratorDescription | ObserverDescription;
	public DeclaredElementElements getDeclaredElementAccess() {
		return (pDeclaredElement != null) ? pDeclaredElement : (pDeclaredElement = new DeclaredElementElements());
	}
	
	public ParserRule getDeclaredElementRule() {
		return getDeclaredElementAccess().getRule();
	}

	//IteratorDescription returns patterns::IteratorDescription:
	//	"iterator" name=ID ":" iteratorClass=QualifiedName "{" "finished" hasFinished=Method "next" nextElement=Method "}";
	public IteratorDescriptionElements getIteratorDescriptionAccess() {
		return (pIteratorDescription != null) ? pIteratorDescription : (pIteratorDescription = new IteratorDescriptionElements());
	}
	
	public ParserRule getIteratorDescriptionRule() {
		return getIteratorDescriptionAccess().getRule();
	}

	//ObserverDescription returns patterns::ObserverDescription:
	//	"observer" name=ID ":" observerClass=QualifiedName "{" updateMethods+=UpdateMethod+ "}";
	public ObserverDescriptionElements getObserverDescriptionAccess() {
		return (pObserverDescription != null) ? pObserverDescription : (pObserverDescription = new ObserverDescriptionElements());
	}
	
	public ParserRule getObserverDescriptionRule() {
		return getObserverDescriptionAccess().getRule();
	}

	//// copied from method
	//UpdateMethod returns patterns::UpdateMethod:
	//	"update" ("[" interest+=INT ("," interest+=INT)* "]")? name=EString "(" (parameterTypes+=QualifiedName (","
	//	parameterTypes+=QualifiedName)*)? ")" ":" (returnArray?="Array" "<" returnType=QualifiedName ">" |
	//	returnCollection?="Collection" "<" returnType=QualifiedName ">" | returnType=QualifiedName | returnVoid?="void");
	public UpdateMethodElements getUpdateMethodAccess() {
		return (pUpdateMethod != null) ? pUpdateMethod : (pUpdateMethod = new UpdateMethodElements());
	}
	
	public ParserRule getUpdateMethodRule() {
		return getUpdateMethodAccess().getRule();
	}

	//// End-of patterns
	//EString returns ecore::EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return (pEString != null) ? pEString : (pEString = new EStringElements());
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	////'{'
	////	('parameterTypes' '{' parameterTypes+=EString ( "," parameterTypes+=EString)* '}' )?
	////	('returnType' returnType=EString)?
	////	'returnKind' returnKind=ReturnKind
	////'}';
	//Method:
	//	name=EString "(" (parameterTypes+=QualifiedName ("," parameterTypes+=QualifiedName)*)? ")" ":" (returnArray?="Array"
	//	"<" returnType=QualifiedName ">" | returnCollection?="Collection" "<" returnType=QualifiedName ">" |
	//	returnType=QualifiedName | returnVoid?="void");
	public MethodElements getMethodAccess() {
		return (pMethod != null) ? pMethod : (pMethod = new MethodElements());
	}
	
	public ParserRule getMethodRule() {
		return getMethodAccess().getRule();
	}

	//EBoolean returns ecore::EBoolean:
	//	"true" | "false";
	public EBooleanElements getEBooleanAccess() {
		return (pEBoolean != null) ? pEBoolean : (pEBoolean = new EBooleanElements());
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}

	//enum ReturnKind:
	//	SINGLE_OBJECT | PRIMITIVE_INTEGER | PRIMITIVE_STRING | PRIMITIVE_BOOLEAN | PRIMITIVE_DOUBLE | PRIMITIVE_FLOAT | ARRAY
	//	| COLLECTION | VOID;
	public ReturnKindElements getReturnKindAccess() {
		return (unknownRuleReturnKind != null) ? unknownRuleReturnKind : (unknownRuleReturnKind = new ReturnKindElements());
	}
	
	public EnumRule getReturnKindRule() {
		return getReturnKindAccess().getRule();
	}

	//// TODO: Replace with XBase
	//QualifiedName returns ecore::EString:
	//	ID ("." ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return (pQualifiedName != null) ? pQualifiedName : (pQualifiedName = new QualifiedNameElements());
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
