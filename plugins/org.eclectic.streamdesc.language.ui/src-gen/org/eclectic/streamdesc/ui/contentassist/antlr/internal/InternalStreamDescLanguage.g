/*
* generated by Xtext
*/
grammar InternalStreamDescLanguage;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.eclectic.streamdesc.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclectic.streamdesc.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclectic.streamdesc.services.StreamDescLanguageGrammarAccess;

}

@parser::members {
 
 	private StreamDescLanguageGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(StreamDescLanguageGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleStreamDescription
entryRuleStreamDescription 
:
{ before(grammarAccess.getStreamDescriptionRule()); }
	 ruleStreamDescription
{ after(grammarAccess.getStreamDescriptionRule()); } 
	 EOF 
;

// Rule StreamDescription
ruleStreamDescription
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStreamDescriptionAccess().getGroup()); }
(rule__StreamDescription__Group__0)
{ after(grammarAccess.getStreamDescriptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSlidingWindow
entryRuleSlidingWindow 
:
{ before(grammarAccess.getSlidingWindowRule()); }
	 ruleSlidingWindow
{ after(grammarAccess.getSlidingWindowRule()); } 
	 EOF 
;

// Rule SlidingWindow
ruleSlidingWindow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSlidingWindowAccess().getAlternatives()); }
(rule__SlidingWindow__Alternatives)
{ after(grammarAccess.getSlidingWindowAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimeSlidingWindow
entryRuleTimeSlidingWindow 
:
{ before(grammarAccess.getTimeSlidingWindowRule()); }
	 ruleTimeSlidingWindow
{ after(grammarAccess.getTimeSlidingWindowRule()); } 
	 EOF 
;

// Rule TimeSlidingWindow
ruleTimeSlidingWindow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimeSlidingWindowAccess().getGroup()); }
(rule__TimeSlidingWindow__Group__0)
{ after(grammarAccess.getTimeSlidingWindowAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElementSlidingWindow
entryRuleElementSlidingWindow 
:
{ before(grammarAccess.getElementSlidingWindowRule()); }
	 ruleElementSlidingWindow
{ after(grammarAccess.getElementSlidingWindowRule()); } 
	 EOF 
;

// Rule ElementSlidingWindow
ruleElementSlidingWindow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElementSlidingWindowAccess().getGroup()); }
(rule__ElementSlidingWindow__Group__0)
{ after(grammarAccess.getElementSlidingWindowAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeySpec
entryRuleKeySpec 
:
{ before(grammarAccess.getKeySpecRule()); }
	 ruleKeySpec
{ after(grammarAccess.getKeySpecRule()); } 
	 EOF 
;

// Rule KeySpec
ruleKeySpec
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeySpecAccess().getGroup()); }
(rule__KeySpec__Group__0)
{ after(grammarAccess.getKeySpecAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEInt
entryRuleEInt 
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall()); }
	RULE_INT
{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__SlidingWindow__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlidingWindowAccess().getTimeSlidingWindowParserRuleCall_0()); }
	ruleTimeSlidingWindow
{ after(grammarAccess.getSlidingWindowAccess().getTimeSlidingWindowParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSlidingWindowAccess().getElementSlidingWindowParserRuleCall_1()); }
	ruleElementSlidingWindow
{ after(grammarAccess.getSlidingWindowAccess().getElementSlidingWindowParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSlidingWindow__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSlidingWindowAccess().getSecondsKeyword_5_0()); }

	'seconds' 

{ after(grammarAccess.getTimeSlidingWindowAccess().getSecondsKeyword_5_0()); }
)

    |(
{ before(grammarAccess.getTimeSlidingWindowAccess().getSecsKeyword_5_1()); }

	'secs' 

{ after(grammarAccess.getTimeSlidingWindowAccess().getSecsKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__StreamDescription__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamDescription__Group__0__Impl
	rule__StreamDescription__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDescription__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDescriptionAccess().getStreamKeyword_0()); }

	'stream' 

{ after(grammarAccess.getStreamDescriptionAccess().getStreamKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamDescription__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamDescription__Group__1__Impl
	rule__StreamDescription__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDescription__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDescriptionAccess().getStreamNameAssignment_1()); }
(rule__StreamDescription__StreamNameAssignment_1)
{ after(grammarAccess.getStreamDescriptionAccess().getStreamNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamDescription__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamDescription__Group__2__Impl
	rule__StreamDescription__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDescription__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDescriptionAccess().getForKeyword_2()); }

	'for' 

{ after(grammarAccess.getStreamDescriptionAccess().getForKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamDescription__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamDescription__Group__3__Impl
	rule__StreamDescription__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDescription__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDescriptionAccess().getMetamodelNameAssignment_3()); }
(rule__StreamDescription__MetamodelNameAssignment_3)
{ after(grammarAccess.getStreamDescriptionAccess().getMetamodelNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamDescription__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamDescription__Group__4__Impl
	rule__StreamDescription__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDescription__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDescriptionAccess().getGroup_4()); }
(rule__StreamDescription__Group_4__0)?
{ after(grammarAccess.getStreamDescriptionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamDescription__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamDescription__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDescription__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDescriptionAccess().getGroup_5()); }
(rule__StreamDescription__Group_5__0)?
{ after(grammarAccess.getStreamDescriptionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__StreamDescription__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamDescription__Group_4__0__Impl
	rule__StreamDescription__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDescription__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDescriptionAccess().getKeysAssignment_4_0()); }
(rule__StreamDescription__KeysAssignment_4_0)
{ after(grammarAccess.getStreamDescriptionAccess().getKeysAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamDescription__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamDescription__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDescription__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDescriptionAccess().getKeysAssignment_4_1()); }
(rule__StreamDescription__KeysAssignment_4_1)*
{ after(grammarAccess.getStreamDescriptionAccess().getKeysAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StreamDescription__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamDescription__Group_5__0__Impl
	rule__StreamDescription__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDescription__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDescriptionAccess().getWindowsAssignment_5_0()); }
(rule__StreamDescription__WindowsAssignment_5_0)
{ after(grammarAccess.getStreamDescriptionAccess().getWindowsAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StreamDescription__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StreamDescription__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDescription__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDescriptionAccess().getWindowsAssignment_5_1()); }
(rule__StreamDescription__WindowsAssignment_5_1)*
{ after(grammarAccess.getStreamDescriptionAccess().getWindowsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeSlidingWindow__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSlidingWindow__Group__0__Impl
	rule__TimeSlidingWindow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSlidingWindow__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSlidingWindowAccess().getSlidingKeyword_0()); }

	'sliding' 

{ after(grammarAccess.getTimeSlidingWindowAccess().getSlidingKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeSlidingWindow__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSlidingWindow__Group__1__Impl
	rule__TimeSlidingWindow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSlidingWindow__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSlidingWindowAccess().getForKeyword_1()); }

	'for' 

{ after(grammarAccess.getTimeSlidingWindowAccess().getForKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeSlidingWindow__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSlidingWindow__Group__2__Impl
	rule__TimeSlidingWindow__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSlidingWindow__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSlidingWindowAccess().getClassNameAssignment_2()); }
(rule__TimeSlidingWindow__ClassNameAssignment_2)
{ after(grammarAccess.getTimeSlidingWindowAccess().getClassNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeSlidingWindow__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSlidingWindow__Group__3__Impl
	rule__TimeSlidingWindow__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSlidingWindow__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSlidingWindowAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getTimeSlidingWindowAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeSlidingWindow__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSlidingWindow__Group__4__Impl
	rule__TimeSlidingWindow__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSlidingWindow__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSlidingWindowAccess().getSecondsAssignment_4()); }
(rule__TimeSlidingWindow__SecondsAssignment_4)
{ after(grammarAccess.getTimeSlidingWindowAccess().getSecondsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeSlidingWindow__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSlidingWindow__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSlidingWindow__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSlidingWindowAccess().getAlternatives_5()); }
(rule__TimeSlidingWindow__Alternatives_5)
{ after(grammarAccess.getTimeSlidingWindowAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ElementSlidingWindow__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementSlidingWindow__Group__0__Impl
	rule__ElementSlidingWindow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementSlidingWindow__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementSlidingWindowAccess().getSlidingKeyword_0()); }

	'sliding' 

{ after(grammarAccess.getElementSlidingWindowAccess().getSlidingKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementSlidingWindow__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementSlidingWindow__Group__1__Impl
	rule__ElementSlidingWindow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementSlidingWindow__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementSlidingWindowAccess().getForKeyword_1()); }

	'for' 

{ after(grammarAccess.getElementSlidingWindowAccess().getForKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementSlidingWindow__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementSlidingWindow__Group__2__Impl
	rule__ElementSlidingWindow__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementSlidingWindow__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementSlidingWindowAccess().getClassNameAssignment_2()); }
(rule__ElementSlidingWindow__ClassNameAssignment_2)
{ after(grammarAccess.getElementSlidingWindowAccess().getClassNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementSlidingWindow__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementSlidingWindow__Group__3__Impl
	rule__ElementSlidingWindow__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementSlidingWindow__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementSlidingWindowAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getElementSlidingWindowAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementSlidingWindow__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementSlidingWindow__Group__4__Impl
	rule__ElementSlidingWindow__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementSlidingWindow__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementSlidingWindowAccess().getElementsAssignment_4()); }
(rule__ElementSlidingWindow__ElementsAssignment_4)
{ after(grammarAccess.getElementSlidingWindowAccess().getElementsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementSlidingWindow__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementSlidingWindow__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementSlidingWindow__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementSlidingWindowAccess().getElementsKeyword_5()); }

	'elements' 

{ after(grammarAccess.getElementSlidingWindowAccess().getElementsKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__KeySpec__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeySpec__Group__0__Impl
	rule__KeySpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeySpec__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeySpecAccess().getKeyKeyword_0()); }

	'key' 

{ after(grammarAccess.getKeySpecAccess().getKeyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeySpec__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeySpec__Group__1__Impl
	rule__KeySpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeySpec__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeySpecAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getKeySpecAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeySpec__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeySpec__Group__2__Impl
	rule__KeySpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeySpec__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeySpecAccess().getClassNameAssignment_2()); }
(rule__KeySpec__ClassNameAssignment_2)
{ after(grammarAccess.getKeySpecAccess().getClassNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeySpec__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeySpec__Group__3__Impl
	rule__KeySpec__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__KeySpec__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeySpecAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getKeySpecAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeySpec__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeySpec__Group__4__Impl
	rule__KeySpec__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__KeySpec__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeySpecAccess().getEqualsSignKeyword_4()); }

	'=' 

{ after(grammarAccess.getKeySpecAccess().getEqualsSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeySpec__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeySpec__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeySpec__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeySpecAccess().getFeatureNameAssignment_5()); }
(rule__KeySpec__FeatureNameAssignment_5)
{ after(grammarAccess.getKeySpecAccess().getFeatureNameAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}















rule__StreamDescription__StreamNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDescriptionAccess().getStreamNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getStreamDescriptionAccess().getStreamNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDescription__MetamodelNameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDescriptionAccess().getMetamodelNameEStringParserRuleCall_3_0()); }
	ruleEString{ after(grammarAccess.getStreamDescriptionAccess().getMetamodelNameEStringParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDescription__KeysAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDescriptionAccess().getKeysKeySpecParserRuleCall_4_0_0()); }
	ruleKeySpec{ after(grammarAccess.getStreamDescriptionAccess().getKeysKeySpecParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDescription__KeysAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDescriptionAccess().getKeysKeySpecParserRuleCall_4_1_0()); }
	ruleKeySpec{ after(grammarAccess.getStreamDescriptionAccess().getKeysKeySpecParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDescription__WindowsAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDescriptionAccess().getWindowsSlidingWindowParserRuleCall_5_0_0()); }
	ruleSlidingWindow{ after(grammarAccess.getStreamDescriptionAccess().getWindowsSlidingWindowParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StreamDescription__WindowsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStreamDescriptionAccess().getWindowsSlidingWindowParserRuleCall_5_1_0()); }
	ruleSlidingWindow{ after(grammarAccess.getStreamDescriptionAccess().getWindowsSlidingWindowParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSlidingWindow__ClassNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSlidingWindowAccess().getClassNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getTimeSlidingWindowAccess().getClassNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSlidingWindow__SecondsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSlidingWindowAccess().getSecondsEIntParserRuleCall_4_0()); }
	ruleEInt{ after(grammarAccess.getTimeSlidingWindowAccess().getSecondsEIntParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementSlidingWindow__ClassNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementSlidingWindowAccess().getClassNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getElementSlidingWindowAccess().getClassNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementSlidingWindow__ElementsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementSlidingWindowAccess().getElementsEIntParserRuleCall_4_0()); }
	ruleEInt{ after(grammarAccess.getElementSlidingWindowAccess().getElementsEIntParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeySpec__ClassNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeySpecAccess().getClassNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getKeySpecAccess().getClassNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeySpec__FeatureNameAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeySpecAccess().getFeatureNameEStringParserRuleCall_5_0()); }
	ruleEString{ after(grammarAccess.getKeySpecAccess().getFeatureNameEStringParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


