/*
* generated by Xtext
*/
grammar InternalTao;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.eclectic.frontend.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclectic.frontend.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclectic.frontend.services.TaoGrammarAccess;

}

@parser::members {
 
 	private TaoGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(TaoGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleTaoTransformation
entryRuleTaoTransformation 
:
{ before(grammarAccess.getTaoTransformationRule()); }
	 ruleTaoTransformation
{ after(grammarAccess.getTaoTransformationRule()); } 
	 EOF 
;

// Rule TaoTransformation
ruleTaoTransformation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTaoTransformationAccess().getGroup()); }
(rule__TaoTransformation__Group__0)
{ after(grammarAccess.getTaoTransformationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUsesStatements
entryRuleUsesStatements 
:
{ before(grammarAccess.getUsesStatementsRule()); }
	 ruleUsesStatements
{ after(grammarAccess.getUsesStatementsRule()); } 
	 EOF 
;

// Rule UsesStatements
ruleUsesStatements
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUsesStatementsAccess().getUseDeclarationParserRuleCall()); }
	ruleUseDeclaration
{ after(grammarAccess.getUsesStatementsAccess().getUseDeclarationParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUseDeclaration
entryRuleUseDeclaration 
:
{ before(grammarAccess.getUseDeclarationRule()); }
	 ruleUseDeclaration
{ after(grammarAccess.getUseDeclarationRule()); } 
	 EOF 
;

// Rule UseDeclaration
ruleUseDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUseDeclarationAccess().getGroup()); }
(rule__UseDeclaration__Group__0)
{ after(grammarAccess.getUseDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransformationDefinitionParameter
entryRuleTransformationDefinitionParameter 
:
{ before(grammarAccess.getTransformationDefinitionParameterRule()); }
	 ruleTransformationDefinitionParameter
{ after(grammarAccess.getTransformationDefinitionParameterRule()); } 
	 EOF 
;

// Rule TransformationDefinitionParameter
ruleTransformationDefinitionParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransformationDefinitionParameterAccess().getGroup()); }
(rule__TransformationDefinitionParameter__Group__0)
{ after(grammarAccess.getTransformationDefinitionParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassUse
entryRuleClassUse 
:
{ before(grammarAccess.getClassUseRule()); }
	 ruleClassUse
{ after(grammarAccess.getClassUseRule()); } 
	 EOF 
;

// Rule ClassUse
ruleClassUse
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassUseAccess().getGroup()); }
(rule__ClassUse__Group__0)
{ after(grammarAccess.getClassUseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTemplate
entryRuleTemplate 
:
{ before(grammarAccess.getTemplateRule()); }
	 ruleTemplate
{ after(grammarAccess.getTemplateRule()); } 
	 EOF 
;

// Rule Template
ruleTemplate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemplateAccess().getGroup()); }
(rule__Template__Group__0)
{ after(grammarAccess.getTemplateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTemplateParameter
entryRuleTemplateParameter 
:
{ before(grammarAccess.getTemplateParameterRule()); }
	 ruleTemplateParameter
{ after(grammarAccess.getTemplateParameterRule()); } 
	 EOF 
;

// Rule TemplateParameter
ruleTemplateParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemplateParameterAccess().getGroup()); }
(rule__TemplateParameter__Group__0)
{ after(grammarAccess.getTemplateParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getDefineVariableParserRuleCall()); }
	ruleDefineVariable
{ after(grammarAccess.getStatementAccess().getDefineVariableParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getWithResolveMethodCallParserRuleCall()); }
	ruleWithResolveMethodCall
{ after(grammarAccess.getExpressionAccess().getWithResolveMethodCallParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTemplateRootObject
entryRuleTemplateRootObject 
:
{ before(grammarAccess.getTemplateRootObjectRule()); }
	 ruleTemplateRootObject
{ after(grammarAccess.getTemplateRootObjectRule()); } 
	 EOF 
;

// Rule TemplateRootObject
ruleTemplateRootObject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemplateRootObjectAccess().getGroup()); }
(rule__TemplateRootObject__Group__0)
{ after(grammarAccess.getTemplateRootObjectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectInstantiation
entryRuleObjectInstantiation 
:
{ before(grammarAccess.getObjectInstantiationRule()); }
	 ruleObjectInstantiation
{ after(grammarAccess.getObjectInstantiationRule()); } 
	 EOF 
;

// Rule ObjectInstantiation
ruleObjectInstantiation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectInstantiationAccess().getGroup()); }
(rule__ObjectInstantiation__Group__0)
{ after(grammarAccess.getObjectInstantiationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignment
entryRuleAssignment 
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentAccess().getAlternatives()); }
(rule__Assignment__Alternatives)
{ after(grammarAccess.getAssignmentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeAssigment
entryRuleAttributeAssigment 
:
{ before(grammarAccess.getAttributeAssigmentRule()); }
	 ruleAttributeAssigment
{ after(grammarAccess.getAttributeAssigmentRule()); } 
	 EOF 
;

// Rule AttributeAssigment
ruleAttributeAssigment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAssigmentAccess().getGroup()); }
(rule__AttributeAssigment__Group__0)
{ after(grammarAccess.getAttributeAssigmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSourceExpression
entryRuleSourceExpression 
:
{ before(grammarAccess.getSourceExpressionRule()); }
	 ruleSourceExpression
{ after(grammarAccess.getSourceExpressionRule()); } 
	 EOF 
;

// Rule SourceExpression
ruleSourceExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSourceExpressionAccess().getWithOptionalVariableExpressionParserRuleCall()); }
	ruleWithOptionalVariableExpression
{ after(grammarAccess.getSourceExpressionAccess().getWithOptionalVariableExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWithOptionalVariableExpression
entryRuleWithOptionalVariableExpression 
:
{ before(grammarAccess.getWithOptionalVariableExpressionRule()); }
	 ruleWithOptionalVariableExpression
{ after(grammarAccess.getWithOptionalVariableExpressionRule()); } 
	 EOF 
;

// Rule WithOptionalVariableExpression
ruleWithOptionalVariableExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWithOptionalVariableExpressionAccess().getGroup()); }
(rule__WithOptionalVariableExpression__Group__0)
{ after(grammarAccess.getWithOptionalVariableExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectSourceVariable
entryRuleObjectSourceVariable 
:
{ before(grammarAccess.getObjectSourceVariableRule()); }
	 ruleObjectSourceVariable
{ after(grammarAccess.getObjectSourceVariableRule()); } 
	 EOF 
;

// Rule ObjectSourceVariable
ruleObjectSourceVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectSourceVariableAccess().getNameAssignment()); }
(rule__ObjectSourceVariable__NameAssignment)
{ after(grammarAccess.getObjectSourceVariableAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectSyntax
entryRuleObjectSyntax 
:
{ before(grammarAccess.getObjectSyntaxRule()); }
	 ruleObjectSyntax
{ after(grammarAccess.getObjectSyntaxRule()); } 
	 EOF 
;

// Rule ObjectSyntax
ruleObjectSyntax
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectSyntaxAccess().getGroup()); }
(rule__ObjectSyntax__Group__0)
{ after(grammarAccess.getObjectSyntaxAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInvocation
entryRuleInvocation 
:
{ before(grammarAccess.getInvocationRule()); }
	 ruleInvocation
{ after(grammarAccess.getInvocationRule()); } 
	 EOF 
;

// Rule Invocation
ruleInvocation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInvocationAccess().getGroup()); }
(rule__Invocation__Group__0)
{ after(grammarAccess.getInvocationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEInt
entryRuleEInt 
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEIntAccess().getGroup()); }
(rule__EInt__Group__0)
{ after(grammarAccess.getEIntAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleTraceDefinition
entryRuleTraceDefinition 
:
{ before(grammarAccess.getTraceDefinitionRule()); }
	 ruleTraceDefinition
{ after(grammarAccess.getTraceDefinitionRule()); } 
	 EOF 
;

// Rule TraceDefinition
ruleTraceDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTraceDefinitionAccess().getGroup()); }
(rule__TraceDefinition__Group__0)
{ after(grammarAccess.getTraceDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTraceElementInline
entryRuleTraceElementInline 
:
{ before(grammarAccess.getTraceElementInlineRule()); }
	 ruleTraceElementInline
{ after(grammarAccess.getTraceElementInlineRule()); } 
	 EOF 
;

// Rule TraceElementInline
ruleTraceElementInline
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTraceElementInlineAccess().getGroup()); }
(rule__TraceElementInline__Group__0)
{ after(grammarAccess.getTraceElementInlineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTraceElementExpanded
entryRuleTraceElementExpanded 
:
{ before(grammarAccess.getTraceElementExpandedRule()); }
	 ruleTraceElementExpanded
{ after(grammarAccess.getTraceElementExpandedRule()); } 
	 EOF 
;

// Rule TraceElementExpanded
ruleTraceElementExpanded
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTraceElementExpandedAccess().getGroup()); }
(rule__TraceElementExpanded__Group__0)
{ after(grammarAccess.getTraceElementExpandedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeExpression
entryRuleTypeExpression 
:
{ before(grammarAccess.getTypeExpressionRule()); }
	 ruleTypeExpression
{ after(grammarAccess.getTypeExpressionRule()); } 
	 EOF 
;

// Rule TypeExpression
ruleTypeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeExpressionAccess().getClassUseParserRuleCall()); }
	ruleClassUse
{ after(grammarAccess.getTypeExpressionAccess().getClassUseParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRulePotencyAnnotation
entryRulePotencyAnnotation 
:
{ before(grammarAccess.getPotencyAnnotationRule()); }
	 rulePotencyAnnotation
{ after(grammarAccess.getPotencyAnnotationRule()); } 
	 EOF 
;

// Rule PotencyAnnotation
rulePotencyAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPotencyAnnotationAccess().getGroup()); }
(rule__PotencyAnnotation__Group__0)
{ after(grammarAccess.getPotencyAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleDefineVariable
entryRuleDefineVariable 
:
{ before(grammarAccess.getDefineVariableRule()); }
	 ruleDefineVariable
{ after(grammarAccess.getDefineVariableRule()); } 
	 EOF 
;

// Rule DefineVariable
ruleDefineVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefineVariableAccess().getGroup()); }
(rule__DefineVariable__Group__0)
{ after(grammarAccess.getDefineVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModelReference
entryRuleModelReference 
:
{ before(grammarAccess.getModelReferenceRule()); }
	 ruleModelReference
{ after(grammarAccess.getModelReferenceRule()); } 
	 EOF 
;

// Rule ModelReference
ruleModelReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelReferenceAccess().getGroup()); }
(rule__ModelReference__Group__0)
{ after(grammarAccess.getModelReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParenthesizedExpression
entryRuleParenthesizedExpression 
:
{ before(grammarAccess.getParenthesizedExpressionRule()); }
	 ruleParenthesizedExpression
{ after(grammarAccess.getParenthesizedExpressionRule()); } 
	 EOF 
;

// Rule ParenthesizedExpression
ruleParenthesizedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getGroup()); }
(rule__ParenthesizedExpression__Group__0)
{ after(grammarAccess.getParenthesizedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableReference
entryRuleVariableReference 
:
{ before(grammarAccess.getVariableReferenceRule()); }
	 ruleVariableReference
{ after(grammarAccess.getVariableReferenceRule()); } 
	 EOF 
;

// Rule VariableReference
ruleVariableReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableReferenceAccess().getVariableAssignment()); }
(rule__VariableReference__VariableAssignment)
{ after(grammarAccess.getVariableReferenceAccess().getVariableAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClosureDeclaration
entryRuleClosureDeclaration 
:
{ before(grammarAccess.getClosureDeclarationRule()); }
	 ruleClosureDeclaration
{ after(grammarAccess.getClosureDeclarationRule()); } 
	 EOF 
;

// Rule ClosureDeclaration
ruleClosureDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClosureDeclarationAccess().getGroup()); }
(rule__ClosureDeclaration__Group__0)
{ after(grammarAccess.getClosureDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClosureParameter
entryRuleClosureParameter 
:
{ before(grammarAccess.getClosureParameterRule()); }
	 ruleClosureParameter
{ after(grammarAccess.getClosureParameterRule()); } 
	 EOF 
;

// Rule ClosureParameter
ruleClosureParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClosureParameterAccess().getNameAssignment()); }
(rule__ClosureParameter__NameAssignment)
{ after(grammarAccess.getClosureParameterAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleWithResolveMethodCall
entryRuleWithResolveMethodCall 
:
{ before(grammarAccess.getWithResolveMethodCallRule()); }
	 ruleWithResolveMethodCall
{ after(grammarAccess.getWithResolveMethodCallRule()); } 
	 EOF 
;

// Rule WithResolveMethodCall
ruleWithResolveMethodCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getGroup()); }
(rule__WithResolveMethodCall__Group__0)
{ after(grammarAccess.getWithResolveMethodCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleMatchTraceExpression
entryRuleMatchTraceExpression 
:
{ before(grammarAccess.getMatchTraceExpressionRule()); }
	 ruleMatchTraceExpression
{ after(grammarAccess.getMatchTraceExpressionRule()); } 
	 EOF 
;

// Rule MatchTraceExpression
ruleMatchTraceExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMatchTraceExpressionAccess().getGroup()); }
(rule__MatchTraceExpression__Group__0)
{ after(grammarAccess.getMatchTraceExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTraceExprLanguage
entryRuleTraceExprLanguage 
:
{ before(grammarAccess.getTraceExprLanguageRule()); }
	 ruleTraceExprLanguage
{ after(grammarAccess.getTraceExprLanguageRule()); } 
	 EOF 
;

// Rule TraceExprLanguage
ruleTraceExprLanguage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTraceExprLanguageAccess().getGroup()); }
(rule__TraceExprLanguage__Group__0)
{ after(grammarAccess.getTraceExprLanguageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRulePutTraceParameter
entryRulePutTraceParameter 
:
{ before(grammarAccess.getPutTraceParameterRule()); }
	 rulePutTraceParameter
{ after(grammarAccess.getPutTraceParameterRule()); } 
	 EOF 
;

// Rule PutTraceParameter
rulePutTraceParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPutTraceParameterAccess().getGroup()); }
(rule__PutTraceParameter__Group__0)
{ after(grammarAccess.getPutTraceParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumLiteral
entryRuleNumLiteral 
:
{ before(grammarAccess.getNumLiteralRule()); }
	 ruleNumLiteral
{ after(grammarAccess.getNumLiteralRule()); } 
	 EOF 
;

// Rule NumLiteral
ruleNumLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumLiteralAccess().getValueAssignment()); }
(rule__NumLiteral__ValueAssignment)
{ after(grammarAccess.getNumLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloatLiteral
entryRuleFloatLiteral 
:
{ before(grammarAccess.getFloatLiteralRule()); }
	 ruleFloatLiteral
{ after(grammarAccess.getFloatLiteralRule()); } 
	 EOF 
;

// Rule FloatLiteral
ruleFloatLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloatLiteralAccess().getValueAssignment()); }
(rule__FloatLiteral__ValueAssignment)
{ after(grammarAccess.getFloatLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEDouble
entryRuleEDouble 
:
{ before(grammarAccess.getEDoubleRule()); }
	 ruleEDouble
{ after(grammarAccess.getEDoubleRule()); } 
	 EOF 
;

// Rule EDouble
ruleEDouble
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEDoubleAccess().getGroup()); }
(rule__EDouble__Group__0)
{ after(grammarAccess.getEDoubleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
(rule__StringLiteral__ValueAssignment)
{ after(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral 
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueAssignment()); }
(rule__BooleanLiteral__ValueAssignment)
{ after(grammarAccess.getBooleanLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEBoolean
entryRuleEBoolean 
:
{ before(grammarAccess.getEBooleanRule()); }
	 ruleEBoolean
{ after(grammarAccess.getEBooleanRule()); } 
	 EOF 
;

// Rule EBoolean
ruleEBoolean
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEBooleanAccess().getAlternatives()); }
(rule__EBoolean__Alternatives)
{ after(grammarAccess.getEBooleanAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}






// Rule BinaryOp
ruleBinaryOp
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOpAccess().getAlternatives()); }
(rule__BinaryOp__Alternatives)
{ after(grammarAccess.getBinaryOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Assignment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getAttributeAssigmentParserRuleCall_0()); }
	ruleAttributeAssigment
{ after(grammarAccess.getAssignmentAccess().getAttributeAssigmentParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAssignmentAccess().getObjectSyntaxParserRuleCall_1()); }
	ruleObjectSyntax
{ after(grammarAccess.getAssignmentAccess().getObjectSyntaxParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAssignmentAccess().getInvocationParserRuleCall_2()); }
	ruleInvocation
{ after(grammarAccess.getAssignmentAccess().getInvocationParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getGroup_2_0()); }
(rule__TraceDefinition__Group_2_0__0)
{ after(grammarAccess.getTraceDefinitionAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getTraceDefinitionAccess().getGroup_2_1()); }
(rule__TraceDefinition__Group_2_1__0)
{ after(grammarAccess.getTraceDefinitionAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PotencyAnnotation__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotencyAnnotationAccess().getCommercialAtKeyword_0_0()); }

	'@' 

{ after(grammarAccess.getPotencyAnnotationAccess().getCommercialAtKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getPotencyAnnotationAccess().getCircumflexAccentKeyword_0_1()); }

	'^' 

{ after(grammarAccess.getPotencyAnnotationAccess().getCircumflexAccentKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_0()); }
	ruleLiteral
{ after(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getVariableReferenceParserRuleCall_1()); }
	ruleVariableReference
{ after(grammarAccess.getPrimaryExpressionAccess().getVariableReferenceParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getModelReferenceParserRuleCall_2()); }
	ruleModelReference
{ after(grammarAccess.getPrimaryExpressionAccess().getModelReferenceParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getParenthesizedExpressionParserRuleCall_3()); }
	ruleParenthesizedExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getParenthesizedExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getMatchTraceExpressionParserRuleCall_4()); }
	ruleMatchTraceExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getMatchTraceExpressionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getClosureDeclarationParserRuleCall_5()); }
	ruleClosureDeclaration
{ after(grammarAccess.getPrimaryExpressionAccess().getClosureDeclarationParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getFloatLiteralParserRuleCall_0()); }
	ruleFloatLiteral
{ after(grammarAccess.getLiteralAccess().getFloatLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getNumLiteralParserRuleCall_1()); }
	ruleNumLiteral
{ after(grammarAccess.getLiteralAccess().getNumLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_2()); }
	ruleStringLiteral
{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_3()); }
	ruleBooleanLiteral
{ after(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_0()); }
(rule__WithResolveMethodCall__Group_1_0__0)
{ after(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_0()); }
)

    |(
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1()); }
(rule__WithResolveMethodCall__Group_1_1__0)
{ after(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1()); }
(rule__WithResolveMethodCall__Group_1_1__0)*
{ after(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1()); }
)
)

    |(
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2()); }
(rule__WithResolveMethodCall__Group_1_2__0)
{ after(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2()); }
)
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2()); }
(rule__WithResolveMethodCall__Group_1_2__0)*
{ after(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EBoolean__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOpAccess().getADDEnumLiteralDeclaration_0()); }
(	'+' 
)
{ after(grammarAccess.getBinaryOpAccess().getADDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getBinaryOpAccess().getSUBEnumLiteralDeclaration_1()); }
(	'-' 
)
{ after(grammarAccess.getBinaryOpAccess().getSUBEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getBinaryOpAccess().getMULEnumLiteralDeclaration_2()); }
(	'*' 
)
{ after(grammarAccess.getBinaryOpAccess().getMULEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getBinaryOpAccess().getDIVEnumLiteralDeclaration_3()); }
(	'/' 
)
{ after(grammarAccess.getBinaryOpAccess().getDIVEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__TaoTransformation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaoTransformation__Group__0__Impl
	rule__TaoTransformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaoTransformation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaoTransformationAccess().getTaoKeyword_0()); }

	'tao' 

{ after(grammarAccess.getTaoTransformationAccess().getTaoKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaoTransformation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaoTransformation__Group__1__Impl
	rule__TaoTransformation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TaoTransformation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaoTransformationAccess().getNameAssignment_1()); }
(rule__TaoTransformation__NameAssignment_1)
{ after(grammarAccess.getTaoTransformationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaoTransformation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaoTransformation__Group__2__Impl
	rule__TaoTransformation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TaoTransformation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaoTransformationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getTaoTransformationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaoTransformation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaoTransformation__Group__3__Impl
	rule__TaoTransformation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TaoTransformation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaoTransformationAccess().getInModelsAssignment_3()); }
(rule__TaoTransformation__InModelsAssignment_3)
{ after(grammarAccess.getTaoTransformationAccess().getInModelsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaoTransformation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaoTransformation__Group__4__Impl
	rule__TaoTransformation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TaoTransformation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaoTransformationAccess().getGroup_4()); }
(rule__TaoTransformation__Group_4__0)*
{ after(grammarAccess.getTaoTransformationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaoTransformation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaoTransformation__Group__5__Impl
	rule__TaoTransformation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TaoTransformation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaoTransformationAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getTaoTransformationAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaoTransformation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaoTransformation__Group__6__Impl
	rule__TaoTransformation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TaoTransformation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaoTransformationAccess().getHyphenMinusGreaterThanSignKeyword_6()); }

	'->' 

{ after(grammarAccess.getTaoTransformationAccess().getHyphenMinusGreaterThanSignKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaoTransformation__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaoTransformation__Group__7__Impl
	rule__TaoTransformation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__TaoTransformation__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaoTransformationAccess().getLeftParenthesisKeyword_7()); }

	'(' 

{ after(grammarAccess.getTaoTransformationAccess().getLeftParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaoTransformation__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaoTransformation__Group__8__Impl
	rule__TaoTransformation__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__TaoTransformation__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaoTransformationAccess().getOutModelsAssignment_8()); }
(rule__TaoTransformation__OutModelsAssignment_8)
{ after(grammarAccess.getTaoTransformationAccess().getOutModelsAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaoTransformation__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaoTransformation__Group__9__Impl
	rule__TaoTransformation__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__TaoTransformation__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaoTransformationAccess().getGroup_9()); }
(rule__TaoTransformation__Group_9__0)*
{ after(grammarAccess.getTaoTransformationAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaoTransformation__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaoTransformation__Group__10__Impl
	rule__TaoTransformation__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__TaoTransformation__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaoTransformationAccess().getRightParenthesisKeyword_10()); }

	')' 

{ after(grammarAccess.getTaoTransformationAccess().getRightParenthesisKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaoTransformation__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaoTransformation__Group__11__Impl
	rule__TaoTransformation__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__TaoTransformation__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaoTransformationAccess().getUsesAssignment_11()); }
(rule__TaoTransformation__UsesAssignment_11)*
{ after(grammarAccess.getTaoTransformationAccess().getUsesAssignment_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaoTransformation__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaoTransformation__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaoTransformation__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTaoTransformationAccess().getTemplatesAssignment_12()); }
(rule__TaoTransformation__TemplatesAssignment_12)
{ after(grammarAccess.getTaoTransformationAccess().getTemplatesAssignment_12()); }
)
(
{ before(grammarAccess.getTaoTransformationAccess().getTemplatesAssignment_12()); }
(rule__TaoTransformation__TemplatesAssignment_12)*
{ after(grammarAccess.getTaoTransformationAccess().getTemplatesAssignment_12()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__TaoTransformation__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaoTransformation__Group_4__0__Impl
	rule__TaoTransformation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaoTransformation__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaoTransformationAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getTaoTransformationAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaoTransformation__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaoTransformation__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaoTransformation__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaoTransformationAccess().getInModelsAssignment_4_1()); }
(rule__TaoTransformation__InModelsAssignment_4_1)
{ after(grammarAccess.getTaoTransformationAccess().getInModelsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TaoTransformation__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaoTransformation__Group_9__0__Impl
	rule__TaoTransformation__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaoTransformation__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaoTransformationAccess().getCommaKeyword_9_0()); }

	',' 

{ after(grammarAccess.getTaoTransformationAccess().getCommaKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaoTransformation__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaoTransformation__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaoTransformation__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaoTransformationAccess().getOutModelsAssignment_9_1()); }
(rule__TaoTransformation__OutModelsAssignment_9_1)
{ after(grammarAccess.getTaoTransformationAccess().getOutModelsAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UseDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseDeclaration__Group__0__Impl
	rule__UseDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseDeclarationAccess().getUsesKeyword_0()); }

	'uses' 

{ after(grammarAccess.getUseDeclarationAccess().getUsesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseDeclaration__Group__1__Impl
	rule__UseDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UseDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseDeclarationAccess().getModuleAssignment_1()); }
(rule__UseDeclaration__ModuleAssignment_1)
{ after(grammarAccess.getUseDeclarationAccess().getModuleAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseDeclarationAccess().getGroup_2()); }
(rule__UseDeclaration__Group_2__0)?
{ after(grammarAccess.getUseDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UseDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseDeclaration__Group_2__0__Impl
	rule__UseDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseDeclarationAccess().getAsKeyword_2_0()); }

	'as' 

{ after(grammarAccess.getUseDeclarationAccess().getAsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseDeclarationAccess().getAsAssignment_2_1()); }
(rule__UseDeclaration__AsAssignment_2_1)
{ after(grammarAccess.getUseDeclarationAccess().getAsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TransformationDefinitionParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransformationDefinitionParameter__Group__0__Impl
	rule__TransformationDefinitionParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationDefinitionParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationDefinitionParameterAccess().getTransformationDefinitionParameterAction_0()); }
(

)
{ after(grammarAccess.getTransformationDefinitionParameterAccess().getTransformationDefinitionParameterAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationDefinitionParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransformationDefinitionParameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationDefinitionParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationDefinitionParameterAccess().getNameAssignment_1()); }
(rule__TransformationDefinitionParameter__NameAssignment_1)
{ after(grammarAccess.getTransformationDefinitionParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassUse__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassUse__Group__0__Impl
	rule__ClassUse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassUse__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassUseAccess().getModelAssignment_0()); }
(rule__ClassUse__ModelAssignment_0)
{ after(grammarAccess.getClassUseAccess().getModelAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassUse__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassUse__Group__1__Impl
	rule__ClassUse__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassUse__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassUseAccess().getExclamationMarkKeyword_1()); }

	'!' 

{ after(grammarAccess.getClassUseAccess().getExclamationMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassUse__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassUse__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassUse__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassUseAccess().getClassNameAssignment_2()); }
(rule__ClassUse__ClassNameAssignment_2)
{ after(grammarAccess.getClassUseAccess().getClassNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Template__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__0__Impl
	rule__Template__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getTemplateKeyword_0()); }

	'template' 

{ after(grammarAccess.getTemplateAccess().getTemplateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__1__Impl
	rule__Template__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getNameAssignment_1()); }
(rule__Template__NameAssignment_1)
{ after(grammarAccess.getTemplateAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__2__Impl
	rule__Template__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getTemplateAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__3__Impl
	rule__Template__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getParametersAssignment_3()); }
(rule__Template__ParametersAssignment_3)
{ after(grammarAccess.getTemplateAccess().getParametersAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__4__Impl
	rule__Template__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getGroup_4()); }
(rule__Template__Group_4__0)*
{ after(grammarAccess.getTemplateAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__5__Impl
	rule__Template__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getTemplateAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__6__Impl
	rule__Template__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getRootsAssignment_6()); }
(rule__Template__RootsAssignment_6)
{ after(grammarAccess.getTemplateAccess().getRootsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getEndKeyword_7()); }

	'end' 

{ after(grammarAccess.getTemplateAccess().getEndKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Template__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_4__0__Impl
	rule__Template__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getTemplateAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Template__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Template__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Template__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getParametersAssignment_4_1()); }
(rule__Template__ParametersAssignment_4_1)
{ after(grammarAccess.getTemplateAccess().getParametersAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TemplateParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateParameter__Group__0__Impl
	rule__TemplateParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateParameterAccess().getNameAssignment_0()); }
(rule__TemplateParameter__NameAssignment_0)
{ after(grammarAccess.getTemplateParameterAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateParameter__Group__1__Impl
	rule__TemplateParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateParameterAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getTemplateParameterAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateParameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateParameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateParameterAccess().getTypeAssignment_2()); }
(rule__TemplateParameter__TypeAssignment_2)
{ after(grammarAccess.getTemplateParameterAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TemplateRootObject__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateRootObject__Group__0__Impl
	rule__TemplateRootObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateRootObject__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateRootObjectAccess().getGroup_0()); }
(rule__TemplateRootObject__Group_0__0)?
{ after(grammarAccess.getTemplateRootObjectAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateRootObject__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateRootObject__Group__1__Impl
	rule__TemplateRootObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateRootObject__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateRootObjectAccess().getTypeAssignment_1()); }
(rule__TemplateRootObject__TypeAssignment_1)
{ after(grammarAccess.getTemplateRootObjectAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateRootObject__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateRootObject__Group__2__Impl
	rule__TemplateRootObject__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateRootObject__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateRootObjectAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getTemplateRootObjectAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateRootObject__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateRootObject__Group__3__Impl
	rule__TemplateRootObject__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateRootObject__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateRootObjectAccess().getAssigmentsAssignment_3()); }
(rule__TemplateRootObject__AssigmentsAssignment_3)*
{ after(grammarAccess.getTemplateRootObjectAccess().getAssigmentsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateRootObject__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateRootObject__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateRootObject__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateRootObjectAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getTemplateRootObjectAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TemplateRootObject__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateRootObject__Group_0__0__Impl
	rule__TemplateRootObject__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateRootObject__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateRootObjectAccess().getNameAssignment_0_0()); }
(rule__TemplateRootObject__NameAssignment_0_0)
{ after(grammarAccess.getTemplateRootObjectAccess().getNameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateRootObject__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateRootObject__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateRootObject__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateRootObjectAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getTemplateRootObjectAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ObjectInstantiation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectInstantiation__Group__0__Impl
	rule__ObjectInstantiation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectInstantiation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectInstantiationAccess().getGroup_0()); }
(rule__ObjectInstantiation__Group_0__0)?
{ after(grammarAccess.getObjectInstantiationAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectInstantiation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectInstantiation__Group__1__Impl
	rule__ObjectInstantiation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectInstantiation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectInstantiationAccess().getTypeAssignment_1()); }
(rule__ObjectInstantiation__TypeAssignment_1)
{ after(grammarAccess.getObjectInstantiationAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectInstantiation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectInstantiation__Group__2__Impl
	rule__ObjectInstantiation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectInstantiation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectInstantiationAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getObjectInstantiationAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectInstantiation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectInstantiation__Group__3__Impl
	rule__ObjectInstantiation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectInstantiation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectInstantiationAccess().getAssigmentsAssignment_3()); }
(rule__ObjectInstantiation__AssigmentsAssignment_3)*
{ after(grammarAccess.getObjectInstantiationAccess().getAssigmentsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectInstantiation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectInstantiation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectInstantiation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectInstantiationAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getObjectInstantiationAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ObjectInstantiation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectInstantiation__Group_0__0__Impl
	rule__ObjectInstantiation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectInstantiation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectInstantiationAccess().getNameAssignment_0_0()); }
(rule__ObjectInstantiation__NameAssignment_0_0)
{ after(grammarAccess.getObjectInstantiationAccess().getNameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectInstantiation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectInstantiation__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectInstantiation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectInstantiationAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getObjectInstantiationAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeAssigment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeAssigment__Group__0__Impl
	rule__AttributeAssigment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeAssigment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAssigmentAccess().getTargetFeatureAssignment_0()); }
(rule__AttributeAssigment__TargetFeatureAssignment_0)
{ after(grammarAccess.getAttributeAssigmentAccess().getTargetFeatureAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeAssigment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeAssigment__Group__1__Impl
	rule__AttributeAssigment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeAssigment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAssigmentAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAttributeAssigmentAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeAssigment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeAssigment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeAssigment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAssigmentAccess().getExprAssignment_2()); }
(rule__AttributeAssigment__ExprAssignment_2)
{ after(grammarAccess.getAttributeAssigmentAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WithOptionalVariableExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithOptionalVariableExpression__Group__0__Impl
	rule__WithOptionalVariableExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithOptionalVariableExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithOptionalVariableExpressionAccess().getGroup_0()); }
(rule__WithOptionalVariableExpression__Group_0__0)?
{ after(grammarAccess.getWithOptionalVariableExpressionAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithOptionalVariableExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithOptionalVariableExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithOptionalVariableExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithOptionalVariableExpressionAccess().getExprAssignment_1()); }
(rule__WithOptionalVariableExpression__ExprAssignment_1)
{ after(grammarAccess.getWithOptionalVariableExpressionAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WithOptionalVariableExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithOptionalVariableExpression__Group_0__0__Impl
	rule__WithOptionalVariableExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithOptionalVariableExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithOptionalVariableExpressionAccess().getVariableAssignment_0_0()); }
(rule__WithOptionalVariableExpression__VariableAssignment_0_0)
{ after(grammarAccess.getWithOptionalVariableExpressionAccess().getVariableAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithOptionalVariableExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithOptionalVariableExpression__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithOptionalVariableExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithOptionalVariableExpressionAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getWithOptionalVariableExpressionAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ObjectSyntax__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectSyntax__Group__0__Impl
	rule__ObjectSyntax__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectSyntax__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectSyntaxAccess().getTargetFeatureAssignment_0()); }
(rule__ObjectSyntax__TargetFeatureAssignment_0)
{ after(grammarAccess.getObjectSyntaxAccess().getTargetFeatureAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectSyntax__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectSyntax__Group__1__Impl
	rule__ObjectSyntax__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectSyntax__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectSyntaxAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getObjectSyntaxAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectSyntax__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectSyntax__Group__2__Impl
	rule__ObjectSyntax__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectSyntax__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectSyntaxAccess().getGroup_2()); }
(rule__ObjectSyntax__Group_2__0)?
{ after(grammarAccess.getObjectSyntaxAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectSyntax__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectSyntax__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectSyntax__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectSyntaxAccess().getObjectAssignment_3()); }
(rule__ObjectSyntax__ObjectAssignment_3)
{ after(grammarAccess.getObjectSyntaxAccess().getObjectAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ObjectSyntax__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectSyntax__Group_2__0__Impl
	rule__ObjectSyntax__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectSyntax__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectSyntaxAccess().getFromKeyword_2_0()); }

	'from' 

{ after(grammarAccess.getObjectSyntaxAccess().getFromKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectSyntax__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectSyntax__Group_2__1__Impl
	rule__ObjectSyntax__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectSyntax__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectSyntaxAccess().getExprAssignment_2_1()); }
(rule__ObjectSyntax__ExprAssignment_2_1)
{ after(grammarAccess.getObjectSyntaxAccess().getExprAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectSyntax__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectSyntax__Group_2__2__Impl
	rule__ObjectSyntax__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectSyntax__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectSyntaxAccess().getMultivaluedAssignment_2_2()); }
(rule__ObjectSyntax__MultivaluedAssignment_2_2)?
{ after(grammarAccess.getObjectSyntaxAccess().getMultivaluedAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectSyntax__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectSyntax__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectSyntax__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectSyntaxAccess().getToKeyword_2_3()); }

	'to' 

{ after(grammarAccess.getObjectSyntaxAccess().getToKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Invocation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invocation__Group__0__Impl
	rule__Invocation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvocationAccess().getTargetFeatureAssignment_0()); }
(rule__Invocation__TargetFeatureAssignment_0)
{ after(grammarAccess.getInvocationAccess().getTargetFeatureAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Invocation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invocation__Group__1__Impl
	rule__Invocation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvocationAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getInvocationAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Invocation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invocation__Group__2__Impl
	rule__Invocation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvocationAccess().getTemplateAssignment_2()); }
(rule__Invocation__TemplateAssignment_2)
{ after(grammarAccess.getInvocationAccess().getTemplateAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Invocation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invocation__Group__3__Impl
	rule__Invocation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvocationAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getInvocationAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Invocation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invocation__Group__4__Impl
	rule__Invocation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvocationAccess().getExprAssignment_4()); }
(rule__Invocation__ExprAssignment_4)
{ after(grammarAccess.getInvocationAccess().getExprAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Invocation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invocation__Group__5__Impl
	rule__Invocation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvocationAccess().getMultivaluedAssignment_5()); }
(rule__Invocation__MultivaluedAssignment_5)?
{ after(grammarAccess.getInvocationAccess().getMultivaluedAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Invocation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invocation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvocationAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getInvocationAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__EInt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__TraceDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceDefinition__Group__0__Impl
	rule__TraceDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getLinkKeyword_0()); }

	'link' 

{ after(grammarAccess.getTraceDefinitionAccess().getLinkKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceDefinition__Group__1__Impl
	rule__TraceDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getNameAssignment_1()); }
(rule__TraceDefinition__NameAssignment_1)
{ after(grammarAccess.getTraceDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getAlternatives_2()); }
(rule__TraceDefinition__Alternatives_2)
{ after(grammarAccess.getTraceDefinitionAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TraceDefinition__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceDefinition__Group_2_0__0__Impl
	rule__TraceDefinition__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getLeftCurlyBracketKeyword_2_0_0()); }

	'{' 

{ after(grammarAccess.getTraceDefinitionAccess().getLeftCurlyBracketKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceDefinition__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceDefinition__Group_2_0__1__Impl
	rule__TraceDefinition__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getElementsAssignment_2_0_1()); }
(rule__TraceDefinition__ElementsAssignment_2_0_1)
{ after(grammarAccess.getTraceDefinitionAccess().getElementsAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceDefinition__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceDefinition__Group_2_0__2__Impl
	rule__TraceDefinition__Group_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getGroup_2_0_2()); }
(rule__TraceDefinition__Group_2_0_2__0)*
{ after(grammarAccess.getTraceDefinitionAccess().getGroup_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceDefinition__Group_2_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceDefinition__Group_2_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Group_2_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getRightCurlyBracketKeyword_2_0_3()); }

	'}' 

{ after(grammarAccess.getTraceDefinitionAccess().getRightCurlyBracketKeyword_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TraceDefinition__Group_2_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceDefinition__Group_2_0_2__0__Impl
	rule__TraceDefinition__Group_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Group_2_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getSemicolonKeyword_2_0_2_0()); }

	';' 

{ after(grammarAccess.getTraceDefinitionAccess().getSemicolonKeyword_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceDefinition__Group_2_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceDefinition__Group_2_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Group_2_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getElementsAssignment_2_0_2_1()); }
(rule__TraceDefinition__ElementsAssignment_2_0_2_1)
{ after(grammarAccess.getTraceDefinitionAccess().getElementsAssignment_2_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TraceDefinition__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceDefinition__Group_2_1__0__Impl
	rule__TraceDefinition__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getElementsAssignment_2_1_0()); }
(rule__TraceDefinition__ElementsAssignment_2_1_0)
{ after(grammarAccess.getTraceDefinitionAccess().getElementsAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceDefinition__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceDefinition__Group_2_1__1__Impl
	rule__TraceDefinition__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getElementsAssignment_2_1_1()); }
(rule__TraceDefinition__ElementsAssignment_2_1_1)*
{ after(grammarAccess.getTraceDefinitionAccess().getElementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceDefinition__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceDefinition__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getEndKeyword_2_1_2()); }

	'end' 

{ after(grammarAccess.getTraceDefinitionAccess().getEndKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TraceElementInline__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceElementInline__Group__0__Impl
	rule__TraceElementInline__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceElementInline__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceElementInlineAccess().getNameAssignment_0()); }
(rule__TraceElementInline__NameAssignment_0)
{ after(grammarAccess.getTraceElementInlineAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceElementInline__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceElementInline__Group__1__Impl
	rule__TraceElementInline__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceElementInline__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceElementInlineAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getTraceElementInlineAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceElementInline__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceElementInline__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceElementInline__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceElementInlineAccess().getTypeAssignment_2()); }
(rule__TraceElementInline__TypeAssignment_2)
{ after(grammarAccess.getTraceElementInlineAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TraceElementExpanded__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceElementExpanded__Group__0__Impl
	rule__TraceElementExpanded__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceElementExpanded__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceElementExpandedAccess().getVarKeyword_0()); }

	'var' 

{ after(grammarAccess.getTraceElementExpandedAccess().getVarKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceElementExpanded__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceElementExpanded__Group__1__Impl
	rule__TraceElementExpanded__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceElementExpanded__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceElementExpandedAccess().getNameAssignment_1()); }
(rule__TraceElementExpanded__NameAssignment_1)
{ after(grammarAccess.getTraceElementExpandedAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceElementExpanded__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceElementExpanded__Group__2__Impl
	rule__TraceElementExpanded__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceElementExpanded__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceElementExpandedAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getTraceElementExpandedAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceElementExpanded__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceElementExpanded__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceElementExpanded__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceElementExpandedAccess().getTypeAssignment_3()); }
(rule__TraceElementExpanded__TypeAssignment_3)
{ after(grammarAccess.getTraceElementExpandedAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PotencyAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PotencyAnnotation__Group__0__Impl
	rule__PotencyAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PotencyAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotencyAnnotationAccess().getAlternatives_0()); }
(rule__PotencyAnnotation__Alternatives_0)
{ after(grammarAccess.getPotencyAnnotationAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PotencyAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PotencyAnnotation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PotencyAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotencyAnnotationAccess().getValueAssignment_1()); }
(rule__PotencyAnnotation__ValueAssignment_1)
{ after(grammarAccess.getPotencyAnnotationAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__DefineVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineVariable__Group__0__Impl
	rule__DefineVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineVariableAccess().getNameAssignment_0()); }
(rule__DefineVariable__NameAssignment_0)
{ after(grammarAccess.getDefineVariableAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineVariable__Group__1__Impl
	rule__DefineVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineVariableAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getDefineVariableAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineVariable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineVariableAccess().getExpressionAssignment_2()); }
(rule__DefineVariable__ExpressionAssignment_2)
{ after(grammarAccess.getDefineVariableAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ModelReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelReference__Group__0__Impl
	rule__ModelReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelReferenceAccess().getModelAssignment_0()); }
(rule__ModelReference__ModelAssignment_0)
{ after(grammarAccess.getModelReferenceAccess().getModelAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelReference__Group__1__Impl
	rule__ModelReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelReferenceAccess().getExclamationMarkKeyword_1()); }

	'!' 

{ after(grammarAccess.getModelReferenceAccess().getExclamationMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelReference__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelReferenceAccess().getClassNameAssignment_2()); }
(rule__ModelReference__ClassNameAssignment_2)
{ after(grammarAccess.getModelReferenceAccess().getClassNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ParenthesizedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group__0__Impl
	rule__ParenthesizedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesizedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group__1__Impl
	rule__ParenthesizedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
{ after(grammarAccess.getParenthesizedExpressionAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesizedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClosureDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosureDeclaration__Group__0__Impl
	rule__ClosureDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureDeclarationAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getClosureDeclarationAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosureDeclaration__Group__1__Impl
	rule__ClosureDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureDeclarationAccess().getGroup_1()); }
(rule__ClosureDeclaration__Group_1__0)?
{ after(grammarAccess.getClosureDeclarationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosureDeclaration__Group__2__Impl
	rule__ClosureDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getClosureDeclarationAccess().getStatementsAssignment_2()); }
(rule__ClosureDeclaration__StatementsAssignment_2)
{ after(grammarAccess.getClosureDeclarationAccess().getStatementsAssignment_2()); }
)
(
{ before(grammarAccess.getClosureDeclarationAccess().getStatementsAssignment_2()); }
(rule__ClosureDeclaration__StatementsAssignment_2)*
{ after(grammarAccess.getClosureDeclarationAccess().getStatementsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosureDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureDeclarationAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getClosureDeclarationAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ClosureDeclaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosureDeclaration__Group_1__0__Impl
	rule__ClosureDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureDeclarationAccess().getVerticalLineKeyword_1_0()); }

	'|' 

{ after(grammarAccess.getClosureDeclarationAccess().getVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureDeclaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosureDeclaration__Group_1__1__Impl
	rule__ClosureDeclaration__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureDeclarationAccess().getFormalParametersAssignment_1_1()); }
(rule__ClosureDeclaration__FormalParametersAssignment_1_1)
{ after(grammarAccess.getClosureDeclarationAccess().getFormalParametersAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureDeclaration__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosureDeclaration__Group_1__2__Impl
	rule__ClosureDeclaration__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureDeclarationAccess().getGroup_1_2()); }
(rule__ClosureDeclaration__Group_1_2__0)*
{ after(grammarAccess.getClosureDeclarationAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureDeclaration__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosureDeclaration__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureDeclarationAccess().getVerticalLineKeyword_1_3()); }

	'|' 

{ after(grammarAccess.getClosureDeclarationAccess().getVerticalLineKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ClosureDeclaration__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosureDeclaration__Group_1_2__0__Impl
	rule__ClosureDeclaration__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureDeclarationAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getClosureDeclarationAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureDeclaration__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosureDeclaration__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureDeclarationAccess().getFormalParametersAssignment_1_2_1()); }
(rule__ClosureDeclaration__FormalParametersAssignment_1_2_1)
{ after(grammarAccess.getClosureDeclarationAccess().getFormalParametersAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__WithResolveMethodCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group__0__Impl
	rule__WithResolveMethodCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
{ after(grammarAccess.getWithResolveMethodCallAccess().getPrimaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getAlternatives_1()); }
(rule__WithResolveMethodCall__Alternatives_1)?
{ after(grammarAccess.getWithResolveMethodCallAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WithResolveMethodCall__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_0__0__Impl
	rule__WithResolveMethodCall__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getBinaryExprLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getWithResolveMethodCallAccess().getBinaryExprLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_0__1__Impl
	rule__WithResolveMethodCall__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getBinaryOpAssignment_1_0_1()); }
(rule__WithResolveMethodCall__BinaryOpAssignment_1_0_1)
{ after(grammarAccess.getWithResolveMethodCallAccess().getBinaryOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getRightAssignment_1_0_2()); }
(rule__WithResolveMethodCall__RightAssignment_1_0_2)
{ after(grammarAccess.getWithResolveMethodCallAccess().getRightAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WithResolveMethodCall__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_1__0__Impl
	rule__WithResolveMethodCall__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1_0()); }
(rule__WithResolveMethodCall__Group_1_1_0__0)
{ after(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1_1()); }
(rule__WithResolveMethodCall__Group_1_1_1__0)?
{ after(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WithResolveMethodCall__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_1_0__0__Impl
	rule__WithResolveMethodCall__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getResolveLinkExprAction_1_1_0_0()); }
(

)
{ after(grammarAccess.getWithResolveMethodCallAccess().getResolveLinkExprAction_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_1_0__1__Impl
	rule__WithResolveMethodCall__Group_1_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getLeftSquareBracketKeyword_1_1_0_1()); }

	'[' 

{ after(grammarAccess.getWithResolveMethodCallAccess().getLeftSquareBracketKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_1_0__2__Impl
	rule__WithResolveMethodCall__Group_1_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1_0_2()); }
(rule__WithResolveMethodCall__Group_1_1_0_2__0)?
{ after(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_1_0__3__Impl
	rule__WithResolveMethodCall__Group_1_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getLinkNameAssignment_1_1_0_3()); }
(rule__WithResolveMethodCall__LinkNameAssignment_1_1_0_3)
{ after(grammarAccess.getWithResolveMethodCallAccess().getLinkNameAssignment_1_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_1_0__4__Impl
	rule__WithResolveMethodCall__Group_1_1_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_1_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1_0_4()); }
(rule__WithResolveMethodCall__Group_1_1_0_4__0)?
{ after(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_1_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_1_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_1_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getRightSquareBracketKeyword_1_1_0_5()); }

	']' 

{ after(grammarAccess.getWithResolveMethodCallAccess().getRightSquareBracketKeyword_1_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__WithResolveMethodCall__Group_1_1_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_1_0_2__0__Impl
	rule__WithResolveMethodCall__Group_1_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_1_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getModuleAssignment_1_1_0_2_0()); }
(rule__WithResolveMethodCall__ModuleAssignment_1_1_0_2_0)
{ after(grammarAccess.getWithResolveMethodCallAccess().getModuleAssignment_1_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_1_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_1_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getIsExternalAssignment_1_1_0_2_1()); }
(rule__WithResolveMethodCall__IsExternalAssignment_1_1_0_2_1)
{ after(grammarAccess.getWithResolveMethodCallAccess().getIsExternalAssignment_1_1_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WithResolveMethodCall__Group_1_1_0_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_1_0_4__0__Impl
	rule__WithResolveMethodCall__Group_1_1_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_1_0_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getFullStopKeyword_1_1_0_4_0()); }

	'.' 

{ after(grammarAccess.getWithResolveMethodCallAccess().getFullStopKeyword_1_1_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_1_0_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_1_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_1_0_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getFeatureNameAssignment_1_1_0_4_1()); }
(rule__WithResolveMethodCall__FeatureNameAssignment_1_1_0_4_1)
{ after(grammarAccess.getWithResolveMethodCallAccess().getFeatureNameAssignment_1_1_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WithResolveMethodCall__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_1_1__0__Impl
	rule__WithResolveMethodCall__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1_1_0()); }
(rule__WithResolveMethodCall__Group_1_1_1_0__0)
{ after(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_1_1__1__Impl
	rule__WithResolveMethodCall__Group_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getFullStopKeyword_1_1_1_1()); }

	'.' 

{ after(grammarAccess.getWithResolveMethodCallAccess().getFullStopKeyword_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_1_1__2__Impl
	rule__WithResolveMethodCall__Group_1_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getMethodNameAssignment_1_1_1_2()); }
(rule__WithResolveMethodCall__MethodNameAssignment_1_1_1_2)
{ after(grammarAccess.getWithResolveMethodCallAccess().getMethodNameAssignment_1_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_1_1__3__Impl
	rule__WithResolveMethodCall__Group_1_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1_1_3()); }
(rule__WithResolveMethodCall__Group_1_1_1_3__0)?
{ after(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_1_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getParametersAssignment_1_1_1_4()); }
(rule__WithResolveMethodCall__ParametersAssignment_1_1_1_4)?
{ after(grammarAccess.getWithResolveMethodCallAccess().getParametersAssignment_1_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__WithResolveMethodCall__Group_1_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_1_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getMethodCallReceptorAction_1_1_1_0_0()); }
(

)
{ after(grammarAccess.getWithResolveMethodCallAccess().getMethodCallReceptorAction_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__WithResolveMethodCall__Group_1_1_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_1_1_3__0__Impl
	rule__WithResolveMethodCall__Group_1_1_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_1_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getWithParametersAssignment_1_1_1_3_0()); }
(rule__WithResolveMethodCall__WithParametersAssignment_1_1_1_3_0)
{ after(grammarAccess.getWithResolveMethodCallAccess().getWithParametersAssignment_1_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_1_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_1_1_3__1__Impl
	rule__WithResolveMethodCall__Group_1_1_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_1_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getParametersAssignment_1_1_1_3_1()); }
(rule__WithResolveMethodCall__ParametersAssignment_1_1_1_3_1)
{ after(grammarAccess.getWithResolveMethodCallAccess().getParametersAssignment_1_1_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_1_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_1_1_3__2__Impl
	rule__WithResolveMethodCall__Group_1_1_1_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_1_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1_1_3_2()); }
(rule__WithResolveMethodCall__Group_1_1_1_3_2__0)*
{ after(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_1_1_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_1_1_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_1_1_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getRightParenthesisKeyword_1_1_1_3_3()); }

	')' 

{ after(grammarAccess.getWithResolveMethodCallAccess().getRightParenthesisKeyword_1_1_1_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__WithResolveMethodCall__Group_1_1_1_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_1_1_3_2__0__Impl
	rule__WithResolveMethodCall__Group_1_1_1_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_1_1_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getCommaKeyword_1_1_1_3_2_0()); }

	',' 

{ after(grammarAccess.getWithResolveMethodCallAccess().getCommaKeyword_1_1_1_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_1_1_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_1_1_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_1_1_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getParametersAssignment_1_1_1_3_2_1()); }
(rule__WithResolveMethodCall__ParametersAssignment_1_1_1_3_2_1)
{ after(grammarAccess.getWithResolveMethodCallAccess().getParametersAssignment_1_1_1_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WithResolveMethodCall__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_2__0__Impl
	rule__WithResolveMethodCall__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2_0()); }
(rule__WithResolveMethodCall__Group_1_2_0__0)
{ after(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2_1()); }
(rule__WithResolveMethodCall__Group_1_2_1__0)?
{ after(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WithResolveMethodCall__Group_1_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_2_0__0__Impl
	rule__WithResolveMethodCall__Group_1_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2_0_0()); }
(rule__WithResolveMethodCall__Group_1_2_0_0__0)
{ after(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_2_0__1__Impl
	rule__WithResolveMethodCall__Group_1_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getFullStopKeyword_1_2_0_1()); }

	'.' 

{ after(grammarAccess.getWithResolveMethodCallAccess().getFullStopKeyword_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_2_0__2__Impl
	rule__WithResolveMethodCall__Group_1_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getMethodNameAssignment_1_2_0_2()); }
(rule__WithResolveMethodCall__MethodNameAssignment_1_2_0_2)
{ after(grammarAccess.getWithResolveMethodCallAccess().getMethodNameAssignment_1_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_2_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_2_0__3__Impl
	rule__WithResolveMethodCall__Group_1_2_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_2_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2_0_3()); }
(rule__WithResolveMethodCall__Group_1_2_0_3__0)?
{ after(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_2_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_2_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_2_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getParametersAssignment_1_2_0_4()); }
(rule__WithResolveMethodCall__ParametersAssignment_1_2_0_4)?
{ after(grammarAccess.getWithResolveMethodCallAccess().getParametersAssignment_1_2_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__WithResolveMethodCall__Group_1_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_2_0_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getMethodCallReceptorAction_1_2_0_0_0()); }
(

)
{ after(grammarAccess.getWithResolveMethodCallAccess().getMethodCallReceptorAction_1_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__WithResolveMethodCall__Group_1_2_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_2_0_3__0__Impl
	rule__WithResolveMethodCall__Group_1_2_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_2_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getWithParametersAssignment_1_2_0_3_0()); }
(rule__WithResolveMethodCall__WithParametersAssignment_1_2_0_3_0)
{ after(grammarAccess.getWithResolveMethodCallAccess().getWithParametersAssignment_1_2_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_2_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_2_0_3__1__Impl
	rule__WithResolveMethodCall__Group_1_2_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_2_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getParametersAssignment_1_2_0_3_1()); }
(rule__WithResolveMethodCall__ParametersAssignment_1_2_0_3_1)
{ after(grammarAccess.getWithResolveMethodCallAccess().getParametersAssignment_1_2_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_2_0_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_2_0_3__2__Impl
	rule__WithResolveMethodCall__Group_1_2_0_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_2_0_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2_0_3_2()); }
(rule__WithResolveMethodCall__Group_1_2_0_3_2__0)*
{ after(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2_0_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_2_0_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_2_0_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_2_0_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getRightParenthesisKeyword_1_2_0_3_3()); }

	')' 

{ after(grammarAccess.getWithResolveMethodCallAccess().getRightParenthesisKeyword_1_2_0_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__WithResolveMethodCall__Group_1_2_0_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_2_0_3_2__0__Impl
	rule__WithResolveMethodCall__Group_1_2_0_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_2_0_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getCommaKeyword_1_2_0_3_2_0()); }

	',' 

{ after(grammarAccess.getWithResolveMethodCallAccess().getCommaKeyword_1_2_0_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_2_0_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_2_0_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_2_0_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getParametersAssignment_1_2_0_3_2_1()); }
(rule__WithResolveMethodCall__ParametersAssignment_1_2_0_3_2_1)
{ after(grammarAccess.getWithResolveMethodCallAccess().getParametersAssignment_1_2_0_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WithResolveMethodCall__Group_1_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_2_1__0__Impl
	rule__WithResolveMethodCall__Group_1_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getResolveLinkExprAction_1_2_1_0()); }
(

)
{ after(grammarAccess.getWithResolveMethodCallAccess().getResolveLinkExprAction_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_2_1__1__Impl
	rule__WithResolveMethodCall__Group_1_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getLeftSquareBracketKeyword_1_2_1_1()); }

	'[' 

{ after(grammarAccess.getWithResolveMethodCallAccess().getLeftSquareBracketKeyword_1_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_2_1__2__Impl
	rule__WithResolveMethodCall__Group_1_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2_1_2()); }
(rule__WithResolveMethodCall__Group_1_2_1_2__0)?
{ after(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_2_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_2_1__3__Impl
	rule__WithResolveMethodCall__Group_1_2_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_2_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getLinkNameAssignment_1_2_1_3()); }
(rule__WithResolveMethodCall__LinkNameAssignment_1_2_1_3)
{ after(grammarAccess.getWithResolveMethodCallAccess().getLinkNameAssignment_1_2_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_2_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_2_1__4__Impl
	rule__WithResolveMethodCall__Group_1_2_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_2_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2_1_4()); }
(rule__WithResolveMethodCall__Group_1_2_1_4__0)?
{ after(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_2_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_2_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_2_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getRightSquareBracketKeyword_1_2_1_5()); }

	']' 

{ after(grammarAccess.getWithResolveMethodCallAccess().getRightSquareBracketKeyword_1_2_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__WithResolveMethodCall__Group_1_2_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_2_1_2__0__Impl
	rule__WithResolveMethodCall__Group_1_2_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_2_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getModuleAssignment_1_2_1_2_0()); }
(rule__WithResolveMethodCall__ModuleAssignment_1_2_1_2_0)
{ after(grammarAccess.getWithResolveMethodCallAccess().getModuleAssignment_1_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_2_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_2_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_2_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getIsExternalAssignment_1_2_1_2_1()); }
(rule__WithResolveMethodCall__IsExternalAssignment_1_2_1_2_1)
{ after(grammarAccess.getWithResolveMethodCallAccess().getIsExternalAssignment_1_2_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WithResolveMethodCall__Group_1_2_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_2_1_4__0__Impl
	rule__WithResolveMethodCall__Group_1_2_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_2_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getFullStopKeyword_1_2_1_4_0()); }

	'.' 

{ after(grammarAccess.getWithResolveMethodCallAccess().getFullStopKeyword_1_2_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WithResolveMethodCall__Group_1_2_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WithResolveMethodCall__Group_1_2_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__Group_1_2_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getFeatureNameAssignment_1_2_1_4_1()); }
(rule__WithResolveMethodCall__FeatureNameAssignment_1_2_1_4_1)
{ after(grammarAccess.getWithResolveMethodCallAccess().getFeatureNameAssignment_1_2_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__MatchTraceExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchTraceExpression__Group__0__Impl
	rule__MatchTraceExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchTraceExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchTraceExpressionAccess().getMatchKeyword_0()); }

	'match' 

{ after(grammarAccess.getMatchTraceExpressionAccess().getMatchKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchTraceExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchTraceExpression__Group__1__Impl
	rule__MatchTraceExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchTraceExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchTraceExpressionAccess().getGroup_1()); }
(rule__MatchTraceExpression__Group_1__0)?
{ after(grammarAccess.getMatchTraceExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchTraceExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchTraceExpression__Group__2__Impl
	rule__MatchTraceExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchTraceExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchTraceExpressionAccess().getTraceAssignment_2()); }
(rule__MatchTraceExpression__TraceAssignment_2)
{ after(grammarAccess.getMatchTraceExpressionAccess().getTraceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchTraceExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchTraceExpression__Group__3__Impl
	rule__MatchTraceExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchTraceExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchTraceExpressionAccess().getWithKeyword_3()); }

	'with' 

{ after(grammarAccess.getMatchTraceExpressionAccess().getWithKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchTraceExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchTraceExpression__Group__4__Impl
	rule__MatchTraceExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchTraceExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchTraceExpressionAccess().getLeftSquareBracketKeyword_4()); }

	'[' 

{ after(grammarAccess.getMatchTraceExpressionAccess().getLeftSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchTraceExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchTraceExpression__Group__5__Impl
	rule__MatchTraceExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchTraceExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchTraceExpressionAccess().getTraceExprAssignment_5()); }
(rule__MatchTraceExpression__TraceExprAssignment_5)
{ after(grammarAccess.getMatchTraceExpressionAccess().getTraceExprAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchTraceExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchTraceExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchTraceExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchTraceExpressionAccess().getRightSquareBracketKeyword_6()); }

	']' 

{ after(grammarAccess.getMatchTraceExpressionAccess().getRightSquareBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__MatchTraceExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchTraceExpression__Group_1__0__Impl
	rule__MatchTraceExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchTraceExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchTraceExpressionAccess().getIDTerminalRuleCall_1_0()); }
	RULE_ID
{ after(grammarAccess.getMatchTraceExpressionAccess().getIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchTraceExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchTraceExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchTraceExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchTraceExpressionAccess().getExclamationMarkKeyword_1_1()); }

	'!' 

{ after(grammarAccess.getMatchTraceExpressionAccess().getExclamationMarkKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TraceExprLanguage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceExprLanguage__Group__0__Impl
	rule__TraceExprLanguage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceExprLanguage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceExprLanguageAccess().getTraceVarAssignment_0()); }
(rule__TraceExprLanguage__TraceVarAssignment_0)
{ after(grammarAccess.getTraceExprLanguageAccess().getTraceVarAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceExprLanguage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceExprLanguage__Group__1__Impl
	rule__TraceExprLanguage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceExprLanguage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceExprLanguageAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getTraceExprLanguageAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceExprLanguage__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceExprLanguage__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceExprLanguage__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceExprLanguageAccess().getExprAssignment_2()); }
(rule__TraceExprLanguage__ExprAssignment_2)
{ after(grammarAccess.getTraceExprLanguageAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__PutTraceParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PutTraceParameter__Group__0__Impl
	rule__PutTraceParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PutTraceParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPutTraceParameterAccess().getTraceVarAssignment_0()); }
(rule__PutTraceParameter__TraceVarAssignment_0)
{ after(grammarAccess.getPutTraceParameterAccess().getTraceVarAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PutTraceParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PutTraceParameter__Group__1__Impl
	rule__PutTraceParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PutTraceParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPutTraceParameterAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getPutTraceParameterAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PutTraceParameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PutTraceParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PutTraceParameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPutTraceParameterAccess().getValueAssignment_2()); }
(rule__PutTraceParameter__ValueAssignment_2)
{ after(grammarAccess.getPutTraceParameterAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EDouble__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group__0__Impl
	rule__EDouble__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group__1__Impl
	rule__EDouble__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getEDoubleAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__TaoTransformation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaoTransformationAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getTaoTransformationAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaoTransformation__InModelsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaoTransformationAccess().getInModelsTransformationDefinitionParameterParserRuleCall_3_0()); }
	ruleTransformationDefinitionParameter{ after(grammarAccess.getTaoTransformationAccess().getInModelsTransformationDefinitionParameterParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaoTransformation__InModelsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaoTransformationAccess().getInModelsTransformationDefinitionParameterParserRuleCall_4_1_0()); }
	ruleTransformationDefinitionParameter{ after(grammarAccess.getTaoTransformationAccess().getInModelsTransformationDefinitionParameterParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaoTransformation__OutModelsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaoTransformationAccess().getOutModelsTransformationDefinitionParameterParserRuleCall_8_0()); }
	ruleTransformationDefinitionParameter{ after(grammarAccess.getTaoTransformationAccess().getOutModelsTransformationDefinitionParameterParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaoTransformation__OutModelsAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaoTransformationAccess().getOutModelsTransformationDefinitionParameterParserRuleCall_9_1_0()); }
	ruleTransformationDefinitionParameter{ after(grammarAccess.getTaoTransformationAccess().getOutModelsTransformationDefinitionParameterParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaoTransformation__UsesAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaoTransformationAccess().getUsesUsesStatementsParserRuleCall_11_0()); }
	ruleUsesStatements{ after(grammarAccess.getTaoTransformationAccess().getUsesUsesStatementsParserRuleCall_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaoTransformation__TemplatesAssignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaoTransformationAccess().getTemplatesTemplateParserRuleCall_12_0()); }
	ruleTemplate{ after(grammarAccess.getTaoTransformationAccess().getTemplatesTemplateParserRuleCall_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UseDeclaration__ModuleAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseDeclarationAccess().getModuleEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getUseDeclarationAccess().getModuleEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UseDeclaration__AsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseDeclarationAccess().getAsEStringParserRuleCall_2_1_0()); }
	ruleEString{ after(grammarAccess.getUseDeclarationAccess().getAsEStringParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationDefinitionParameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationDefinitionParameterAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getTransformationDefinitionParameterAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassUse__ModelAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassUseAccess().getModelRepresentModelCrossReference_0_0()); }
(
{ before(grammarAccess.getClassUseAccess().getModelRepresentModelIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getClassUseAccess().getModelRepresentModelIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getClassUseAccess().getModelRepresentModelCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassUse__ClassNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassUseAccess().getClassNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getClassUseAccess().getClassNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Template__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTemplateAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Template__ParametersAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getParametersTemplateParameterParserRuleCall_3_0()); }
	ruleTemplateParameter{ after(grammarAccess.getTemplateAccess().getParametersTemplateParameterParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Template__ParametersAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getParametersTemplateParameterParserRuleCall_4_1_0()); }
	ruleTemplateParameter{ after(grammarAccess.getTemplateAccess().getParametersTemplateParameterParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Template__RootsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateAccess().getRootsTemplateRootObjectParserRuleCall_6_0()); }
	ruleTemplateRootObject{ after(grammarAccess.getTemplateAccess().getRootsTemplateRootObjectParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateParameter__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateParameterAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getTemplateParameterAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateParameter__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateParameterAccess().getTypeClassUseParserRuleCall_2_0()); }
	ruleClassUse{ after(grammarAccess.getTemplateParameterAccess().getTypeClassUseParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateRootObject__NameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateRootObjectAccess().getNameIDTerminalRuleCall_0_0_0()); }
	RULE_ID{ after(grammarAccess.getTemplateRootObjectAccess().getNameIDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateRootObject__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateRootObjectAccess().getTypeClassUseParserRuleCall_1_0()); }
	ruleClassUse{ after(grammarAccess.getTemplateRootObjectAccess().getTypeClassUseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateRootObject__AssigmentsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateRootObjectAccess().getAssigmentsAssignmentParserRuleCall_3_0()); }
	ruleAssignment{ after(grammarAccess.getTemplateRootObjectAccess().getAssigmentsAssignmentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectInstantiation__NameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectInstantiationAccess().getNameIDTerminalRuleCall_0_0_0()); }
	RULE_ID{ after(grammarAccess.getObjectInstantiationAccess().getNameIDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectInstantiation__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectInstantiationAccess().getTypeClassUseParserRuleCall_1_0()); }
	ruleClassUse{ after(grammarAccess.getObjectInstantiationAccess().getTypeClassUseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectInstantiation__AssigmentsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectInstantiationAccess().getAssigmentsAssignmentParserRuleCall_3_0()); }
	ruleAssignment{ after(grammarAccess.getObjectInstantiationAccess().getAssigmentsAssignmentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeAssigment__TargetFeatureAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAssigmentAccess().getTargetFeatureIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getAttributeAssigmentAccess().getTargetFeatureIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeAssigment__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAssigmentAccess().getExprSourceExpressionParserRuleCall_2_0()); }
	ruleSourceExpression{ after(grammarAccess.getAttributeAssigmentAccess().getExprSourceExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithOptionalVariableExpression__VariableAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithOptionalVariableExpressionAccess().getVariableObjectSourceVariableParserRuleCall_0_0_0()); }
	ruleObjectSourceVariable{ after(grammarAccess.getWithOptionalVariableExpressionAccess().getVariableObjectSourceVariableParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithOptionalVariableExpression__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithOptionalVariableExpressionAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getWithOptionalVariableExpressionAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectSourceVariable__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectSourceVariableAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getObjectSourceVariableAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectSyntax__TargetFeatureAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectSyntaxAccess().getTargetFeatureIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getObjectSyntaxAccess().getTargetFeatureIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectSyntax__ExprAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectSyntaxAccess().getExprSourceExpressionParserRuleCall_2_1_0()); }
	ruleSourceExpression{ after(grammarAccess.getObjectSyntaxAccess().getExprSourceExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectSyntax__MultivaluedAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectSyntaxAccess().getMultivaluedAsteriskKeyword_2_2_0()); }
(
{ before(grammarAccess.getObjectSyntaxAccess().getMultivaluedAsteriskKeyword_2_2_0()); }

	'*' 

{ after(grammarAccess.getObjectSyntaxAccess().getMultivaluedAsteriskKeyword_2_2_0()); }
)

{ after(grammarAccess.getObjectSyntaxAccess().getMultivaluedAsteriskKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectSyntax__ObjectAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectSyntaxAccess().getObjectObjectInstantiationParserRuleCall_3_0()); }
	ruleObjectInstantiation{ after(grammarAccess.getObjectSyntaxAccess().getObjectObjectInstantiationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__TargetFeatureAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvocationAccess().getTargetFeatureIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getInvocationAccess().getTargetFeatureIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__TemplateAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvocationAccess().getTemplateTemplateCrossReference_2_0()); }
(
{ before(grammarAccess.getInvocationAccess().getTemplateTemplateIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getInvocationAccess().getTemplateTemplateIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getInvocationAccess().getTemplateTemplateCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__ExprAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvocationAccess().getExprSourceExpressionParserRuleCall_4_0()); }
	ruleSourceExpression{ after(grammarAccess.getInvocationAccess().getExprSourceExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Invocation__MultivaluedAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvocationAccess().getMultivaluedAsteriskKeyword_5_0()); }
(
{ before(grammarAccess.getInvocationAccess().getMultivaluedAsteriskKeyword_5_0()); }

	'*' 

{ after(grammarAccess.getInvocationAccess().getMultivaluedAsteriskKeyword_5_0()); }
)

{ after(grammarAccess.getInvocationAccess().getMultivaluedAsteriskKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__TraceDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getTraceDefinitionAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__ElementsAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getElementsTraceElementInlineParserRuleCall_2_0_1_0()); }
	ruleTraceElementInline{ after(grammarAccess.getTraceDefinitionAccess().getElementsTraceElementInlineParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__ElementsAssignment_2_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getElementsTraceElementInlineParserRuleCall_2_0_2_1_0()); }
	ruleTraceElementInline{ after(grammarAccess.getTraceDefinitionAccess().getElementsTraceElementInlineParserRuleCall_2_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__ElementsAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getElementsTraceElementExpandedParserRuleCall_2_1_0_0()); }
	ruleTraceElementExpanded{ after(grammarAccess.getTraceDefinitionAccess().getElementsTraceElementExpandedParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__ElementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getElementsTraceElementExpandedParserRuleCall_2_1_1_0()); }
	ruleTraceElementExpanded{ after(grammarAccess.getTraceDefinitionAccess().getElementsTraceElementExpandedParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraceElementInline__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceElementInlineAccess().getNameEStringParserRuleCall_0_0()); }
	ruleEString{ after(grammarAccess.getTraceElementInlineAccess().getNameEStringParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraceElementInline__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceElementInlineAccess().getTypeTypeExpressionParserRuleCall_2_0()); }
	ruleTypeExpression{ after(grammarAccess.getTraceElementInlineAccess().getTypeTypeExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraceElementExpanded__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceElementExpandedAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getTraceElementExpandedAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraceElementExpanded__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceElementExpandedAccess().getTypeTypeExpressionParserRuleCall_3_0()); }
	ruleTypeExpression{ after(grammarAccess.getTraceElementExpandedAccess().getTypeTypeExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PotencyAnnotation__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotencyAnnotationAccess().getValueINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getPotencyAnnotationAccess().getValueINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__DefineVariable__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineVariableAccess().getNameEStringParserRuleCall_0_0()); }
	ruleEString{ after(grammarAccess.getDefineVariableAccess().getNameEStringParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefineVariable__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineVariableAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getDefineVariableAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelReference__ModelAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelReferenceAccess().getModelRepresentModelCrossReference_0_0()); }
(
{ before(grammarAccess.getModelReferenceAccess().getModelRepresentModelIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getModelReferenceAccess().getModelRepresentModelIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getModelReferenceAccess().getModelRepresentModelCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelReference__ClassNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelReferenceAccess().getClassNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getModelReferenceAccess().getClassNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__VariableAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getVariableVariableCrossReference_0()); }
(
{ before(grammarAccess.getVariableReferenceAccess().getVariableVariableIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getVariableReferenceAccess().getVariableVariableIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getVariableReferenceAccess().getVariableVariableCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__FormalParametersAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureDeclarationAccess().getFormalParametersClosureParameterParserRuleCall_1_1_0()); }
	ruleClosureParameter{ after(grammarAccess.getClosureDeclarationAccess().getFormalParametersClosureParameterParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__FormalParametersAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureDeclarationAccess().getFormalParametersClosureParameterParserRuleCall_1_2_1_0()); }
	ruleClosureParameter{ after(grammarAccess.getClosureDeclarationAccess().getFormalParametersClosureParameterParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__StatementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureDeclarationAccess().getStatementsStatementParserRuleCall_2_0()); }
	ruleStatement{ after(grammarAccess.getClosureDeclarationAccess().getStatementsStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureParameter__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureParameterAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getClosureParameterAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WithResolveMethodCall__BinaryOpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getBinaryOpBinaryOpEnumRuleCall_1_0_1_0()); }
	ruleBinaryOp{ after(grammarAccess.getWithResolveMethodCallAccess().getBinaryOpBinaryOpEnumRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__RightAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getRightExpressionParserRuleCall_1_0_2_0()); }
	ruleExpression{ after(grammarAccess.getWithResolveMethodCallAccess().getRightExpressionParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__ModuleAssignment_1_1_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getModuleUseDeclarationCrossReference_1_1_0_2_0_0()); }
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getModuleUseDeclarationIDTerminalRuleCall_1_1_0_2_0_0_1()); }
	RULE_ID{ after(grammarAccess.getWithResolveMethodCallAccess().getModuleUseDeclarationIDTerminalRuleCall_1_1_0_2_0_0_1()); }
)
{ after(grammarAccess.getWithResolveMethodCallAccess().getModuleUseDeclarationCrossReference_1_1_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__IsExternalAssignment_1_1_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getIsExternalExclamationMarkKeyword_1_1_0_2_1_0()); }
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getIsExternalExclamationMarkKeyword_1_1_0_2_1_0()); }

	'!' 

{ after(grammarAccess.getWithResolveMethodCallAccess().getIsExternalExclamationMarkKeyword_1_1_0_2_1_0()); }
)

{ after(grammarAccess.getWithResolveMethodCallAccess().getIsExternalExclamationMarkKeyword_1_1_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__LinkNameAssignment_1_1_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getLinkNameEStringParserRuleCall_1_1_0_3_0()); }
	ruleEString{ after(grammarAccess.getWithResolveMethodCallAccess().getLinkNameEStringParserRuleCall_1_1_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__FeatureNameAssignment_1_1_0_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getFeatureNameEStringParserRuleCall_1_1_0_4_1_0()); }
	ruleEString{ after(grammarAccess.getWithResolveMethodCallAccess().getFeatureNameEStringParserRuleCall_1_1_0_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__MethodNameAssignment_1_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getMethodNameEStringParserRuleCall_1_1_1_2_0()); }
	ruleEString{ after(grammarAccess.getWithResolveMethodCallAccess().getMethodNameEStringParserRuleCall_1_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__WithParametersAssignment_1_1_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getWithParametersLeftParenthesisKeyword_1_1_1_3_0_0()); }
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getWithParametersLeftParenthesisKeyword_1_1_1_3_0_0()); }

	'(' 

{ after(grammarAccess.getWithResolveMethodCallAccess().getWithParametersLeftParenthesisKeyword_1_1_1_3_0_0()); }
)

{ after(grammarAccess.getWithResolveMethodCallAccess().getWithParametersLeftParenthesisKeyword_1_1_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__ParametersAssignment_1_1_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getParametersExpressionParserRuleCall_1_1_1_3_1_0()); }
	ruleExpression{ after(grammarAccess.getWithResolveMethodCallAccess().getParametersExpressionParserRuleCall_1_1_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__ParametersAssignment_1_1_1_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getParametersExpressionParserRuleCall_1_1_1_3_2_1_0()); }
	ruleExpression{ after(grammarAccess.getWithResolveMethodCallAccess().getParametersExpressionParserRuleCall_1_1_1_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__ParametersAssignment_1_1_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getParametersClosureDeclarationParserRuleCall_1_1_1_4_0()); }
	ruleClosureDeclaration{ after(grammarAccess.getWithResolveMethodCallAccess().getParametersClosureDeclarationParserRuleCall_1_1_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__MethodNameAssignment_1_2_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getMethodNameEStringParserRuleCall_1_2_0_2_0()); }
	ruleEString{ after(grammarAccess.getWithResolveMethodCallAccess().getMethodNameEStringParserRuleCall_1_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__WithParametersAssignment_1_2_0_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getWithParametersLeftParenthesisKeyword_1_2_0_3_0_0()); }
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getWithParametersLeftParenthesisKeyword_1_2_0_3_0_0()); }

	'(' 

{ after(grammarAccess.getWithResolveMethodCallAccess().getWithParametersLeftParenthesisKeyword_1_2_0_3_0_0()); }
)

{ after(grammarAccess.getWithResolveMethodCallAccess().getWithParametersLeftParenthesisKeyword_1_2_0_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__ParametersAssignment_1_2_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getParametersExpressionParserRuleCall_1_2_0_3_1_0()); }
	ruleExpression{ after(grammarAccess.getWithResolveMethodCallAccess().getParametersExpressionParserRuleCall_1_2_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__ParametersAssignment_1_2_0_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getParametersExpressionParserRuleCall_1_2_0_3_2_1_0()); }
	ruleExpression{ after(grammarAccess.getWithResolveMethodCallAccess().getParametersExpressionParserRuleCall_1_2_0_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__ParametersAssignment_1_2_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getParametersClosureDeclarationParserRuleCall_1_2_0_4_0()); }
	ruleClosureDeclaration{ after(grammarAccess.getWithResolveMethodCallAccess().getParametersClosureDeclarationParserRuleCall_1_2_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__ModuleAssignment_1_2_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getModuleUseDeclarationCrossReference_1_2_1_2_0_0()); }
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getModuleUseDeclarationIDTerminalRuleCall_1_2_1_2_0_0_1()); }
	RULE_ID{ after(grammarAccess.getWithResolveMethodCallAccess().getModuleUseDeclarationIDTerminalRuleCall_1_2_1_2_0_0_1()); }
)
{ after(grammarAccess.getWithResolveMethodCallAccess().getModuleUseDeclarationCrossReference_1_2_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__IsExternalAssignment_1_2_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getIsExternalExclamationMarkKeyword_1_2_1_2_1_0()); }
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getIsExternalExclamationMarkKeyword_1_2_1_2_1_0()); }

	'!' 

{ after(grammarAccess.getWithResolveMethodCallAccess().getIsExternalExclamationMarkKeyword_1_2_1_2_1_0()); }
)

{ after(grammarAccess.getWithResolveMethodCallAccess().getIsExternalExclamationMarkKeyword_1_2_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__LinkNameAssignment_1_2_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getLinkNameEStringParserRuleCall_1_2_1_3_0()); }
	ruleEString{ after(grammarAccess.getWithResolveMethodCallAccess().getLinkNameEStringParserRuleCall_1_2_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WithResolveMethodCall__FeatureNameAssignment_1_2_1_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWithResolveMethodCallAccess().getFeatureNameEStringParserRuleCall_1_2_1_4_1_0()); }
	ruleEString{ after(grammarAccess.getWithResolveMethodCallAccess().getFeatureNameEStringParserRuleCall_1_2_1_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__MatchTraceExpression__TraceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchTraceExpressionAccess().getTraceTraceDefinitionCrossReference_2_0()); }
(
{ before(grammarAccess.getMatchTraceExpressionAccess().getTraceTraceDefinitionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getMatchTraceExpressionAccess().getTraceTraceDefinitionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getMatchTraceExpressionAccess().getTraceTraceDefinitionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatchTraceExpression__TraceExprAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchTraceExpressionAccess().getTraceExprTraceExprLanguageParserRuleCall_5_0()); }
	ruleTraceExprLanguage{ after(grammarAccess.getMatchTraceExpressionAccess().getTraceExprTraceExprLanguageParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraceExprLanguage__TraceVarAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceExprLanguageAccess().getTraceVarTraceElementCrossReference_0_0()); }
(
{ before(grammarAccess.getTraceExprLanguageAccess().getTraceVarTraceElementIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getTraceExprLanguageAccess().getTraceVarTraceElementIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getTraceExprLanguageAccess().getTraceVarTraceElementCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraceExprLanguage__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceExprLanguageAccess().getExprExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getTraceExprLanguageAccess().getExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__PutTraceParameter__TraceVarAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPutTraceParameterAccess().getTraceVarTraceElementCrossReference_0_0()); }
(
{ before(grammarAccess.getPutTraceParameterAccess().getTraceVarTraceElementIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getPutTraceParameterAccess().getTraceVarTraceElementIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getPutTraceParameterAccess().getTraceVarTraceElementCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PutTraceParameter__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPutTraceParameterAccess().getValueExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getPutTraceParameterAccess().getValueExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumLiteralAccess().getValueEIntParserRuleCall_0()); }
	ruleEInt{ after(grammarAccess.getNumLiteralAccess().getValueEIntParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FloatLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatLiteralAccess().getValueEDoubleParserRuleCall_0()); }
	ruleEDouble{ after(grammarAccess.getFloatLiteralAccess().getValueEDoubleParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueEBooleanParserRuleCall_0()); }
	ruleEBoolean{ after(grammarAccess.getBooleanLiteralAccess().getValueEBooleanParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_KEYWORD_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')* ':';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


