/*
* generated by Xtext
*/
grammar InternalMappings;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.eclectic.frontend.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclectic.frontend.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclectic.frontend.services.MappingsGrammarAccess;

}

@parser::members {
 
 	private MappingsGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MappingsGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleMappingTransformation
entryRuleMappingTransformation 
:
{ before(grammarAccess.getMappingTransformationRule()); }
	 ruleMappingTransformation
{ after(grammarAccess.getMappingTransformationRule()); } 
	 EOF 
;

// Rule MappingTransformation
ruleMappingTransformation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMappingTransformationAccess().getGroup()); }
(rule__MappingTransformation__Group__0)
{ after(grammarAccess.getMappingTransformationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotation
entryRuleAnnotation 
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationAccess().getMetamodelModelAnnotationParserRuleCall()); }
	ruleMetamodelModelAnnotation
{ after(grammarAccess.getAnnotationAccess().getMetamodelModelAnnotationParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMetamodelModelAnnotation
entryRuleMetamodelModelAnnotation 
:
{ before(grammarAccess.getMetamodelModelAnnotationRule()); }
	 ruleMetamodelModelAnnotation
{ after(grammarAccess.getMetamodelModelAnnotationRule()); } 
	 EOF 
;

// Rule MetamodelModelAnnotation
ruleMetamodelModelAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMetamodelModelAnnotationAccess().getGroup()); }
(rule__MetamodelModelAnnotation__Group__0)
{ after(grammarAccess.getMetamodelModelAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUsesStatements
entryRuleUsesStatements 
:
{ before(grammarAccess.getUsesStatementsRule()); }
	 ruleUsesStatements
{ after(grammarAccess.getUsesStatementsRule()); } 
	 EOF 
;

// Rule UsesStatements
ruleUsesStatements
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUsesStatementsAccess().getUseDeclarationParserRuleCall()); }
	ruleUseDeclaration
{ after(grammarAccess.getUsesStatementsAccess().getUseDeclarationParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUseDeclaration
entryRuleUseDeclaration 
:
{ before(grammarAccess.getUseDeclarationRule()); }
	 ruleUseDeclaration
{ after(grammarAccess.getUseDeclarationRule()); } 
	 EOF 
;

// Rule UseDeclaration
ruleUseDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUseDeclarationAccess().getGroup()); }
(rule__UseDeclaration__Group__0)
{ after(grammarAccess.getUseDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransformationDefinitionParameter
entryRuleTransformationDefinitionParameter 
:
{ before(grammarAccess.getTransformationDefinitionParameterRule()); }
	 ruleTransformationDefinitionParameter
{ after(grammarAccess.getTransformationDefinitionParameterRule()); } 
	 EOF 
;

// Rule TransformationDefinitionParameter
ruleTransformationDefinitionParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransformationDefinitionParameterAccess().getGroup()); }
(rule__TransformationDefinitionParameter__Group__0)
{ after(grammarAccess.getTransformationDefinitionParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDelegate
entryRuleDelegate 
:
{ before(grammarAccess.getDelegateRule()); }
	 ruleDelegate
{ after(grammarAccess.getDelegateRule()); } 
	 EOF 
;

// Rule Delegate
ruleDelegate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDelegateAccess().getGroup()); }
(rule__Delegate__Group__0)
{ after(grammarAccess.getDelegateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContext
entryRuleContext 
:
{ before(grammarAccess.getContextRule()); }
	 ruleContext
{ after(grammarAccess.getContextRule()); } 
	 EOF 
;

// Rule Context
ruleContext
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContextAccess().getGroup()); }
(rule__Context__Group__0)
{ after(grammarAccess.getContextAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTag
entryRuleTag 
:
{ before(grammarAccess.getTagRule()); }
	 ruleTag
{ after(grammarAccess.getTagRule()); } 
	 EOF 
;

// Rule Tag
ruleTag
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTagAccess().getGroup()); }
(rule__Tag__Group__0)
{ after(grammarAccess.getTagAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMatchedElement
entryRuleMatchedElement 
:
{ before(grammarAccess.getMatchedElementRule()); }
	 ruleMatchedElement
{ after(grammarAccess.getMatchedElementRule()); } 
	 EOF 
;

// Rule MatchedElement
ruleMatchedElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMatchedElementAccess().getGroup()); }
(rule__MatchedElement__Group__0)
{ after(grammarAccess.getMatchedElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSingleAnnotation
entryRuleSingleAnnotation 
:
{ before(grammarAccess.getSingleAnnotationRule()); }
	 ruleSingleAnnotation
{ after(grammarAccess.getSingleAnnotationRule()); } 
	 EOF 
;

// Rule SingleAnnotation
ruleSingleAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSingleAnnotationAccess().getPotencyAnnotationParserRuleCall()); }
	rulePotencyAnnotation
{ after(grammarAccess.getSingleAnnotationAccess().getPotencyAnnotationParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePotencyAnnotation
entryRulePotencyAnnotation 
:
{ before(grammarAccess.getPotencyAnnotationRule()); }
	 rulePotencyAnnotation
{ after(grammarAccess.getPotencyAnnotationRule()); } 
	 EOF 
;

// Rule PotencyAnnotation
rulePotencyAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPotencyAnnotationAccess().getGroup()); }
(rule__PotencyAnnotation__Group__0)
{ after(grammarAccess.getPotencyAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleC2CModifier
entryRuleC2CModifier 
:
{ before(grammarAccess.getC2CModifierRule()); }
	 ruleC2CModifier
{ after(grammarAccess.getC2CModifierRule()); } 
	 EOF 
;

// Rule C2CModifier
ruleC2CModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getC2CModifierAccess().getLinkedByParserRuleCall()); }
	ruleLinkedBy
{ after(grammarAccess.getC2CModifierAccess().getLinkedByParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLinkedBy
entryRuleLinkedBy 
:
{ before(grammarAccess.getLinkedByRule()); }
	 ruleLinkedBy
{ after(grammarAccess.getLinkedByRule()); } 
	 EOF 
;

// Rule LinkedBy
ruleLinkedBy
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLinkedByAccess().getGroup()); }
(rule__LinkedBy__Group__0)
{ after(grammarAccess.getLinkedByAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeMapping
entryRuleAttributeMapping 
:
{ before(grammarAccess.getAttributeMappingRule()); }
	 ruleAttributeMapping
{ after(grammarAccess.getAttributeMappingRule()); } 
	 EOF 
;

// Rule AttributeMapping
ruleAttributeMapping
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeMappingAccess().getGroup()); }
(rule__AttributeMapping__Group__0)
{ after(grammarAccess.getAttributeMappingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeRightPart
entryRuleAttributeRightPart 
:
{ before(grammarAccess.getAttributeRightPartRule()); }
	 ruleAttributeRightPart
{ after(grammarAccess.getAttributeRightPartRule()); } 
	 EOF 
;

// Rule AttributeRightPart
ruleAttributeRightPart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeRightPartAccess().getAlternatives()); }
(rule__AttributeRightPart__Alternatives)
{ after(grammarAccess.getAttributeRightPartAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute2Attribute
entryRuleAttribute2Attribute 
:
{ before(grammarAccess.getAttribute2AttributeRule()); }
	 ruleAttribute2Attribute
{ after(grammarAccess.getAttribute2AttributeRule()); } 
	 EOF 
;

// Rule Attribute2Attribute
ruleAttribute2Attribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttribute2AttributeAccess().getGroup()); }
(rule__Attribute2Attribute__Group__0)
{ after(grammarAccess.getAttribute2AttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeIsString
entryRuleAttributeIsString 
:
{ before(grammarAccess.getAttributeIsStringRule()); }
	 ruleAttributeIsString
{ after(grammarAccess.getAttributeIsStringRule()); } 
	 EOF 
;

// Rule AttributeIsString
ruleAttributeIsString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeIsStringAccess().getStrValueAssignment()); }
(rule__AttributeIsString__StrValueAssignment)
{ after(grammarAccess.getAttributeIsStringAccess().getStrValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeIsBoolean
entryRuleAttributeIsBoolean 
:
{ before(grammarAccess.getAttributeIsBooleanRule()); }
	 ruleAttributeIsBoolean
{ after(grammarAccess.getAttributeIsBooleanRule()); } 
	 EOF 
;

// Rule AttributeIsBoolean
ruleAttributeIsBoolean
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeIsBooleanAccess().getBoolValueAssignment()); }
(rule__AttributeIsBoolean__BoolValueAssignment)
{ after(grammarAccess.getAttributeIsBooleanAccess().getBoolValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeIsDouble
entryRuleAttributeIsDouble 
:
{ before(grammarAccess.getAttributeIsDoubleRule()); }
	 ruleAttributeIsDouble
{ after(grammarAccess.getAttributeIsDoubleRule()); } 
	 EOF 
;

// Rule AttributeIsDouble
ruleAttributeIsDouble
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeIsDoubleAccess().getDoubleValueAssignment()); }
(rule__AttributeIsDouble__DoubleValueAssignment)
{ after(grammarAccess.getAttributeIsDoubleAccess().getDoubleValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeIsInteger
entryRuleAttributeIsInteger 
:
{ before(grammarAccess.getAttributeIsIntegerRule()); }
	 ruleAttributeIsInteger
{ after(grammarAccess.getAttributeIsIntegerRule()); } 
	 EOF 
;

// Rule AttributeIsInteger
ruleAttributeIsInteger
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeIsIntegerAccess().getIntValueAssignment()); }
(rule__AttributeIsInteger__IntValueAssignment)
{ after(grammarAccess.getAttributeIsIntegerAccess().getIntValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeRef
entryRuleAttributeRef 
:
{ before(grammarAccess.getAttributeRefRule()); }
	 ruleAttributeRef
{ after(grammarAccess.getAttributeRefRule()); } 
	 EOF 
;

// Rule AttributeRef
ruleAttributeRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeRefAccess().getGroup()); }
(rule__AttributeRef__Group__0)
{ after(grammarAccess.getAttributeRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReference2Reference
entryRuleReference2Reference 
:
{ before(grammarAccess.getReference2ReferenceRule()); }
	 ruleReference2Reference
{ after(grammarAccess.getReference2ReferenceRule()); } 
	 EOF 
;

// Rule Reference2Reference
ruleReference2Reference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReference2ReferenceAccess().getGroup()); }
(rule__Reference2Reference__Group__0)
{ after(grammarAccess.getReference2ReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferenceRef
entryRuleReferenceRef 
:
{ before(grammarAccess.getReferenceRefRule()); }
	 ruleReferenceRef
{ after(grammarAccess.getReferenceRefRule()); } 
	 EOF 
;

// Rule ReferenceRef
ruleReferenceRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceRefAccess().getGroup()); }
(rule__ReferenceRef__Group__0)
{ after(grammarAccess.getReferenceRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConverter
entryRuleConverter 
:
{ before(grammarAccess.getConverterRule()); }
	 ruleConverter
{ after(grammarAccess.getConverterRule()); } 
	 EOF 
;

// Rule Converter
ruleConverter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConverterAccess().getGroup()); }
(rule__Converter__Group__0)
{ after(grammarAccess.getConverterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEDouble
entryRuleEDouble 
:
{ before(grammarAccess.getEDoubleRule()); }
	 ruleEDouble
{ after(grammarAccess.getEDoubleRule()); } 
	 EOF 
;

// Rule EDouble
ruleEDouble
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEDoubleAccess().getGroup()); }
(rule__EDouble__Group__0)
{ after(grammarAccess.getEDoubleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEBoolean
entryRuleEBoolean 
:
{ before(grammarAccess.getEBooleanRule()); }
	 ruleEBoolean
{ after(grammarAccess.getEBooleanRule()); } 
	 EOF 
;

// Rule EBoolean
ruleEBoolean
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEBooleanAccess().getAlternatives()); }
(rule__EBoolean__Alternatives)
{ after(grammarAccess.getEBooleanAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStrictString
entryRuleStrictString 
:
{ before(grammarAccess.getStrictStringRule()); }
	 ruleStrictString
{ after(grammarAccess.getStrictStringRule()); } 
	 EOF 
;

// Rule StrictString
ruleStrictString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStrictStringAccess().getSTRINGTerminalRuleCall()); }
	RULE_STRING
{ after(grammarAccess.getStrictStringAccess().getSTRINGTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEInt
entryRuleEInt 
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEIntAccess().getGroup()); }
(rule__EInt__Group__0)
{ after(grammarAccess.getEIntAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Context__MappingsAlternatives_8_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getMappingsAttributeMappingParserRuleCall_8_0_0()); }
	ruleAttributeMapping
{ after(grammarAccess.getContextAccess().getMappingsAttributeMappingParserRuleCall_8_0_0()); }
)

    |(
{ before(grammarAccess.getContextAccess().getMappingsReference2ReferenceParserRuleCall_8_0_1()); }
	ruleReference2Reference
{ after(grammarAccess.getContextAccess().getMappingsReference2ReferenceParserRuleCall_8_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PotencyAnnotation__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotencyAnnotationAccess().getCommercialAtKeyword_0_0()); }

	'@' 

{ after(grammarAccess.getPotencyAnnotationAccess().getCommercialAtKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getPotencyAnnotationAccess().getCircumflexAccentKeyword_0_1()); }

	'^' 

{ after(grammarAccess.getPotencyAnnotationAccess().getCircumflexAccentKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeRightPart__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeRightPartAccess().getAttributeIsStringParserRuleCall_0()); }
	ruleAttributeIsString
{ after(grammarAccess.getAttributeRightPartAccess().getAttributeIsStringParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAttributeRightPartAccess().getAttributeIsBooleanParserRuleCall_1()); }
	ruleAttributeIsBoolean
{ after(grammarAccess.getAttributeRightPartAccess().getAttributeIsBooleanParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAttributeRightPartAccess().getAttributeIsDoubleParserRuleCall_2()); }
	ruleAttributeIsDouble
{ after(grammarAccess.getAttributeRightPartAccess().getAttributeIsDoubleParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAttributeRightPartAccess().getAttributeIsIntegerParserRuleCall_3()); }
	ruleAttributeIsInteger
{ after(grammarAccess.getAttributeRightPartAccess().getAttributeIsIntegerParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAttributeRightPartAccess().getAttribute2AttributeParserRuleCall_4()); }
	ruleAttribute2Attribute
{ after(grammarAccess.getAttributeRightPartAccess().getAttribute2AttributeParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EBoolean__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__MappingTransformation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__0__Impl
	rule__MappingTransformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getMappingsKeyword_0()); }

	'mappings' 

{ after(grammarAccess.getMappingTransformationAccess().getMappingsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__1__Impl
	rule__MappingTransformation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getNameAssignment_1()); }
(rule__MappingTransformation__NameAssignment_1)
{ after(grammarAccess.getMappingTransformationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__2__Impl
	rule__MappingTransformation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getMappingTransformationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__3__Impl
	rule__MappingTransformation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getInModelsAssignment_3()); }
(rule__MappingTransformation__InModelsAssignment_3)
{ after(grammarAccess.getMappingTransformationAccess().getInModelsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__4__Impl
	rule__MappingTransformation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getMappingTransformationAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__5__Impl
	rule__MappingTransformation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getHyphenMinusGreaterThanSignKeyword_5()); }

	'->' 

{ after(grammarAccess.getMappingTransformationAccess().getHyphenMinusGreaterThanSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__6__Impl
	rule__MappingTransformation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getLeftParenthesisKeyword_6()); }

	'(' 

{ after(grammarAccess.getMappingTransformationAccess().getLeftParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__7__Impl
	rule__MappingTransformation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getOutModelsAssignment_7()); }
(rule__MappingTransformation__OutModelsAssignment_7)
{ after(grammarAccess.getMappingTransformationAccess().getOutModelsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__8__Impl
	rule__MappingTransformation__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getRightParenthesisKeyword_8()); }

	')' 

{ after(grammarAccess.getMappingTransformationAccess().getRightParenthesisKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__9__Impl
	rule__MappingTransformation__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getAnnotationsAssignment_9()); }
(rule__MappingTransformation__AnnotationsAssignment_9)*
{ after(grammarAccess.getMappingTransformationAccess().getAnnotationsAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__10__Impl
	rule__MappingTransformation__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getUsesAssignment_10()); }
(rule__MappingTransformation__UsesAssignment_10)*
{ after(grammarAccess.getMappingTransformationAccess().getUsesAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__11__Impl
	rule__MappingTransformation__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getDelegatesAssignment_11()); }
(rule__MappingTransformation__DelegatesAssignment_11)*
{ after(grammarAccess.getMappingTransformationAccess().getDelegatesAssignment_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMappingTransformationAccess().getContextsAssignment_12()); }
(rule__MappingTransformation__ContextsAssignment_12)
{ after(grammarAccess.getMappingTransformationAccess().getContextsAssignment_12()); }
)
(
{ before(grammarAccess.getMappingTransformationAccess().getContextsAssignment_12()); }
(rule__MappingTransformation__ContextsAssignment_12)*
{ after(grammarAccess.getMappingTransformationAccess().getContextsAssignment_12()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__MetamodelModelAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelModelAnnotation__Group__0__Impl
	rule__MetamodelModelAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelModelAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelModelAnnotationAccess().getAnnotatedElementAssignment_0()); }
(rule__MetamodelModelAnnotation__AnnotatedElementAssignment_0)
{ after(grammarAccess.getMetamodelModelAnnotationAccess().getAnnotatedElementAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetamodelModelAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelModelAnnotation__Group__1__Impl
	rule__MetamodelModelAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelModelAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelModelAnnotationAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getMetamodelModelAnnotationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetamodelModelAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelModelAnnotation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelModelAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelModelAnnotationAccess().getMetamodelAssignment_2()); }
(rule__MetamodelModelAnnotation__MetamodelAssignment_2)
{ after(grammarAccess.getMetamodelModelAnnotationAccess().getMetamodelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UseDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseDeclaration__Group__0__Impl
	rule__UseDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseDeclarationAccess().getUsesKeyword_0()); }

	'uses' 

{ after(grammarAccess.getUseDeclarationAccess().getUsesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseDeclaration__Group__1__Impl
	rule__UseDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UseDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseDeclarationAccess().getModuleAssignment_1()); }
(rule__UseDeclaration__ModuleAssignment_1)
{ after(grammarAccess.getUseDeclarationAccess().getModuleAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseDeclarationAccess().getGroup_2()); }
(rule__UseDeclaration__Group_2__0)?
{ after(grammarAccess.getUseDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UseDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseDeclaration__Group_2__0__Impl
	rule__UseDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseDeclarationAccess().getAsKeyword_2_0()); }

	'as' 

{ after(grammarAccess.getUseDeclarationAccess().getAsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseDeclarationAccess().getAsAssignment_2_1()); }
(rule__UseDeclaration__AsAssignment_2_1)
{ after(grammarAccess.getUseDeclarationAccess().getAsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TransformationDefinitionParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransformationDefinitionParameter__Group__0__Impl
	rule__TransformationDefinitionParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationDefinitionParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationDefinitionParameterAccess().getTransformationDefinitionParameterAction_0()); }
(

)
{ after(grammarAccess.getTransformationDefinitionParameterAccess().getTransformationDefinitionParameterAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationDefinitionParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransformationDefinitionParameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationDefinitionParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationDefinitionParameterAccess().getNameAssignment_1()); }
(rule__TransformationDefinitionParameter__NameAssignment_1)
{ after(grammarAccess.getTransformationDefinitionParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Delegate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delegate__Group__0__Impl
	rule__Delegate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delegate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateAccess().getTagsAssignment_0()); }
(rule__Delegate__TagsAssignment_0)*
{ after(grammarAccess.getDelegateAccess().getTagsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delegate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delegate__Group__1__Impl
	rule__Delegate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Delegate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateAccess().getDelegateKeyword_1()); }

	'delegate' 

{ after(grammarAccess.getDelegateAccess().getDelegateKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delegate__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delegate__Group__2__Impl
	rule__Delegate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Delegate__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateAccess().getFromKeyword_2()); }

	'from' 

{ after(grammarAccess.getDelegateAccess().getFromKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delegate__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delegate__Group__3__Impl
	rule__Delegate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Delegate__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateAccess().getLeftAssignment_3()); }
(rule__Delegate__LeftAssignment_3)
{ after(grammarAccess.getDelegateAccess().getLeftAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delegate__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delegate__Group__4__Impl
	rule__Delegate__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Delegate__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateAccess().getGroup_4()); }
(rule__Delegate__Group_4__0)*
{ after(grammarAccess.getDelegateAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delegate__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delegate__Group__5__Impl
	rule__Delegate__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Delegate__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateAccess().getToKeyword_5()); }

	'to' 

{ after(grammarAccess.getDelegateAccess().getToKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delegate__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delegate__Group__6__Impl
	rule__Delegate__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Delegate__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateAccess().getGroup_6()); }
(rule__Delegate__Group_6__0)
{ after(grammarAccess.getDelegateAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delegate__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delegate__Group__7__Impl
	rule__Delegate__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Delegate__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateAccess().getLinkNameAssignment_7()); }
(rule__Delegate__LinkNameAssignment_7)
{ after(grammarAccess.getDelegateAccess().getLinkNameAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delegate__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delegate__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delegate__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateAccess().getGroup_8()); }
(rule__Delegate__Group_8__0)?
{ after(grammarAccess.getDelegateAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Delegate__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delegate__Group_4__0__Impl
	rule__Delegate__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delegate__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getDelegateAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delegate__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delegate__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delegate__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateAccess().getLeftAssignment_4_1()); }
(rule__Delegate__LeftAssignment_4_1)
{ after(grammarAccess.getDelegateAccess().getLeftAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Delegate__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delegate__Group_6__0__Impl
	rule__Delegate__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delegate__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateAccess().getModuleAssignment_6_0()); }
(rule__Delegate__ModuleAssignment_6_0)
{ after(grammarAccess.getDelegateAccess().getModuleAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delegate__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delegate__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delegate__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateAccess().getIsExternalAssignment_6_1()); }
(rule__Delegate__IsExternalAssignment_6_1)
{ after(grammarAccess.getDelegateAccess().getIsExternalAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Delegate__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delegate__Group_8__0__Impl
	rule__Delegate__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delegate__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateAccess().getFullStopKeyword_8_0()); }

	'.' 

{ after(grammarAccess.getDelegateAccess().getFullStopKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Delegate__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Delegate__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delegate__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateAccess().getFeatureNameAssignment_8_1()); }
(rule__Delegate__FeatureNameAssignment_8_1)
{ after(grammarAccess.getDelegateAccess().getFeatureNameAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Context__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Context__Group__0__Impl
	rule__Context__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getTagsAssignment_0()); }
(rule__Context__TagsAssignment_0)*
{ after(grammarAccess.getContextAccess().getTagsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Context__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Context__Group__1__Impl
	rule__Context__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getFromKeyword_1()); }

	'from' 

{ after(grammarAccess.getContextAccess().getFromKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Context__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Context__Group__2__Impl
	rule__Context__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getLeftAssignment_2()); }
(rule__Context__LeftAssignment_2)
{ after(grammarAccess.getContextAccess().getLeftAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Context__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Context__Group__3__Impl
	rule__Context__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getGroup_3()); }
(rule__Context__Group_3__0)*
{ after(grammarAccess.getContextAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Context__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Context__Group__4__Impl
	rule__Context__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getToKeyword_4()); }

	'to' 

{ after(grammarAccess.getContextAccess().getToKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Context__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Context__Group__5__Impl
	rule__Context__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getRightAssignment_5()); }
(rule__Context__RightAssignment_5)
{ after(grammarAccess.getContextAccess().getRightAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Context__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Context__Group__6__Impl
	rule__Context__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getGroup_6()); }
(rule__Context__Group_6__0)*
{ after(grammarAccess.getContextAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Context__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Context__Group__7__Impl
	rule__Context__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getModifiersAssignment_7()); }
(rule__Context__ModifiersAssignment_7)*
{ after(grammarAccess.getContextAccess().getModifiersAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Context__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Context__Group__8__Impl
	rule__Context__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getMappingsAssignment_8()); }
(rule__Context__MappingsAssignment_8)*
{ after(grammarAccess.getContextAccess().getMappingsAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Context__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Context__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getEndKeyword_9()); }

	'end' 

{ after(grammarAccess.getContextAccess().getEndKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Context__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Context__Group_3__0__Impl
	rule__Context__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getContextAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Context__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Context__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getLeftAssignment_3_1()); }
(rule__Context__LeftAssignment_3_1)
{ after(grammarAccess.getContextAccess().getLeftAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Context__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Context__Group_6__0__Impl
	rule__Context__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getContextAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Context__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Context__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getRightAssignment_6_1()); }
(rule__Context__RightAssignment_6_1)
{ after(grammarAccess.getContextAccess().getRightAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Tag__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tag__Group__0__Impl
	rule__Tag__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getTagAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tag__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tag__Group__1__Impl
	rule__Tag__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAccess().getNameAssignment_1()); }
(rule__Tag__NameAssignment_1)
{ after(grammarAccess.getTagAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tag__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tag__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getTagAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MatchedElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchedElement__Group__0__Impl
	rule__MatchedElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchedElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchedElementAccess().getGroup_0()); }
(rule__MatchedElement__Group_0__0)?
{ after(grammarAccess.getMatchedElementAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchedElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchedElement__Group__1__Impl
	rule__MatchedElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchedElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchedElementAccess().getModelAssignment_1()); }
(rule__MatchedElement__ModelAssignment_1)
{ after(grammarAccess.getMatchedElementAccess().getModelAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchedElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchedElement__Group__2__Impl
	rule__MatchedElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchedElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchedElementAccess().getExclamationMarkKeyword_2()); }

	'!' 

{ after(grammarAccess.getMatchedElementAccess().getExclamationMarkKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchedElement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchedElement__Group__3__Impl
	rule__MatchedElement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchedElement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchedElementAccess().getClassNameAssignment_3()); }
(rule__MatchedElement__ClassNameAssignment_3)
{ after(grammarAccess.getMatchedElementAccess().getClassNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchedElement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchedElement__Group__4__Impl
	rule__MatchedElement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchedElement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchedElementAccess().getAnnotationsAssignment_4()); }
(rule__MatchedElement__AnnotationsAssignment_4)?
{ after(grammarAccess.getMatchedElementAccess().getAnnotationsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchedElement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchedElement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchedElement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchedElementAccess().getStrictTypeAssignment_5()); }
(rule__MatchedElement__StrictTypeAssignment_5)?
{ after(grammarAccess.getMatchedElementAccess().getStrictTypeAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__MatchedElement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchedElement__Group_0__0__Impl
	rule__MatchedElement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchedElement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchedElementAccess().getNameAssignment_0_0()); }
(rule__MatchedElement__NameAssignment_0_0)
{ after(grammarAccess.getMatchedElementAccess().getNameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MatchedElement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MatchedElement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MatchedElement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchedElementAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getMatchedElementAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PotencyAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PotencyAnnotation__Group__0__Impl
	rule__PotencyAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PotencyAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotencyAnnotationAccess().getAlternatives_0()); }
(rule__PotencyAnnotation__Alternatives_0)
{ after(grammarAccess.getPotencyAnnotationAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PotencyAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PotencyAnnotation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PotencyAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotencyAnnotationAccess().getValueAssignment_1()); }
(rule__PotencyAnnotation__ValueAssignment_1)
{ after(grammarAccess.getPotencyAnnotationAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LinkedBy__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkedBy__Group__0__Impl
	rule__LinkedBy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedBy__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkedByAccess().getLinkingKeyword_0()); }

	'linking' 

{ after(grammarAccess.getLinkedByAccess().getLinkingKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkedBy__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkedBy__Group__1__Impl
	rule__LinkedBy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedBy__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkedByAccess().getAttributeAssignment_1()); }
(rule__LinkedBy__AttributeAssignment_1)
{ after(grammarAccess.getLinkedByAccess().getAttributeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkedBy__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkedBy__Group__2__Impl
	rule__LinkedBy__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedBy__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkedByAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getLinkedByAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkedBy__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkedBy__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedBy__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkedByAccess().getLinkedElementAssignment_3()); }
(rule__LinkedBy__LinkedElementAssignment_3)
{ after(grammarAccess.getLinkedByAccess().getLinkedElementAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AttributeMapping__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeMapping__Group__0__Impl
	rule__AttributeMapping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeMapping__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeMappingAccess().getLeftAssignment_0()); }
(rule__AttributeMapping__LeftAssignment_0)
{ after(grammarAccess.getAttributeMappingAccess().getLeftAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeMapping__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeMapping__Group__1__Impl
	rule__AttributeMapping__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeMapping__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeMappingAccess().getGroup_1()); }
(rule__AttributeMapping__Group_1__0)*
{ after(grammarAccess.getAttributeMappingAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeMapping__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeMapping__Group__2__Impl
	rule__AttributeMapping__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeMapping__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeMappingAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getAttributeMappingAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeMapping__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeMapping__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeMapping__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeMappingAccess().getRightPartAssignment_3()); }
(rule__AttributeMapping__RightPartAssignment_3)
{ after(grammarAccess.getAttributeMappingAccess().getRightPartAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AttributeMapping__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeMapping__Group_1__0__Impl
	rule__AttributeMapping__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeMapping__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeMappingAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getAttributeMappingAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeMapping__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeMapping__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeMapping__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeMappingAccess().getLeftAssignment_1_1()); }
(rule__AttributeMapping__LeftAssignment_1_1)
{ after(grammarAccess.getAttributeMappingAccess().getLeftAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Attribute2Attribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute2Attribute__Group__0__Impl
	rule__Attribute2Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute2Attribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttribute2AttributeAccess().getRightAssignment_0()); }
(rule__Attribute2Attribute__RightAssignment_0)
{ after(grammarAccess.getAttribute2AttributeAccess().getRightAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute2Attribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute2Attribute__Group__1__Impl
	rule__Attribute2Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute2Attribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttribute2AttributeAccess().getGroup_1()); }
(rule__Attribute2Attribute__Group_1__0)*
{ after(grammarAccess.getAttribute2AttributeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute2Attribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute2Attribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute2Attribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttribute2AttributeAccess().getConverterAssignment_2()); }
(rule__Attribute2Attribute__ConverterAssignment_2)?
{ after(grammarAccess.getAttribute2AttributeAccess().getConverterAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Attribute2Attribute__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute2Attribute__Group_1__0__Impl
	rule__Attribute2Attribute__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute2Attribute__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttribute2AttributeAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getAttribute2AttributeAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute2Attribute__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute2Attribute__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute2Attribute__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttribute2AttributeAccess().getRightAssignment_1_1()); }
(rule__Attribute2Attribute__RightAssignment_1_1)
{ after(grammarAccess.getAttribute2AttributeAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeRef__Group__0__Impl
	rule__AttributeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeRefAccess().getGroup_0()); }
(rule__AttributeRef__Group_0__0)?
{ after(grammarAccess.getAttributeRefAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeRef__Group__1__Impl
	rule__AttributeRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeRefAccess().getFeatureNameAssignment_1()); }
(rule__AttributeRef__FeatureNameAssignment_1)
{ after(grammarAccess.getAttributeRefAccess().getFeatureNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeRef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeRef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeRef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeRefAccess().getMultivaluedAssignment_2()); }
(rule__AttributeRef__MultivaluedAssignment_2)?
{ after(grammarAccess.getAttributeRefAccess().getMultivaluedAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AttributeRef__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeRef__Group_0__0__Impl
	rule__AttributeRef__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeRef__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeRefAccess().getReferredElementAssignment_0_0()); }
(rule__AttributeRef__ReferredElementAssignment_0_0)
{ after(grammarAccess.getAttributeRefAccess().getReferredElementAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeRef__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeRef__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeRef__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeRefAccess().getFullStopKeyword_0_1()); }

	'.' 

{ after(grammarAccess.getAttributeRefAccess().getFullStopKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Reference2Reference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference2Reference__Group__0__Impl
	rule__Reference2Reference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference2Reference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReference2ReferenceAccess().getLeftAssignment_0()); }
(rule__Reference2Reference__LeftAssignment_0)
{ after(grammarAccess.getReference2ReferenceAccess().getLeftAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference2Reference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference2Reference__Group__1__Impl
	rule__Reference2Reference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference2Reference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReference2ReferenceAccess().getGroup_1()); }
(rule__Reference2Reference__Group_1__0)*
{ after(grammarAccess.getReference2ReferenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference2Reference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference2Reference__Group__2__Impl
	rule__Reference2Reference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference2Reference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReference2ReferenceAccess().getLessThanSignHyphenMinusKeyword_2()); }

	'<-' 

{ after(grammarAccess.getReference2ReferenceAccess().getLessThanSignHyphenMinusKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference2Reference__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference2Reference__Group__3__Impl
	rule__Reference2Reference__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference2Reference__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReference2ReferenceAccess().getRightAssignment_3()); }
(rule__Reference2Reference__RightAssignment_3)
{ after(grammarAccess.getReference2ReferenceAccess().getRightAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference2Reference__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference2Reference__Group__4__Impl
	rule__Reference2Reference__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference2Reference__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReference2ReferenceAccess().getGroup_4()); }
(rule__Reference2Reference__Group_4__0)*
{ after(grammarAccess.getReference2ReferenceAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference2Reference__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference2Reference__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference2Reference__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReference2ReferenceAccess().getConverterAssignment_5()); }
(rule__Reference2Reference__ConverterAssignment_5)?
{ after(grammarAccess.getReference2ReferenceAccess().getConverterAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Reference2Reference__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference2Reference__Group_1__0__Impl
	rule__Reference2Reference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference2Reference__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReference2ReferenceAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getReference2ReferenceAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference2Reference__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference2Reference__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference2Reference__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReference2ReferenceAccess().getLeftAssignment_1_1()); }
(rule__Reference2Reference__LeftAssignment_1_1)
{ after(grammarAccess.getReference2ReferenceAccess().getLeftAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Reference2Reference__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference2Reference__Group_4__0__Impl
	rule__Reference2Reference__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference2Reference__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReference2ReferenceAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getReference2ReferenceAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference2Reference__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference2Reference__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference2Reference__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReference2ReferenceAccess().getRightAssignment_4_1()); }
(rule__Reference2Reference__RightAssignment_4_1)
{ after(grammarAccess.getReference2ReferenceAccess().getRightAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferenceRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceRef__Group__0__Impl
	rule__ReferenceRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceRefAccess().getGroup_0()); }
(rule__ReferenceRef__Group_0__0)?
{ after(grammarAccess.getReferenceRefAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceRef__Group__1__Impl
	rule__ReferenceRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceRefAccess().getFeatureNameAssignment_1()); }
(rule__ReferenceRef__FeatureNameAssignment_1)
{ after(grammarAccess.getReferenceRefAccess().getFeatureNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceRef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceRef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceRef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceRefAccess().getMultivaluedAssignment_2()); }
(rule__ReferenceRef__MultivaluedAssignment_2)?
{ after(grammarAccess.getReferenceRefAccess().getMultivaluedAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ReferenceRef__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceRef__Group_0__0__Impl
	rule__ReferenceRef__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceRef__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceRefAccess().getReferredElementAssignment_0_0()); }
(rule__ReferenceRef__ReferredElementAssignment_0_0)
{ after(grammarAccess.getReferenceRefAccess().getReferredElementAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceRef__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceRef__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceRef__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceRefAccess().getFullStopKeyword_0_1()); }

	'.' 

{ after(grammarAccess.getReferenceRefAccess().getFullStopKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Converter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Converter__Group__0__Impl
	rule__Converter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Converter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConverterAccess().getConvertKeyword_0()); }

	'convert' 

{ after(grammarAccess.getConverterAccess().getConvertKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Converter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Converter__Group__1__Impl
	rule__Converter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Converter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConverterAccess().getGroup_1()); }
(rule__Converter__Group_1__0)?
{ after(grammarAccess.getConverterAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Converter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Converter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Converter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConverterAccess().getConverterNameAssignment_2()); }
(rule__Converter__ConverterNameAssignment_2)
{ after(grammarAccess.getConverterAccess().getConverterNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Converter__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Converter__Group_1__0__Impl
	rule__Converter__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Converter__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConverterAccess().getModuleAssignment_1_0()); }
(rule__Converter__ModuleAssignment_1_0)
{ after(grammarAccess.getConverterAccess().getModuleAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Converter__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Converter__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Converter__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConverterAccess().getIsExternalAssignment_1_1()); }
(rule__Converter__IsExternalAssignment_1_1)
{ after(grammarAccess.getConverterAccess().getIsExternalAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EDouble__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group__0__Impl
	rule__EDouble__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group__1__Impl
	rule__EDouble__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getEDoubleAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EInt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__MappingTransformation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getMappingTransformationAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__InModelsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getInModelsTransformationDefinitionParameterParserRuleCall_3_0()); }
	ruleTransformationDefinitionParameter{ after(grammarAccess.getMappingTransformationAccess().getInModelsTransformationDefinitionParameterParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__OutModelsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getOutModelsTransformationDefinitionParameterParserRuleCall_7_0()); }
	ruleTransformationDefinitionParameter{ after(grammarAccess.getMappingTransformationAccess().getOutModelsTransformationDefinitionParameterParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__AnnotationsAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getAnnotationsAnnotationParserRuleCall_9_0()); }
	ruleAnnotation{ after(grammarAccess.getMappingTransformationAccess().getAnnotationsAnnotationParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__UsesAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getUsesUsesStatementsParserRuleCall_10_0()); }
	ruleUsesStatements{ after(grammarAccess.getMappingTransformationAccess().getUsesUsesStatementsParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__DelegatesAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getDelegatesDelegateParserRuleCall_11_0()); }
	ruleDelegate{ after(grammarAccess.getMappingTransformationAccess().getDelegatesDelegateParserRuleCall_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__ContextsAssignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getContextsContextParserRuleCall_12_0()); }
	ruleContext{ after(grammarAccess.getMappingTransformationAccess().getContextsContextParserRuleCall_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelModelAnnotation__AnnotatedElementAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelModelAnnotationAccess().getAnnotatedElementRepresentModelCrossReference_0_0()); }
(
{ before(grammarAccess.getMetamodelModelAnnotationAccess().getAnnotatedElementRepresentModelIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getMetamodelModelAnnotationAccess().getAnnotatedElementRepresentModelIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getMetamodelModelAnnotationAccess().getAnnotatedElementRepresentModelCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelModelAnnotation__MetamodelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelModelAnnotationAccess().getMetamodelSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getMetamodelModelAnnotationAccess().getMetamodelSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UseDeclaration__ModuleAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseDeclarationAccess().getModuleEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getUseDeclarationAccess().getModuleEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UseDeclaration__AsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseDeclarationAccess().getAsEStringParserRuleCall_2_1_0()); }
	ruleEString{ after(grammarAccess.getUseDeclarationAccess().getAsEStringParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationDefinitionParameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationDefinitionParameterAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getTransformationDefinitionParameterAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Delegate__TagsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateAccess().getTagsTagParserRuleCall_0_0()); }
	ruleTag{ after(grammarAccess.getDelegateAccess().getTagsTagParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Delegate__LeftAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateAccess().getLeftMatchedElementParserRuleCall_3_0()); }
	ruleMatchedElement{ after(grammarAccess.getDelegateAccess().getLeftMatchedElementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Delegate__LeftAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateAccess().getLeftMatchedElementParserRuleCall_4_1_0()); }
	ruleMatchedElement{ after(grammarAccess.getDelegateAccess().getLeftMatchedElementParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Delegate__ModuleAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateAccess().getModuleUseDeclarationCrossReference_6_0_0()); }
(
{ before(grammarAccess.getDelegateAccess().getModuleUseDeclarationIDTerminalRuleCall_6_0_0_1()); }
	RULE_ID{ after(grammarAccess.getDelegateAccess().getModuleUseDeclarationIDTerminalRuleCall_6_0_0_1()); }
)
{ after(grammarAccess.getDelegateAccess().getModuleUseDeclarationCrossReference_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Delegate__IsExternalAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateAccess().getIsExternalExclamationMarkKeyword_6_1_0()); }
(
{ before(grammarAccess.getDelegateAccess().getIsExternalExclamationMarkKeyword_6_1_0()); }

	'!' 

{ after(grammarAccess.getDelegateAccess().getIsExternalExclamationMarkKeyword_6_1_0()); }
)

{ after(grammarAccess.getDelegateAccess().getIsExternalExclamationMarkKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Delegate__LinkNameAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateAccess().getLinkNameEStringParserRuleCall_7_0()); }
	ruleEString{ after(grammarAccess.getDelegateAccess().getLinkNameEStringParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Delegate__FeatureNameAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelegateAccess().getFeatureNameEStringParserRuleCall_8_1_0()); }
	ruleEString{ after(grammarAccess.getDelegateAccess().getFeatureNameEStringParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Context__TagsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getTagsTagParserRuleCall_0_0()); }
	ruleTag{ after(grammarAccess.getContextAccess().getTagsTagParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Context__LeftAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getLeftMatchedElementParserRuleCall_2_0()); }
	ruleMatchedElement{ after(grammarAccess.getContextAccess().getLeftMatchedElementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Context__LeftAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getLeftMatchedElementParserRuleCall_3_1_0()); }
	ruleMatchedElement{ after(grammarAccess.getContextAccess().getLeftMatchedElementParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Context__RightAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getRightMatchedElementParserRuleCall_5_0()); }
	ruleMatchedElement{ after(grammarAccess.getContextAccess().getRightMatchedElementParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Context__RightAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getRightMatchedElementParserRuleCall_6_1_0()); }
	ruleMatchedElement{ after(grammarAccess.getContextAccess().getRightMatchedElementParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Context__ModifiersAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getModifiersC2CModifierParserRuleCall_7_0()); }
	ruleC2CModifier{ after(grammarAccess.getContextAccess().getModifiersC2CModifierParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Context__MappingsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextAccess().getMappingsAlternatives_8_0()); }
(rule__Context__MappingsAlternatives_8_0)
{ after(grammarAccess.getContextAccess().getMappingsAlternatives_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getTagAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatchedElement__NameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchedElementAccess().getNameIDTerminalRuleCall_0_0_0()); }
	RULE_ID{ after(grammarAccess.getMatchedElementAccess().getNameIDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatchedElement__ModelAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchedElementAccess().getModelRepresentModelCrossReference_1_0()); }
(
{ before(grammarAccess.getMatchedElementAccess().getModelRepresentModelIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getMatchedElementAccess().getModelRepresentModelIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getMatchedElementAccess().getModelRepresentModelCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatchedElement__ClassNameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchedElementAccess().getClassNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getMatchedElementAccess().getClassNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatchedElement__AnnotationsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchedElementAccess().getAnnotationsSingleAnnotationParserRuleCall_4_0()); }
	ruleSingleAnnotation{ after(grammarAccess.getMatchedElementAccess().getAnnotationsSingleAnnotationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MatchedElement__StrictTypeAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMatchedElementAccess().getStrictTypeExclamationMarkKeyword_5_0()); }
(
{ before(grammarAccess.getMatchedElementAccess().getStrictTypeExclamationMarkKeyword_5_0()); }

	'!' 

{ after(grammarAccess.getMatchedElementAccess().getStrictTypeExclamationMarkKeyword_5_0()); }
)

{ after(grammarAccess.getMatchedElementAccess().getStrictTypeExclamationMarkKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PotencyAnnotation__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotencyAnnotationAccess().getValueINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getPotencyAnnotationAccess().getValueINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedBy__AttributeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkedByAccess().getAttributeAttributeRefParserRuleCall_1_0()); }
	ruleAttributeRef{ after(grammarAccess.getLinkedByAccess().getAttributeAttributeRefParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkedBy__LinkedElementAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkedByAccess().getLinkedElementMatchedElementCrossReference_3_0()); }
(
{ before(grammarAccess.getLinkedByAccess().getLinkedElementMatchedElementIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getLinkedByAccess().getLinkedElementMatchedElementIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getLinkedByAccess().getLinkedElementMatchedElementCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeMapping__LeftAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeMappingAccess().getLeftAttributeRefParserRuleCall_0_0()); }
	ruleAttributeRef{ after(grammarAccess.getAttributeMappingAccess().getLeftAttributeRefParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeMapping__LeftAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeMappingAccess().getLeftAttributeRefParserRuleCall_1_1_0()); }
	ruleAttributeRef{ after(grammarAccess.getAttributeMappingAccess().getLeftAttributeRefParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeMapping__RightPartAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeMappingAccess().getRightPartAttributeRightPartParserRuleCall_3_0()); }
	ruleAttributeRightPart{ after(grammarAccess.getAttributeMappingAccess().getRightPartAttributeRightPartParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute2Attribute__RightAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttribute2AttributeAccess().getRightAttributeRefParserRuleCall_0_0()); }
	ruleAttributeRef{ after(grammarAccess.getAttribute2AttributeAccess().getRightAttributeRefParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute2Attribute__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttribute2AttributeAccess().getRightAttributeRefParserRuleCall_1_1_0()); }
	ruleAttributeRef{ after(grammarAccess.getAttribute2AttributeAccess().getRightAttributeRefParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute2Attribute__ConverterAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttribute2AttributeAccess().getConverterConverterParserRuleCall_2_0()); }
	ruleConverter{ after(grammarAccess.getAttribute2AttributeAccess().getConverterConverterParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeIsString__StrValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeIsStringAccess().getStrValueStrictStringParserRuleCall_0()); }
	ruleStrictString{ after(grammarAccess.getAttributeIsStringAccess().getStrValueStrictStringParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeIsBoolean__BoolValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeIsBooleanAccess().getBoolValueEBooleanParserRuleCall_0()); }
	ruleEBoolean{ after(grammarAccess.getAttributeIsBooleanAccess().getBoolValueEBooleanParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeIsDouble__DoubleValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeIsDoubleAccess().getDoubleValueEDoubleParserRuleCall_0()); }
	ruleEDouble{ after(grammarAccess.getAttributeIsDoubleAccess().getDoubleValueEDoubleParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeIsInteger__IntValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeIsIntegerAccess().getIntValueEIntParserRuleCall_0()); }
	ruleEInt{ after(grammarAccess.getAttributeIsIntegerAccess().getIntValueEIntParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeRef__ReferredElementAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeRefAccess().getReferredElementMatchedElementCrossReference_0_0_0()); }
(
{ before(grammarAccess.getAttributeRefAccess().getReferredElementMatchedElementIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAttributeRefAccess().getReferredElementMatchedElementIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getAttributeRefAccess().getReferredElementMatchedElementCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeRef__FeatureNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeRefAccess().getFeatureNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getAttributeRefAccess().getFeatureNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeRef__MultivaluedAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeRefAccess().getMultivaluedAsteriskKeyword_2_0()); }
(
{ before(grammarAccess.getAttributeRefAccess().getMultivaluedAsteriskKeyword_2_0()); }

	'*' 

{ after(grammarAccess.getAttributeRefAccess().getMultivaluedAsteriskKeyword_2_0()); }
)

{ after(grammarAccess.getAttributeRefAccess().getMultivaluedAsteriskKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference2Reference__LeftAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReference2ReferenceAccess().getLeftReferenceRefParserRuleCall_0_0()); }
	ruleReferenceRef{ after(grammarAccess.getReference2ReferenceAccess().getLeftReferenceRefParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference2Reference__LeftAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReference2ReferenceAccess().getLeftReferenceRefParserRuleCall_1_1_0()); }
	ruleReferenceRef{ after(grammarAccess.getReference2ReferenceAccess().getLeftReferenceRefParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference2Reference__RightAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReference2ReferenceAccess().getRightReferenceRefParserRuleCall_3_0()); }
	ruleReferenceRef{ after(grammarAccess.getReference2ReferenceAccess().getRightReferenceRefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference2Reference__RightAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReference2ReferenceAccess().getRightReferenceRefParserRuleCall_4_1_0()); }
	ruleReferenceRef{ after(grammarAccess.getReference2ReferenceAccess().getRightReferenceRefParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference2Reference__ConverterAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReference2ReferenceAccess().getConverterConverterParserRuleCall_5_0()); }
	ruleConverter{ after(grammarAccess.getReference2ReferenceAccess().getConverterConverterParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceRef__ReferredElementAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceRefAccess().getReferredElementMatchedElementCrossReference_0_0_0()); }
(
{ before(grammarAccess.getReferenceRefAccess().getReferredElementMatchedElementIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getReferenceRefAccess().getReferredElementMatchedElementIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getReferenceRefAccess().getReferredElementMatchedElementCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceRef__FeatureNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceRefAccess().getFeatureNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getReferenceRefAccess().getFeatureNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceRef__MultivaluedAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceRefAccess().getMultivaluedAsteriskKeyword_2_0()); }
(
{ before(grammarAccess.getReferenceRefAccess().getMultivaluedAsteriskKeyword_2_0()); }

	'*' 

{ after(grammarAccess.getReferenceRefAccess().getMultivaluedAsteriskKeyword_2_0()); }
)

{ after(grammarAccess.getReferenceRefAccess().getMultivaluedAsteriskKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Converter__ModuleAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConverterAccess().getModuleUseDeclarationCrossReference_1_0_0()); }
(
{ before(grammarAccess.getConverterAccess().getModuleUseDeclarationIDTerminalRuleCall_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getConverterAccess().getModuleUseDeclarationIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getConverterAccess().getModuleUseDeclarationCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Converter__IsExternalAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConverterAccess().getIsExternalFullStopKeyword_1_1_0()); }
(
{ before(grammarAccess.getConverterAccess().getIsExternalFullStopKeyword_1_1_0()); }

	'.' 

{ after(grammarAccess.getConverterAccess().getIsExternalFullStopKeyword_1_1_0()); }
)

{ after(grammarAccess.getConverterAccess().getIsExternalFullStopKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Converter__ConverterNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConverterAccess().getConverterNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getConverterAccess().getConverterNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


