/*
* generated by Xtext
*/
grammar InternalAttribution;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.eclectic.frontend.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclectic.frontend.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclectic.frontend.services.AttributionGrammarAccess;

}

@parser::members {
 
 	private AttributionGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(AttributionGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleAttributionTransformation
entryRuleAttributionTransformation 
:
{ before(grammarAccess.getAttributionTransformationRule()); }
	 ruleAttributionTransformation
{ after(grammarAccess.getAttributionTransformationRule()); } 
	 EOF 
;

// Rule AttributionTransformation
ruleAttributionTransformation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributionTransformationAccess().getGroup()); }
(rule__AttributionTransformation__Group__0)
{ after(grammarAccess.getAttributionTransformationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotation
entryRuleAnnotation 
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationAccess().getMetamodelModelAnnotationParserRuleCall()); }
	ruleMetamodelModelAnnotation
{ after(grammarAccess.getAnnotationAccess().getMetamodelModelAnnotationParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMetamodelModelAnnotation
entryRuleMetamodelModelAnnotation 
:
{ before(grammarAccess.getMetamodelModelAnnotationRule()); }
	 ruleMetamodelModelAnnotation
{ after(grammarAccess.getMetamodelModelAnnotationRule()); } 
	 EOF 
;

// Rule MetamodelModelAnnotation
ruleMetamodelModelAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMetamodelModelAnnotationAccess().getGroup()); }
(rule__MetamodelModelAnnotation__Group__0)
{ after(grammarAccess.getMetamodelModelAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransformationDefinitionParameter
entryRuleTransformationDefinitionParameter 
:
{ before(grammarAccess.getTransformationDefinitionParameterRule()); }
	 ruleTransformationDefinitionParameter
{ after(grammarAccess.getTransformationDefinitionParameterRule()); } 
	 EOF 
;

// Rule TransformationDefinitionParameter
ruleTransformationDefinitionParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransformationDefinitionParameterAccess().getGroup()); }
(rule__TransformationDefinitionParameter__Group__0)
{ after(grammarAccess.getTransformationDefinitionParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassUse
entryRuleClassUse 
:
{ before(grammarAccess.getClassUseRule()); }
	 ruleClassUse
{ after(grammarAccess.getClassUseRule()); } 
	 EOF 
;

// Rule ClassUse
ruleClassUse
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassUseAccess().getGroup()); }
(rule__ClassUse__Group__0)
{ after(grammarAccess.getClassUseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUsesStatements
entryRuleUsesStatements 
:
{ before(grammarAccess.getUsesStatementsRule()); }
	 ruleUsesStatements
{ after(grammarAccess.getUsesStatementsRule()); } 
	 EOF 
;

// Rule UsesStatements
ruleUsesStatements
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUsesStatementsAccess().getUseDeclarationParserRuleCall()); }
	ruleUseDeclaration
{ after(grammarAccess.getUsesStatementsAccess().getUseDeclarationParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUseDeclaration
entryRuleUseDeclaration 
:
{ before(grammarAccess.getUseDeclarationRule()); }
	 ruleUseDeclaration
{ after(grammarAccess.getUseDeclarationRule()); } 
	 EOF 
;

// Rule UseDeclaration
ruleUseDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUseDeclarationAccess().getGroup()); }
(rule__UseDeclaration__Group__0)
{ after(grammarAccess.getUseDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeDcl
entryRuleAttributeDcl 
:
{ before(grammarAccess.getAttributeDclRule()); }
	 ruleAttributeDcl
{ after(grammarAccess.getAttributeDclRule()); } 
	 EOF 
;

// Rule AttributeDcl
ruleAttributeDcl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeDclAccess().getAlternatives()); }
(rule__AttributeDcl__Alternatives)
{ after(grammarAccess.getAttributeDclAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInheritedAttributeDcl
entryRuleInheritedAttributeDcl 
:
{ before(grammarAccess.getInheritedAttributeDclRule()); }
	 ruleInheritedAttributeDcl
{ after(grammarAccess.getInheritedAttributeDclRule()); } 
	 EOF 
;

// Rule InheritedAttributeDcl
ruleInheritedAttributeDcl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInheritedAttributeDclAccess().getGroup()); }
(rule__InheritedAttributeDcl__Group__0)
{ after(grammarAccess.getInheritedAttributeDclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSynthesizedAttributeDcl
entryRuleSynthesizedAttributeDcl 
:
{ before(grammarAccess.getSynthesizedAttributeDclRule()); }
	 ruleSynthesizedAttributeDcl
{ after(grammarAccess.getSynthesizedAttributeDclRule()); } 
	 EOF 
;

// Rule SynthesizedAttributeDcl
ruleSynthesizedAttributeDcl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSynthesizedAttributeDclAccess().getGroup()); }
(rule__SynthesizedAttributeDcl__Group__0)
{ after(grammarAccess.getSynthesizedAttributeDclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributionRule
entryRuleAttributionRule 
:
{ before(grammarAccess.getAttributionRuleRule()); }
	 ruleAttributionRule
{ after(grammarAccess.getAttributionRuleRule()); } 
	 EOF 
;

// Rule AttributionRule
ruleAttributionRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributionRuleAccess().getGroup()); }
(rule__AttributionRule__Group__0)
{ after(grammarAccess.getAttributionRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClosureStatement
entryRuleClosureStatement 
:
{ before(grammarAccess.getClosureStatementRule()); }
	 ruleClosureStatement
{ after(grammarAccess.getClosureStatementRule()); } 
	 EOF 
;

// Rule ClosureStatement
ruleClosureStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClosureStatementAccess().getAlternatives()); }
(rule__ClosureStatement__Alternatives)
{ after(grammarAccess.getClosureStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClosureDeclaration
entryRuleClosureDeclaration 
:
{ before(grammarAccess.getClosureDeclarationRule()); }
	 ruleClosureDeclaration
{ after(grammarAccess.getClosureDeclarationRule()); } 
	 EOF 
;

// Rule ClosureDeclaration
ruleClosureDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClosureDeclarationAccess().getGroup()); }
(rule__ClosureDeclaration__Group__0)
{ after(grammarAccess.getClosureDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getMethodCallParserRuleCall()); }
	ruleMethodCall
{ after(grammarAccess.getExpressionAccess().getMethodCallParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInitiableExpression
entryRuleInitiableExpression 
:
{ before(grammarAccess.getInitiableExpressionRule()); }
	 ruleInitiableExpression
{ after(grammarAccess.getInitiableExpressionRule()); } 
	 EOF 
;

// Rule InitiableExpression
ruleInitiableExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitiableExpressionAccess().getAlternatives()); }
(rule__InitiableExpression__Alternatives)
{ after(grammarAccess.getInitiableExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodCall
entryRuleMethodCall 
:
{ before(grammarAccess.getMethodCallRule()); }
	 ruleMethodCall
{ after(grammarAccess.getMethodCallRule()); } 
	 EOF 
;

// Rule MethodCall
ruleMethodCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodCallAccess().getGroup()); }
(rule__MethodCall__Group__0)
{ after(grammarAccess.getMethodCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeInit
entryRuleAttributeInit 
:
{ before(grammarAccess.getAttributeInitRule()); }
	 ruleAttributeInit
{ after(grammarAccess.getAttributeInitRule()); } 
	 EOF 
;

// Rule AttributeInit
ruleAttributeInit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeInitAccess().getGroup()); }
(rule__AttributeInit__Group__0)
{ after(grammarAccess.getAttributeInitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleTraceDefinition
entryRuleTraceDefinition 
:
{ before(grammarAccess.getTraceDefinitionRule()); }
	 ruleTraceDefinition
{ after(grammarAccess.getTraceDefinitionRule()); } 
	 EOF 
;

// Rule TraceDefinition
ruleTraceDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTraceDefinitionAccess().getGroup()); }
(rule__TraceDefinition__Group__0)
{ after(grammarAccess.getTraceDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTraceElementInline
entryRuleTraceElementInline 
:
{ before(grammarAccess.getTraceElementInlineRule()); }
	 ruleTraceElementInline
{ after(grammarAccess.getTraceElementInlineRule()); } 
	 EOF 
;

// Rule TraceElementInline
ruleTraceElementInline
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTraceElementInlineAccess().getGroup()); }
(rule__TraceElementInline__Group__0)
{ after(grammarAccess.getTraceElementInlineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTraceElementExpanded
entryRuleTraceElementExpanded 
:
{ before(grammarAccess.getTraceElementExpandedRule()); }
	 ruleTraceElementExpanded
{ after(grammarAccess.getTraceElementExpandedRule()); } 
	 EOF 
;

// Rule TraceElementExpanded
ruleTraceElementExpanded
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTraceElementExpandedAccess().getGroup()); }
(rule__TraceElementExpanded__Group__0)
{ after(grammarAccess.getTraceElementExpandedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeExpression
entryRuleTypeExpression 
:
{ before(grammarAccess.getTypeExpressionRule()); }
	 ruleTypeExpression
{ after(grammarAccess.getTypeExpressionRule()); } 
	 EOF 
;

// Rule TypeExpression
ruleTypeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeExpressionAccess().getClassUseParserRuleCall()); }
	ruleClassUse
{ after(grammarAccess.getTypeExpressionAccess().getClassUseParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRulePotencyAnnotation
entryRulePotencyAnnotation 
:
{ before(grammarAccess.getPotencyAnnotationRule()); }
	 rulePotencyAnnotation
{ after(grammarAccess.getPotencyAnnotationRule()); } 
	 EOF 
;

// Rule PotencyAnnotation
rulePotencyAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPotencyAnnotationAccess().getGroup()); }
(rule__PotencyAnnotation__Group__0)
{ after(grammarAccess.getPotencyAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyWrite
entryRulePropertyWrite 
:
{ before(grammarAccess.getPropertyWriteRule()); }
	 rulePropertyWrite
{ after(grammarAccess.getPropertyWriteRule()); } 
	 EOF 
;

// Rule PropertyWrite
rulePropertyWrite
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyWriteAccess().getGroup()); }
(rule__PropertyWrite__Group__0)
{ after(grammarAccess.getPropertyWriteAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefineVariable
entryRuleDefineVariable 
:
{ before(grammarAccess.getDefineVariableRule()); }
	 ruleDefineVariable
{ after(grammarAccess.getDefineVariableRule()); } 
	 EOF 
;

// Rule DefineVariable
ruleDefineVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefineVariableAccess().getGroup()); }
(rule__DefineVariable__Group__0)
{ after(grammarAccess.getDefineVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModelReference
entryRuleModelReference 
:
{ before(grammarAccess.getModelReferenceRule()); }
	 ruleModelReference
{ after(grammarAccess.getModelReferenceRule()); } 
	 EOF 
;

// Rule ModelReference
ruleModelReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelReferenceAccess().getGroup()); }
(rule__ModelReference__Group__0)
{ after(grammarAccess.getModelReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParenthesizedExpression
entryRuleParenthesizedExpression 
:
{ before(grammarAccess.getParenthesizedExpressionRule()); }
	 ruleParenthesizedExpression
{ after(grammarAccess.getParenthesizedExpressionRule()); } 
	 EOF 
;

// Rule ParenthesizedExpression
ruleParenthesizedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getGroup()); }
(rule__ParenthesizedExpression__Group__0)
{ after(grammarAccess.getParenthesizedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableReference
entryRuleVariableReference 
:
{ before(grammarAccess.getVariableReferenceRule()); }
	 ruleVariableReference
{ after(grammarAccess.getVariableReferenceRule()); } 
	 EOF 
;

// Rule VariableReference
ruleVariableReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableReferenceAccess().getVariableAssignment()); }
(rule__VariableReference__VariableAssignment)
{ after(grammarAccess.getVariableReferenceAccess().getVariableAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClosureParameter
entryRuleClosureParameter 
:
{ before(grammarAccess.getClosureParameterRule()); }
	 ruleClosureParameter
{ after(grammarAccess.getClosureParameterRule()); } 
	 EOF 
;

// Rule ClosureParameter
ruleClosureParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClosureParameterAccess().getNameAssignment()); }
(rule__ClosureParameter__NameAssignment)
{ after(grammarAccess.getClosureParameterAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}









// Entry rule entryRuleTraceExprLanguage
entryRuleTraceExprLanguage 
:
{ before(grammarAccess.getTraceExprLanguageRule()); }
	 ruleTraceExprLanguage
{ after(grammarAccess.getTraceExprLanguageRule()); } 
	 EOF 
;

// Rule TraceExprLanguage
ruleTraceExprLanguage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTraceExprLanguageAccess().getGroup()); }
(rule__TraceExprLanguage__Group__0)
{ after(grammarAccess.getTraceExprLanguageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRulePutTraceParameter
entryRulePutTraceParameter 
:
{ before(grammarAccess.getPutTraceParameterRule()); }
	 rulePutTraceParameter
{ after(grammarAccess.getPutTraceParameterRule()); } 
	 EOF 
;

// Rule PutTraceParameter
rulePutTraceParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPutTraceParameterAccess().getGroup()); }
(rule__PutTraceParameter__Group__0)
{ after(grammarAccess.getPutTraceParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumLiteral
entryRuleNumLiteral 
:
{ before(grammarAccess.getNumLiteralRule()); }
	 ruleNumLiteral
{ after(grammarAccess.getNumLiteralRule()); } 
	 EOF 
;

// Rule NumLiteral
ruleNumLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumLiteralAccess().getValueAssignment()); }
(rule__NumLiteral__ValueAssignment)
{ after(grammarAccess.getNumLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloatLiteral
entryRuleFloatLiteral 
:
{ before(grammarAccess.getFloatLiteralRule()); }
	 ruleFloatLiteral
{ after(grammarAccess.getFloatLiteralRule()); } 
	 EOF 
;

// Rule FloatLiteral
ruleFloatLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloatLiteralAccess().getValueAssignment()); }
(rule__FloatLiteral__ValueAssignment)
{ after(grammarAccess.getFloatLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEDouble
entryRuleEDouble 
:
{ before(grammarAccess.getEDoubleRule()); }
	 ruleEDouble
{ after(grammarAccess.getEDoubleRule()); } 
	 EOF 
;

// Rule EDouble
ruleEDouble
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEDoubleAccess().getGroup()); }
(rule__EDouble__Group__0)
{ after(grammarAccess.getEDoubleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
(rule__StringLiteral__ValueAssignment)
{ after(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral 
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueAssignment()); }
(rule__BooleanLiteral__ValueAssignment)
{ after(grammarAccess.getBooleanLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEInt
entryRuleEInt 
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEIntAccess().getGroup()); }
(rule__EInt__Group__0)
{ after(grammarAccess.getEIntAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEBoolean
entryRuleEBoolean 
:
{ before(grammarAccess.getEBooleanRule()); }
	 ruleEBoolean
{ after(grammarAccess.getEBooleanRule()); } 
	 EOF 
;

// Rule EBoolean
ruleEBoolean
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEBooleanAccess().getAlternatives()); }
(rule__EBoolean__Alternatives)
{ after(grammarAccess.getEBooleanAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}






// Rule BinaryOp
ruleBinaryOp
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOpAccess().getAlternatives()); }
(rule__BinaryOp__Alternatives)
{ after(grammarAccess.getBinaryOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__AttributeDcl__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDclAccess().getInheritedAttributeDclParserRuleCall_0()); }
	ruleInheritedAttributeDcl
{ after(grammarAccess.getAttributeDclAccess().getInheritedAttributeDclParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAttributeDclAccess().getSynthesizedAttributeDclParserRuleCall_1()); }
	ruleSynthesizedAttributeDcl
{ after(grammarAccess.getAttributeDclAccess().getSynthesizedAttributeDclParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getDefineVariableParserRuleCall_0()); }
	ruleDefineVariable
{ after(grammarAccess.getStatementAccess().getDefineVariableParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getAttributeInitParserRuleCall_1()); }
	ruleAttributeInit
{ after(grammarAccess.getStatementAccess().getAttributeInitParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getPropertyWriteParserRuleCall_2()); }
	rulePropertyWrite
{ after(grammarAccess.getStatementAccess().getPropertyWriteParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureStatementAccess().getDefineVariableParserRuleCall_0()); }
	ruleDefineVariable
{ after(grammarAccess.getClosureStatementAccess().getDefineVariableParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClosureStatementAccess().getPropertyWriteParserRuleCall_1()); }
	rulePropertyWrite
{ after(grammarAccess.getClosureStatementAccess().getPropertyWriteParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getClosureStatementAccess().getVariableReferenceParserRuleCall_2()); }
	ruleVariableReference
{ after(grammarAccess.getClosureStatementAccess().getVariableReferenceParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getClosureStatementAccess().getAttributeInitParserRuleCall_3()); }
	ruleAttributeInit
{ after(grammarAccess.getClosureStatementAccess().getAttributeInitParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_0()); }
	ruleLiteral
{ after(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getVariableReferenceParserRuleCall_1()); }
	ruleVariableReference
{ after(grammarAccess.getPrimaryExpressionAccess().getVariableReferenceParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getModelReferenceParserRuleCall_2()); }
	ruleModelReference
{ after(grammarAccess.getPrimaryExpressionAccess().getModelReferenceParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getParenthesizedExpressionParserRuleCall_3()); }
	ruleParenthesizedExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getParenthesizedExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getClosureDeclarationParserRuleCall_4()); }
	ruleClosureDeclaration
{ after(grammarAccess.getPrimaryExpressionAccess().getClosureDeclarationParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitiableExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiableExpressionAccess().getVariableReferenceParserRuleCall_0()); }
	ruleVariableReference
{ after(grammarAccess.getInitiableExpressionAccess().getVariableReferenceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInitiableExpressionAccess().getGroup_1()); }
(rule__InitiableExpression__Group_1__0)
{ after(grammarAccess.getInitiableExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getGroup_1_0()); }
(rule__MethodCall__Group_1_0__0)
{ after(grammarAccess.getMethodCallAccess().getGroup_1_0()); }
)

    |(
(
{ before(grammarAccess.getMethodCallAccess().getGroup_1_1()); }
(rule__MethodCall__Group_1_1__0)
{ after(grammarAccess.getMethodCallAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getMethodCallAccess().getGroup_1_1()); }
(rule__MethodCall__Group_1_1__0)*
{ after(grammarAccess.getMethodCallAccess().getGroup_1_1()); }
)
)

    |(
(
{ before(grammarAccess.getMethodCallAccess().getGroup_1_2()); }
(rule__MethodCall__Group_1_2__0)
{ after(grammarAccess.getMethodCallAccess().getGroup_1_2()); }
)
(
{ before(grammarAccess.getMethodCallAccess().getGroup_1_2()); }
(rule__MethodCall__Group_1_2__0)*
{ after(grammarAccess.getMethodCallAccess().getGroup_1_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Alternatives_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getGroup_1_2_1_0()); }
(rule__MethodCall__Group_1_2_1_0__0)
{ after(grammarAccess.getMethodCallAccess().getGroup_1_2_1_0()); }
)

    |(
{ before(grammarAccess.getMethodCallAccess().getGroup_1_2_1_1()); }
(rule__MethodCall__Group_1_2_1_1__0)
{ after(grammarAccess.getMethodCallAccess().getGroup_1_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getGroup_2_0()); }
(rule__TraceDefinition__Group_2_0__0)
{ after(grammarAccess.getTraceDefinitionAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getTraceDefinitionAccess().getGroup_2_1()); }
(rule__TraceDefinition__Group_2_1__0)
{ after(grammarAccess.getTraceDefinitionAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PotencyAnnotation__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotencyAnnotationAccess().getCommercialAtKeyword_0_0()); }

	'@' 

{ after(grammarAccess.getPotencyAnnotationAccess().getCommercialAtKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getPotencyAnnotationAccess().getCircumflexAccentKeyword_0_1()); }

	'^' 

{ after(grammarAccess.getPotencyAnnotationAccess().getCircumflexAccentKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getFloatLiteralParserRuleCall_0()); }
	ruleFloatLiteral
{ after(grammarAccess.getLiteralAccess().getFloatLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getNumLiteralParserRuleCall_1()); }
	ruleNumLiteral
{ after(grammarAccess.getLiteralAccess().getNumLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_2()); }
	ruleStringLiteral
{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_3()); }
	ruleBooleanLiteral
{ after(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EBoolean__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOpAccess().getADDEnumLiteralDeclaration_0()); }
(	'+' 
)
{ after(grammarAccess.getBinaryOpAccess().getADDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getBinaryOpAccess().getSUBEnumLiteralDeclaration_1()); }
(	'-' 
)
{ after(grammarAccess.getBinaryOpAccess().getSUBEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getBinaryOpAccess().getMULEnumLiteralDeclaration_2()); }
(	'*' 
)
{ after(grammarAccess.getBinaryOpAccess().getMULEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getBinaryOpAccess().getDIVEnumLiteralDeclaration_3()); }
(	'/' 
)
{ after(grammarAccess.getBinaryOpAccess().getDIVEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__AttributionTransformation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributionTransformation__Group__0__Impl
	rule__AttributionTransformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getAttributionKeyword_0()); }

	'attribution' 

{ after(grammarAccess.getAttributionTransformationAccess().getAttributionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributionTransformation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributionTransformation__Group__1__Impl
	rule__AttributionTransformation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getNameAssignment_1()); }
(rule__AttributionTransformation__NameAssignment_1)
{ after(grammarAccess.getAttributionTransformationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributionTransformation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributionTransformation__Group__2__Impl
	rule__AttributionTransformation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getAttributionTransformationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributionTransformation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributionTransformation__Group__3__Impl
	rule__AttributionTransformation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getInModelsAssignment_3()); }
(rule__AttributionTransformation__InModelsAssignment_3)
{ after(grammarAccess.getAttributionTransformationAccess().getInModelsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributionTransformation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributionTransformation__Group__4__Impl
	rule__AttributionTransformation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getGroup_4()); }
(rule__AttributionTransformation__Group_4__0)*
{ after(grammarAccess.getAttributionTransformationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributionTransformation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributionTransformation__Group__5__Impl
	rule__AttributionTransformation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getAttributionTransformationAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributionTransformation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributionTransformation__Group__6__Impl
	rule__AttributionTransformation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getHyphenMinusGreaterThanSignKeyword_6()); }

	'->' 

{ after(grammarAccess.getAttributionTransformationAccess().getHyphenMinusGreaterThanSignKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributionTransformation__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributionTransformation__Group__7__Impl
	rule__AttributionTransformation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getLeftParenthesisKeyword_7()); }

	'(' 

{ after(grammarAccess.getAttributionTransformationAccess().getLeftParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributionTransformation__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributionTransformation__Group__8__Impl
	rule__AttributionTransformation__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getOutModelsAssignment_8()); }
(rule__AttributionTransformation__OutModelsAssignment_8)?
{ after(grammarAccess.getAttributionTransformationAccess().getOutModelsAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributionTransformation__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributionTransformation__Group__9__Impl
	rule__AttributionTransformation__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getGroup_9()); }
(rule__AttributionTransformation__Group_9__0)*
{ after(grammarAccess.getAttributionTransformationAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributionTransformation__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributionTransformation__Group__10__Impl
	rule__AttributionTransformation__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getRightParenthesisKeyword_10()); }

	')' 

{ after(grammarAccess.getAttributionTransformationAccess().getRightParenthesisKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributionTransformation__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributionTransformation__Group__11__Impl
	rule__AttributionTransformation__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getAnnotationsAssignment_11()); }
(rule__AttributionTransformation__AnnotationsAssignment_11)*
{ after(grammarAccess.getAttributionTransformationAccess().getAnnotationsAssignment_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributionTransformation__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributionTransformation__Group__12__Impl
	rule__AttributionTransformation__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getUsesAssignment_12()); }
(rule__AttributionTransformation__UsesAssignment_12)*
{ after(grammarAccess.getAttributionTransformationAccess().getUsesAssignment_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributionTransformation__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributionTransformation__Group__13__Impl
	rule__AttributionTransformation__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getAttributesAssignment_13()); }
(rule__AttributionTransformation__AttributesAssignment_13)*
{ after(grammarAccess.getAttributionTransformationAccess().getAttributesAssignment_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributionTransformation__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributionTransformation__Group__14__Impl
	rule__AttributionTransformation__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAttributionTransformationAccess().getRulesAssignment_14()); }
(rule__AttributionTransformation__RulesAssignment_14)
{ after(grammarAccess.getAttributionTransformationAccess().getRulesAssignment_14()); }
)
(
{ before(grammarAccess.getAttributionTransformationAccess().getRulesAssignment_14()); }
(rule__AttributionTransformation__RulesAssignment_14)*
{ after(grammarAccess.getAttributionTransformationAccess().getRulesAssignment_14()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributionTransformation__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributionTransformation__Group__15__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__Group__15__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getEndKeyword_15()); }

	'end' 

{ after(grammarAccess.getAttributionTransformationAccess().getEndKeyword_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}


































rule__AttributionTransformation__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributionTransformation__Group_4__0__Impl
	rule__AttributionTransformation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getAttributionTransformationAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributionTransformation__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributionTransformation__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getInModelsAssignment_4_1()); }
(rule__AttributionTransformation__InModelsAssignment_4_1)
{ after(grammarAccess.getAttributionTransformationAccess().getInModelsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributionTransformation__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributionTransformation__Group_9__0__Impl
	rule__AttributionTransformation__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getCommaKeyword_9_0()); }

	',' 

{ after(grammarAccess.getAttributionTransformationAccess().getCommaKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributionTransformation__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributionTransformation__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getInModelsAssignment_9_1()); }
(rule__AttributionTransformation__InModelsAssignment_9_1)
{ after(grammarAccess.getAttributionTransformationAccess().getInModelsAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MetamodelModelAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelModelAnnotation__Group__0__Impl
	rule__MetamodelModelAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelModelAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelModelAnnotationAccess().getAnnotatedElementAssignment_0()); }
(rule__MetamodelModelAnnotation__AnnotatedElementAssignment_0)
{ after(grammarAccess.getMetamodelModelAnnotationAccess().getAnnotatedElementAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetamodelModelAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelModelAnnotation__Group__1__Impl
	rule__MetamodelModelAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelModelAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelModelAnnotationAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getMetamodelModelAnnotationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetamodelModelAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetamodelModelAnnotation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelModelAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelModelAnnotationAccess().getMetamodelAssignment_2()); }
(rule__MetamodelModelAnnotation__MetamodelAssignment_2)
{ after(grammarAccess.getMetamodelModelAnnotationAccess().getMetamodelAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TransformationDefinitionParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransformationDefinitionParameter__Group__0__Impl
	rule__TransformationDefinitionParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationDefinitionParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationDefinitionParameterAccess().getTransformationDefinitionParameterAction_0()); }
(

)
{ after(grammarAccess.getTransformationDefinitionParameterAccess().getTransformationDefinitionParameterAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationDefinitionParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransformationDefinitionParameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationDefinitionParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationDefinitionParameterAccess().getNameAssignment_1()); }
(rule__TransformationDefinitionParameter__NameAssignment_1)
{ after(grammarAccess.getTransformationDefinitionParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassUse__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassUse__Group__0__Impl
	rule__ClassUse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassUse__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassUseAccess().getModelAssignment_0()); }
(rule__ClassUse__ModelAssignment_0)
{ after(grammarAccess.getClassUseAccess().getModelAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassUse__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassUse__Group__1__Impl
	rule__ClassUse__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassUse__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassUseAccess().getExclamationMarkKeyword_1()); }

	'!' 

{ after(grammarAccess.getClassUseAccess().getExclamationMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassUse__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassUse__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassUse__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassUseAccess().getClassNameAssignment_2()); }
(rule__ClassUse__ClassNameAssignment_2)
{ after(grammarAccess.getClassUseAccess().getClassNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UseDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseDeclaration__Group__0__Impl
	rule__UseDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseDeclarationAccess().getUsesKeyword_0()); }

	'uses' 

{ after(grammarAccess.getUseDeclarationAccess().getUsesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseDeclaration__Group__1__Impl
	rule__UseDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UseDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseDeclarationAccess().getModuleAssignment_1()); }
(rule__UseDeclaration__ModuleAssignment_1)
{ after(grammarAccess.getUseDeclarationAccess().getModuleAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseDeclarationAccess().getGroup_2()); }
(rule__UseDeclaration__Group_2__0)?
{ after(grammarAccess.getUseDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UseDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseDeclaration__Group_2__0__Impl
	rule__UseDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseDeclarationAccess().getAsKeyword_2_0()); }

	'as' 

{ after(grammarAccess.getUseDeclarationAccess().getAsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseDeclarationAccess().getAsAssignment_2_1()); }
(rule__UseDeclaration__AsAssignment_2_1)
{ after(grammarAccess.getUseDeclarationAccess().getAsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InheritedAttributeDcl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InheritedAttributeDcl__Group__0__Impl
	rule__InheritedAttributeDcl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InheritedAttributeDcl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInheritedAttributeDclAccess().getInhKeyword_0()); }

	'inh' 

{ after(grammarAccess.getInheritedAttributeDclAccess().getInhKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InheritedAttributeDcl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InheritedAttributeDcl__Group__1__Impl
	rule__InheritedAttributeDcl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InheritedAttributeDcl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInheritedAttributeDclAccess().getNameAssignment_1()); }
(rule__InheritedAttributeDcl__NameAssignment_1)
{ after(grammarAccess.getInheritedAttributeDclAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InheritedAttributeDcl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InheritedAttributeDcl__Group__2__Impl
	rule__InheritedAttributeDcl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InheritedAttributeDcl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInheritedAttributeDclAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getInheritedAttributeDclAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InheritedAttributeDcl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InheritedAttributeDcl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InheritedAttributeDcl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInheritedAttributeDclAccess().getType_Assignment_3()); }
(rule__InheritedAttributeDcl__Type_Assignment_3)
{ after(grammarAccess.getInheritedAttributeDclAccess().getType_Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SynthesizedAttributeDcl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SynthesizedAttributeDcl__Group__0__Impl
	rule__SynthesizedAttributeDcl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SynthesizedAttributeDcl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynthesizedAttributeDclAccess().getSynKeyword_0()); }

	'syn' 

{ after(grammarAccess.getSynthesizedAttributeDclAccess().getSynKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SynthesizedAttributeDcl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SynthesizedAttributeDcl__Group__1__Impl
	rule__SynthesizedAttributeDcl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SynthesizedAttributeDcl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynthesizedAttributeDclAccess().getNameAssignment_1()); }
(rule__SynthesizedAttributeDcl__NameAssignment_1)
{ after(grammarAccess.getSynthesizedAttributeDclAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SynthesizedAttributeDcl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SynthesizedAttributeDcl__Group__2__Impl
	rule__SynthesizedAttributeDcl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SynthesizedAttributeDcl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynthesizedAttributeDclAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getSynthesizedAttributeDclAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SynthesizedAttributeDcl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SynthesizedAttributeDcl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SynthesizedAttributeDcl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynthesizedAttributeDclAccess().getType_Assignment_3()); }
(rule__SynthesizedAttributeDcl__Type_Assignment_3)
{ after(grammarAccess.getSynthesizedAttributeDclAccess().getType_Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AttributionRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributionRule__Group__0__Impl
	rule__AttributionRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionRuleAccess().getRuleKeyword_0()); }

	'rule' 

{ after(grammarAccess.getAttributionRuleAccess().getRuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributionRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributionRule__Group__1__Impl
	rule__AttributionRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionRuleAccess().getTypeAssignment_1()); }
(rule__AttributionRule__TypeAssignment_1)
{ after(grammarAccess.getAttributionRuleAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributionRule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributionRule__Group__2__Impl
	rule__AttributionRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionRule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAttributionRuleAccess().getStatementsAssignment_2()); }
(rule__AttributionRule__StatementsAssignment_2)
{ after(grammarAccess.getAttributionRuleAccess().getStatementsAssignment_2()); }
)
(
{ before(grammarAccess.getAttributionRuleAccess().getStatementsAssignment_2()); }
(rule__AttributionRule__StatementsAssignment_2)*
{ after(grammarAccess.getAttributionRuleAccess().getStatementsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributionRule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributionRule__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionRule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionRuleAccess().getEndKeyword_3()); }

	'end' 

{ after(grammarAccess.getAttributionRuleAccess().getEndKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ClosureDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosureDeclaration__Group__0__Impl
	rule__ClosureDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureDeclarationAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getClosureDeclarationAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosureDeclaration__Group__1__Impl
	rule__ClosureDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureDeclarationAccess().getGroup_1()); }
(rule__ClosureDeclaration__Group_1__0)?
{ after(grammarAccess.getClosureDeclarationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosureDeclaration__Group__2__Impl
	rule__ClosureDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getClosureDeclarationAccess().getStatementsAssignment_2()); }
(rule__ClosureDeclaration__StatementsAssignment_2)
{ after(grammarAccess.getClosureDeclarationAccess().getStatementsAssignment_2()); }
)
(
{ before(grammarAccess.getClosureDeclarationAccess().getStatementsAssignment_2()); }
(rule__ClosureDeclaration__StatementsAssignment_2)*
{ after(grammarAccess.getClosureDeclarationAccess().getStatementsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosureDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureDeclarationAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getClosureDeclarationAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ClosureDeclaration__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosureDeclaration__Group_1__0__Impl
	rule__ClosureDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureDeclarationAccess().getVerticalLineKeyword_1_0()); }

	'|' 

{ after(grammarAccess.getClosureDeclarationAccess().getVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureDeclaration__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosureDeclaration__Group_1__1__Impl
	rule__ClosureDeclaration__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureDeclarationAccess().getFormalParametersAssignment_1_1()); }
(rule__ClosureDeclaration__FormalParametersAssignment_1_1)
{ after(grammarAccess.getClosureDeclarationAccess().getFormalParametersAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureDeclaration__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosureDeclaration__Group_1__2__Impl
	rule__ClosureDeclaration__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureDeclarationAccess().getGroup_1_2()); }
(rule__ClosureDeclaration__Group_1_2__0)*
{ after(grammarAccess.getClosureDeclarationAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureDeclaration__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosureDeclaration__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureDeclarationAccess().getVerticalLineKeyword_1_3()); }

	'|' 

{ after(grammarAccess.getClosureDeclarationAccess().getVerticalLineKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ClosureDeclaration__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosureDeclaration__Group_1_2__0__Impl
	rule__ClosureDeclaration__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureDeclarationAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getClosureDeclarationAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClosureDeclaration__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClosureDeclaration__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureDeclarationAccess().getFormalParametersAssignment_1_2_1()); }
(rule__ClosureDeclaration__FormalParametersAssignment_1_2_1)
{ after(grammarAccess.getClosureDeclarationAccess().getFormalParametersAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InitiableExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitiableExpression__Group_1__0__Impl
	rule__InitiableExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitiableExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiableExpressionAccess().getVariableReferenceParserRuleCall_1_0()); }
	ruleVariableReference
{ after(grammarAccess.getInitiableExpressionAccess().getVariableReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitiableExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitiableExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitiableExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getInitiableExpressionAccess().getGroup_1_1()); }
(rule__InitiableExpression__Group_1_1__0)
{ after(grammarAccess.getInitiableExpressionAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getInitiableExpressionAccess().getGroup_1_1()); }
(rule__InitiableExpression__Group_1_1__0)*
{ after(grammarAccess.getInitiableExpressionAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InitiableExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitiableExpression__Group_1_1__0__Impl
	rule__InitiableExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitiableExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiableExpressionAccess().getGroup_1_1_0()); }
(rule__InitiableExpression__Group_1_1_0__0)
{ after(grammarAccess.getInitiableExpressionAccess().getGroup_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitiableExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitiableExpression__Group_1_1__1__Impl
	rule__InitiableExpression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitiableExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiableExpressionAccess().getFullStopKeyword_1_1_1()); }

	'.' 

{ after(grammarAccess.getInitiableExpressionAccess().getFullStopKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitiableExpression__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitiableExpression__Group_1_1__2__Impl
	rule__InitiableExpression__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InitiableExpression__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiableExpressionAccess().getMethodNameAssignment_1_1_2()); }
(rule__InitiableExpression__MethodNameAssignment_1_1_2)
{ after(grammarAccess.getInitiableExpressionAccess().getMethodNameAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitiableExpression__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitiableExpression__Group_1_1__3__Impl
	rule__InitiableExpression__Group_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InitiableExpression__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiableExpressionAccess().getGroup_1_1_3()); }
(rule__InitiableExpression__Group_1_1_3__0)?
{ after(grammarAccess.getInitiableExpressionAccess().getGroup_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitiableExpression__Group_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitiableExpression__Group_1_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitiableExpression__Group_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiableExpressionAccess().getParametersAssignment_1_1_4()); }
(rule__InitiableExpression__ParametersAssignment_1_1_4)?
{ after(grammarAccess.getInitiableExpressionAccess().getParametersAssignment_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InitiableExpression__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitiableExpression__Group_1_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitiableExpression__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiableExpressionAccess().getMethodCallReceptorAction_1_1_0_0()); }
(

)
{ after(grammarAccess.getInitiableExpressionAccess().getMethodCallReceptorAction_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__InitiableExpression__Group_1_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitiableExpression__Group_1_1_3__0__Impl
	rule__InitiableExpression__Group_1_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitiableExpression__Group_1_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiableExpressionAccess().getWithParametersAssignment_1_1_3_0()); }
(rule__InitiableExpression__WithParametersAssignment_1_1_3_0)
{ after(grammarAccess.getInitiableExpressionAccess().getWithParametersAssignment_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitiableExpression__Group_1_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitiableExpression__Group_1_1_3__1__Impl
	rule__InitiableExpression__Group_1_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitiableExpression__Group_1_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiableExpressionAccess().getParametersAssignment_1_1_3_1()); }
(rule__InitiableExpression__ParametersAssignment_1_1_3_1)
{ after(grammarAccess.getInitiableExpressionAccess().getParametersAssignment_1_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitiableExpression__Group_1_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitiableExpression__Group_1_1_3__2__Impl
	rule__InitiableExpression__Group_1_1_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InitiableExpression__Group_1_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiableExpressionAccess().getGroup_1_1_3_2()); }
(rule__InitiableExpression__Group_1_1_3_2__0)*
{ after(grammarAccess.getInitiableExpressionAccess().getGroup_1_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitiableExpression__Group_1_1_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitiableExpression__Group_1_1_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitiableExpression__Group_1_1_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiableExpressionAccess().getRightParenthesisKeyword_1_1_3_3()); }

	')' 

{ after(grammarAccess.getInitiableExpressionAccess().getRightParenthesisKeyword_1_1_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InitiableExpression__Group_1_1_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitiableExpression__Group_1_1_3_2__0__Impl
	rule__InitiableExpression__Group_1_1_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitiableExpression__Group_1_1_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiableExpressionAccess().getCommaKeyword_1_1_3_2_0()); }

	',' 

{ after(grammarAccess.getInitiableExpressionAccess().getCommaKeyword_1_1_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InitiableExpression__Group_1_1_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InitiableExpression__Group_1_1_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitiableExpression__Group_1_1_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiableExpressionAccess().getParametersAssignment_1_1_3_2_1()); }
(rule__InitiableExpression__ParametersAssignment_1_1_3_2_1)
{ after(grammarAccess.getInitiableExpressionAccess().getParametersAssignment_1_1_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group__0__Impl
	rule__MethodCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
{ after(grammarAccess.getMethodCallAccess().getPrimaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getAlternatives_1()); }
(rule__MethodCall__Alternatives_1)?
{ after(grammarAccess.getMethodCallAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodCall__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_0__0__Impl
	rule__MethodCall__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getBinaryExprLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getMethodCallAccess().getBinaryExprLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_0__1__Impl
	rule__MethodCall__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getBinaryOpAssignment_1_0_1()); }
(rule__MethodCall__BinaryOpAssignment_1_0_1)
{ after(grammarAccess.getMethodCallAccess().getBinaryOpAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getRightAssignment_1_0_2()); }
(rule__MethodCall__RightAssignment_1_0_2)
{ after(grammarAccess.getMethodCallAccess().getRightAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MethodCall__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_1__0__Impl
	rule__MethodCall__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getGroup_1_1_0()); }
(rule__MethodCall__Group_1_1_0__0)
{ after(grammarAccess.getMethodCallAccess().getGroup_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getGroup_1_1_1()); }
(rule__MethodCall__Group_1_1_1__0)?
{ after(grammarAccess.getMethodCallAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodCall__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_1_0__0__Impl
	rule__MethodCall__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getAttributeUseExprAction_1_1_0_0()); }
(

)
{ after(grammarAccess.getMethodCallAccess().getAttributeUseExprAction_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_1_0__1__Impl
	rule__MethodCall__Group_1_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getLeftSquareBracketKeyword_1_1_0_1()); }

	'[' 

{ after(grammarAccess.getMethodCallAccess().getLeftSquareBracketKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_1_0__2__Impl
	rule__MethodCall__Group_1_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getAttributeAssignment_1_1_0_2()); }
(rule__MethodCall__AttributeAssignment_1_1_0_2)
{ after(grammarAccess.getMethodCallAccess().getAttributeAssignment_1_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getRightSquareBracketKeyword_1_1_0_3()); }

	']' 

{ after(grammarAccess.getMethodCallAccess().getRightSquareBracketKeyword_1_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MethodCall__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_1_1__0__Impl
	rule__MethodCall__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getGroup_1_1_1_0()); }
(rule__MethodCall__Group_1_1_1_0__0)
{ after(grammarAccess.getMethodCallAccess().getGroup_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_1_1__1__Impl
	rule__MethodCall__Group_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getFullStopKeyword_1_1_1_1()); }

	'.' 

{ after(grammarAccess.getMethodCallAccess().getFullStopKeyword_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_1_1__2__Impl
	rule__MethodCall__Group_1_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getMethodNameAssignment_1_1_1_2()); }
(rule__MethodCall__MethodNameAssignment_1_1_1_2)
{ after(grammarAccess.getMethodCallAccess().getMethodNameAssignment_1_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_1_1__3__Impl
	rule__MethodCall__Group_1_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getGroup_1_1_1_3()); }
(rule__MethodCall__Group_1_1_1_3__0)?
{ after(grammarAccess.getMethodCallAccess().getGroup_1_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_1_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getParametersAssignment_1_1_1_4()); }
(rule__MethodCall__ParametersAssignment_1_1_1_4)?
{ after(grammarAccess.getMethodCallAccess().getParametersAssignment_1_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MethodCall__Group_1_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_1_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getMethodCallReceptorAction_1_1_1_0_0()); }
(

)
{ after(grammarAccess.getMethodCallAccess().getMethodCallReceptorAction_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__MethodCall__Group_1_1_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_1_1_3__0__Impl
	rule__MethodCall__Group_1_1_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_1_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getWithParametersAssignment_1_1_1_3_0()); }
(rule__MethodCall__WithParametersAssignment_1_1_1_3_0)
{ after(grammarAccess.getMethodCallAccess().getWithParametersAssignment_1_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_1_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_1_1_3__1__Impl
	rule__MethodCall__Group_1_1_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_1_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getParametersAssignment_1_1_1_3_1()); }
(rule__MethodCall__ParametersAssignment_1_1_1_3_1)
{ after(grammarAccess.getMethodCallAccess().getParametersAssignment_1_1_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_1_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_1_1_3__2__Impl
	rule__MethodCall__Group_1_1_1_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_1_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getGroup_1_1_1_3_2()); }
(rule__MethodCall__Group_1_1_1_3_2__0)*
{ after(grammarAccess.getMethodCallAccess().getGroup_1_1_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_1_1_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_1_1_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_1_1_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getRightParenthesisKeyword_1_1_1_3_3()); }

	')' 

{ after(grammarAccess.getMethodCallAccess().getRightParenthesisKeyword_1_1_1_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MethodCall__Group_1_1_1_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_1_1_3_2__0__Impl
	rule__MethodCall__Group_1_1_1_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_1_1_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getCommaKeyword_1_1_1_3_2_0()); }

	',' 

{ after(grammarAccess.getMethodCallAccess().getCommaKeyword_1_1_1_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_1_1_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_1_1_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_1_1_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getParametersAssignment_1_1_1_3_2_1()); }
(rule__MethodCall__ParametersAssignment_1_1_1_3_2_1)
{ after(grammarAccess.getMethodCallAccess().getParametersAssignment_1_1_1_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodCall__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2__0__Impl
	rule__MethodCall__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getGroup_1_2_0()); }
(rule__MethodCall__Group_1_2_0__0)
{ after(grammarAccess.getMethodCallAccess().getGroup_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getAlternatives_1_2_1()); }
(rule__MethodCall__Alternatives_1_2_1)?
{ after(grammarAccess.getMethodCallAccess().getAlternatives_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodCall__Group_1_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_0__0__Impl
	rule__MethodCall__Group_1_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getGroup_1_2_0_0()); }
(rule__MethodCall__Group_1_2_0_0__0)
{ after(grammarAccess.getMethodCallAccess().getGroup_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_0__1__Impl
	rule__MethodCall__Group_1_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getFullStopKeyword_1_2_0_1()); }

	'.' 

{ after(grammarAccess.getMethodCallAccess().getFullStopKeyword_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_0__2__Impl
	rule__MethodCall__Group_1_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getMethodNameAssignment_1_2_0_2()); }
(rule__MethodCall__MethodNameAssignment_1_2_0_2)
{ after(grammarAccess.getMethodCallAccess().getMethodNameAssignment_1_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_2_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_0__3__Impl
	rule__MethodCall__Group_1_2_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getGroup_1_2_0_3()); }
(rule__MethodCall__Group_1_2_0_3__0)?
{ after(grammarAccess.getMethodCallAccess().getGroup_1_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_2_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getParametersAssignment_1_2_0_4()); }
(rule__MethodCall__ParametersAssignment_1_2_0_4)?
{ after(grammarAccess.getMethodCallAccess().getParametersAssignment_1_2_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MethodCall__Group_1_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_0_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getMethodCallReceptorAction_1_2_0_0_0()); }
(

)
{ after(grammarAccess.getMethodCallAccess().getMethodCallReceptorAction_1_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__MethodCall__Group_1_2_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_0_3__0__Impl
	rule__MethodCall__Group_1_2_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getWithParametersAssignment_1_2_0_3_0()); }
(rule__MethodCall__WithParametersAssignment_1_2_0_3_0)
{ after(grammarAccess.getMethodCallAccess().getWithParametersAssignment_1_2_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_2_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_0_3__1__Impl
	rule__MethodCall__Group_1_2_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getParametersAssignment_1_2_0_3_1()); }
(rule__MethodCall__ParametersAssignment_1_2_0_3_1)
{ after(grammarAccess.getMethodCallAccess().getParametersAssignment_1_2_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_2_0_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_0_3__2__Impl
	rule__MethodCall__Group_1_2_0_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_0_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getGroup_1_2_0_3_2()); }
(rule__MethodCall__Group_1_2_0_3_2__0)*
{ after(grammarAccess.getMethodCallAccess().getGroup_1_2_0_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_2_0_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_0_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_0_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getRightParenthesisKeyword_1_2_0_3_3()); }

	')' 

{ after(grammarAccess.getMethodCallAccess().getRightParenthesisKeyword_1_2_0_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MethodCall__Group_1_2_0_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_0_3_2__0__Impl
	rule__MethodCall__Group_1_2_0_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_0_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getCommaKeyword_1_2_0_3_2_0()); }

	',' 

{ after(grammarAccess.getMethodCallAccess().getCommaKeyword_1_2_0_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_2_0_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_0_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_0_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getParametersAssignment_1_2_0_3_2_1()); }
(rule__MethodCall__ParametersAssignment_1_2_0_3_2_1)
{ after(grammarAccess.getMethodCallAccess().getParametersAssignment_1_2_0_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MethodCall__Group_1_2_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_1_0__0__Impl
	rule__MethodCall__Group_1_2_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getAttributeUseExprAction_1_2_1_0_0()); }
(

)
{ after(grammarAccess.getMethodCallAccess().getAttributeUseExprAction_1_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_2_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_1_0__1__Impl
	rule__MethodCall__Group_1_2_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getLeftSquareBracketKeyword_1_2_1_0_1()); }

	'[' 

{ after(grammarAccess.getMethodCallAccess().getLeftSquareBracketKeyword_1_2_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_2_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_1_0__2__Impl
	rule__MethodCall__Group_1_2_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getAttributeAssignment_1_2_1_0_2()); }
(rule__MethodCall__AttributeAssignment_1_2_1_0_2)
{ after(grammarAccess.getMethodCallAccess().getAttributeAssignment_1_2_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_2_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getRightSquareBracketKeyword_1_2_1_0_3()); }

	']' 

{ after(grammarAccess.getMethodCallAccess().getRightSquareBracketKeyword_1_2_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MethodCall__Group_1_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_1_1__0__Impl
	rule__MethodCall__Group_1_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getResolveLinkExprAction_1_2_1_1_0()); }
(

)
{ after(grammarAccess.getMethodCallAccess().getResolveLinkExprAction_1_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_1_1__1__Impl
	rule__MethodCall__Group_1_2_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getLeftSquareBracketKeyword_1_2_1_1_1()); }

	'[' 

{ after(grammarAccess.getMethodCallAccess().getLeftSquareBracketKeyword_1_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_2_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_1_1__2__Impl
	rule__MethodCall__Group_1_2_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getModuleAssignment_1_2_1_1_2()); }
(rule__MethodCall__ModuleAssignment_1_2_1_1_2)
{ after(grammarAccess.getMethodCallAccess().getModuleAssignment_1_2_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_2_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_1_1__3__Impl
	rule__MethodCall__Group_1_2_1_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getIsExternalAssignment_1_2_1_1_3()); }
(rule__MethodCall__IsExternalAssignment_1_2_1_1_3)
{ after(grammarAccess.getMethodCallAccess().getIsExternalAssignment_1_2_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_2_1_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_1_1__4__Impl
	rule__MethodCall__Group_1_2_1_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_1_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getLinkNameAssignment_1_2_1_1_4()); }
(rule__MethodCall__LinkNameAssignment_1_2_1_1_4)
{ after(grammarAccess.getMethodCallAccess().getLinkNameAssignment_1_2_1_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_2_1_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_1_1__5__Impl
	rule__MethodCall__Group_1_2_1_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_1_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getGroup_1_2_1_1_5()); }
(rule__MethodCall__Group_1_2_1_1_5__0)?
{ after(grammarAccess.getMethodCallAccess().getGroup_1_2_1_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_2_1_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_1_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_1_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getRightSquareBracketKeyword_1_2_1_1_6()); }

	']' 

{ after(grammarAccess.getMethodCallAccess().getRightSquareBracketKeyword_1_2_1_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__MethodCall__Group_1_2_1_1_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_1_1_5__0__Impl
	rule__MethodCall__Group_1_2_1_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_1_1_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getFullStopKeyword_1_2_1_1_5_0()); }

	'.' 

{ after(grammarAccess.getMethodCallAccess().getFullStopKeyword_1_2_1_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodCall__Group_1_2_1_1_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodCall__Group_1_2_1_1_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__Group_1_2_1_1_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getFeatureNameAssignment_1_2_1_1_5_1()); }
(rule__MethodCall__FeatureNameAssignment_1_2_1_1_5_1)
{ after(grammarAccess.getMethodCallAccess().getFeatureNameAssignment_1_2_1_1_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeInit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeInit__Group__0__Impl
	rule__AttributeInit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeInit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeInitAccess().getReceptorAssignment_0()); }
(rule__AttributeInit__ReceptorAssignment_0)
{ after(grammarAccess.getAttributeInitAccess().getReceptorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeInit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeInit__Group__1__Impl
	rule__AttributeInit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeInit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeInitAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getAttributeInitAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeInit__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeInit__Group__2__Impl
	rule__AttributeInit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeInit__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeInitAccess().getAttributeAssignment_2()); }
(rule__AttributeInit__AttributeAssignment_2)
{ after(grammarAccess.getAttributeInitAccess().getAttributeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeInit__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeInit__Group__3__Impl
	rule__AttributeInit__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeInit__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeInitAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getAttributeInitAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeInit__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeInit__Group__4__Impl
	rule__AttributeInit__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeInit__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeInitAccess().getLessThanSignHyphenMinusKeyword_4()); }

	'<-' 

{ after(grammarAccess.getAttributeInitAccess().getLessThanSignHyphenMinusKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeInit__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeInit__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeInit__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeInitAccess().getRightAssignment_5()); }
(rule__AttributeInit__RightAssignment_5)
{ after(grammarAccess.getAttributeInitAccess().getRightAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}















rule__TraceDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceDefinition__Group__0__Impl
	rule__TraceDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getLinkKeyword_0()); }

	'link' 

{ after(grammarAccess.getTraceDefinitionAccess().getLinkKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceDefinition__Group__1__Impl
	rule__TraceDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getNameAssignment_1()); }
(rule__TraceDefinition__NameAssignment_1)
{ after(grammarAccess.getTraceDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getAlternatives_2()); }
(rule__TraceDefinition__Alternatives_2)
{ after(grammarAccess.getTraceDefinitionAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TraceDefinition__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceDefinition__Group_2_0__0__Impl
	rule__TraceDefinition__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getLeftCurlyBracketKeyword_2_0_0()); }

	'{' 

{ after(grammarAccess.getTraceDefinitionAccess().getLeftCurlyBracketKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceDefinition__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceDefinition__Group_2_0__1__Impl
	rule__TraceDefinition__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getElementsAssignment_2_0_1()); }
(rule__TraceDefinition__ElementsAssignment_2_0_1)
{ after(grammarAccess.getTraceDefinitionAccess().getElementsAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceDefinition__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceDefinition__Group_2_0__2__Impl
	rule__TraceDefinition__Group_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getGroup_2_0_2()); }
(rule__TraceDefinition__Group_2_0_2__0)*
{ after(grammarAccess.getTraceDefinitionAccess().getGroup_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceDefinition__Group_2_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceDefinition__Group_2_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Group_2_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getRightCurlyBracketKeyword_2_0_3()); }

	'}' 

{ after(grammarAccess.getTraceDefinitionAccess().getRightCurlyBracketKeyword_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TraceDefinition__Group_2_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceDefinition__Group_2_0_2__0__Impl
	rule__TraceDefinition__Group_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Group_2_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getSemicolonKeyword_2_0_2_0()); }

	';' 

{ after(grammarAccess.getTraceDefinitionAccess().getSemicolonKeyword_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceDefinition__Group_2_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceDefinition__Group_2_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Group_2_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getElementsAssignment_2_0_2_1()); }
(rule__TraceDefinition__ElementsAssignment_2_0_2_1)
{ after(grammarAccess.getTraceDefinitionAccess().getElementsAssignment_2_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TraceDefinition__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceDefinition__Group_2_1__0__Impl
	rule__TraceDefinition__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getElementsAssignment_2_1_0()); }
(rule__TraceDefinition__ElementsAssignment_2_1_0)
{ after(grammarAccess.getTraceDefinitionAccess().getElementsAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceDefinition__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceDefinition__Group_2_1__1__Impl
	rule__TraceDefinition__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getElementsAssignment_2_1_1()); }
(rule__TraceDefinition__ElementsAssignment_2_1_1)*
{ after(grammarAccess.getTraceDefinitionAccess().getElementsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceDefinition__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceDefinition__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getEndKeyword_2_1_2()); }

	'end' 

{ after(grammarAccess.getTraceDefinitionAccess().getEndKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TraceElementInline__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceElementInline__Group__0__Impl
	rule__TraceElementInline__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceElementInline__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceElementInlineAccess().getNameAssignment_0()); }
(rule__TraceElementInline__NameAssignment_0)
{ after(grammarAccess.getTraceElementInlineAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceElementInline__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceElementInline__Group__1__Impl
	rule__TraceElementInline__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceElementInline__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceElementInlineAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getTraceElementInlineAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceElementInline__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceElementInline__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceElementInline__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceElementInlineAccess().getTypeAssignment_2()); }
(rule__TraceElementInline__TypeAssignment_2)
{ after(grammarAccess.getTraceElementInlineAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TraceElementExpanded__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceElementExpanded__Group__0__Impl
	rule__TraceElementExpanded__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceElementExpanded__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceElementExpandedAccess().getVarKeyword_0()); }

	'var' 

{ after(grammarAccess.getTraceElementExpandedAccess().getVarKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceElementExpanded__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceElementExpanded__Group__1__Impl
	rule__TraceElementExpanded__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceElementExpanded__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceElementExpandedAccess().getNameAssignment_1()); }
(rule__TraceElementExpanded__NameAssignment_1)
{ after(grammarAccess.getTraceElementExpandedAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceElementExpanded__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceElementExpanded__Group__2__Impl
	rule__TraceElementExpanded__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceElementExpanded__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceElementExpandedAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getTraceElementExpandedAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceElementExpanded__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceElementExpanded__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceElementExpanded__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceElementExpandedAccess().getTypeAssignment_3()); }
(rule__TraceElementExpanded__TypeAssignment_3)
{ after(grammarAccess.getTraceElementExpandedAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PotencyAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PotencyAnnotation__Group__0__Impl
	rule__PotencyAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PotencyAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotencyAnnotationAccess().getAlternatives_0()); }
(rule__PotencyAnnotation__Alternatives_0)
{ after(grammarAccess.getPotencyAnnotationAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PotencyAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PotencyAnnotation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PotencyAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotencyAnnotationAccess().getValueAssignment_1()); }
(rule__PotencyAnnotation__ValueAssignment_1)
{ after(grammarAccess.getPotencyAnnotationAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropertyWrite__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyWrite__Group__0__Impl
	rule__PropertyWrite__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyWrite__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyWriteAccess().getReceptorAssignment_0()); }
(rule__PropertyWrite__ReceptorAssignment_0)
{ after(grammarAccess.getPropertyWriteAccess().getReceptorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyWrite__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyWrite__Group__1__Impl
	rule__PropertyWrite__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyWrite__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyWriteAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getPropertyWriteAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyWrite__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyWrite__Group__2__Impl
	rule__PropertyWrite__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyWrite__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyWriteAccess().getPropertyAssignment_2()); }
(rule__PropertyWrite__PropertyAssignment_2)
{ after(grammarAccess.getPropertyWriteAccess().getPropertyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyWrite__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyWrite__Group__3__Impl
	rule__PropertyWrite__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyWrite__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyWriteAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getPropertyWriteAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyWrite__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyWrite__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyWrite__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyWriteAccess().getExpressionAssignment_4()); }
(rule__PropertyWrite__ExpressionAssignment_4)
{ after(grammarAccess.getPropertyWriteAccess().getExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DefineVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineVariable__Group__0__Impl
	rule__DefineVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineVariableAccess().getNameAssignment_0()); }
(rule__DefineVariable__NameAssignment_0)
{ after(grammarAccess.getDefineVariableAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineVariable__Group__1__Impl
	rule__DefineVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineVariableAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getDefineVariableAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefineVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefineVariable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefineVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineVariableAccess().getExpressionAssignment_2()); }
(rule__DefineVariable__ExpressionAssignment_2)
{ after(grammarAccess.getDefineVariableAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ModelReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelReference__Group__0__Impl
	rule__ModelReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelReferenceAccess().getModelAssignment_0()); }
(rule__ModelReference__ModelAssignment_0)
{ after(grammarAccess.getModelReferenceAccess().getModelAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelReference__Group__1__Impl
	rule__ModelReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelReferenceAccess().getExclamationMarkKeyword_1()); }

	'!' 

{ after(grammarAccess.getModelReferenceAccess().getExclamationMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModelReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModelReference__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelReferenceAccess().getClassNameAssignment_2()); }
(rule__ModelReference__ClassNameAssignment_2)
{ after(grammarAccess.getModelReferenceAccess().getClassNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ParenthesizedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group__0__Impl
	rule__ParenthesizedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesizedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group__1__Impl
	rule__ParenthesizedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
{ after(grammarAccess.getParenthesizedExpressionAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesizedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}





























rule__TraceExprLanguage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceExprLanguage__Group__0__Impl
	rule__TraceExprLanguage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceExprLanguage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceExprLanguageAccess().getTraceVarAssignment_0()); }
(rule__TraceExprLanguage__TraceVarAssignment_0)
{ after(grammarAccess.getTraceExprLanguageAccess().getTraceVarAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceExprLanguage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceExprLanguage__Group__1__Impl
	rule__TraceExprLanguage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceExprLanguage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceExprLanguageAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getTraceExprLanguageAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TraceExprLanguage__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TraceExprLanguage__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TraceExprLanguage__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceExprLanguageAccess().getExprAssignment_2()); }
(rule__TraceExprLanguage__ExprAssignment_2)
{ after(grammarAccess.getTraceExprLanguageAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__PutTraceParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PutTraceParameter__Group__0__Impl
	rule__PutTraceParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PutTraceParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPutTraceParameterAccess().getTraceVarAssignment_0()); }
(rule__PutTraceParameter__TraceVarAssignment_0)
{ after(grammarAccess.getPutTraceParameterAccess().getTraceVarAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PutTraceParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PutTraceParameter__Group__1__Impl
	rule__PutTraceParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PutTraceParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPutTraceParameterAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getPutTraceParameterAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PutTraceParameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PutTraceParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PutTraceParameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPutTraceParameterAccess().getValueAssignment_2()); }
(rule__PutTraceParameter__ValueAssignment_2)
{ after(grammarAccess.getPutTraceParameterAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EDouble__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group__0__Impl
	rule__EDouble__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group__1__Impl
	rule__EDouble__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getEDoubleAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EDouble__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EInt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__AttributionTransformation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getAttributionTransformationAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__InModelsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getInModelsTransformationDefinitionParameterParserRuleCall_3_0()); }
	ruleTransformationDefinitionParameter{ after(grammarAccess.getAttributionTransformationAccess().getInModelsTransformationDefinitionParameterParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__InModelsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getInModelsTransformationDefinitionParameterParserRuleCall_4_1_0()); }
	ruleTransformationDefinitionParameter{ after(grammarAccess.getAttributionTransformationAccess().getInModelsTransformationDefinitionParameterParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__OutModelsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getOutModelsTransformationDefinitionParameterParserRuleCall_8_0()); }
	ruleTransformationDefinitionParameter{ after(grammarAccess.getAttributionTransformationAccess().getOutModelsTransformationDefinitionParameterParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__InModelsAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getInModelsTransformationDefinitionParameterParserRuleCall_9_1_0()); }
	ruleTransformationDefinitionParameter{ after(grammarAccess.getAttributionTransformationAccess().getInModelsTransformationDefinitionParameterParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__AnnotationsAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getAnnotationsAnnotationParserRuleCall_11_0()); }
	ruleAnnotation{ after(grammarAccess.getAttributionTransformationAccess().getAnnotationsAnnotationParserRuleCall_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__UsesAssignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getUsesUsesStatementsParserRuleCall_12_0()); }
	ruleUsesStatements{ after(grammarAccess.getAttributionTransformationAccess().getUsesUsesStatementsParserRuleCall_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__AttributesAssignment_13
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getAttributesAttributeDclParserRuleCall_13_0()); }
	ruleAttributeDcl{ after(grammarAccess.getAttributionTransformationAccess().getAttributesAttributeDclParserRuleCall_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionTransformation__RulesAssignment_14
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionTransformationAccess().getRulesAttributionRuleParserRuleCall_14_0()); }
	ruleAttributionRule{ after(grammarAccess.getAttributionTransformationAccess().getRulesAttributionRuleParserRuleCall_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelModelAnnotation__AnnotatedElementAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelModelAnnotationAccess().getAnnotatedElementRepresentModelCrossReference_0_0()); }
(
{ before(grammarAccess.getMetamodelModelAnnotationAccess().getAnnotatedElementRepresentModelIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getMetamodelModelAnnotationAccess().getAnnotatedElementRepresentModelIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getMetamodelModelAnnotationAccess().getAnnotatedElementRepresentModelCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetamodelModelAnnotation__MetamodelAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetamodelModelAnnotationAccess().getMetamodelSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getMetamodelModelAnnotationAccess().getMetamodelSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationDefinitionParameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationDefinitionParameterAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getTransformationDefinitionParameterAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassUse__ModelAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassUseAccess().getModelRepresentModelCrossReference_0_0()); }
(
{ before(grammarAccess.getClassUseAccess().getModelRepresentModelIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getClassUseAccess().getModelRepresentModelIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getClassUseAccess().getModelRepresentModelCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassUse__ClassNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassUseAccess().getClassNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getClassUseAccess().getClassNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UseDeclaration__ModuleAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseDeclarationAccess().getModuleEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getUseDeclarationAccess().getModuleEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UseDeclaration__AsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseDeclarationAccess().getAsEStringParserRuleCall_2_1_0()); }
	ruleEString{ after(grammarAccess.getUseDeclarationAccess().getAsEStringParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InheritedAttributeDcl__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInheritedAttributeDclAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getInheritedAttributeDclAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InheritedAttributeDcl__Type_Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInheritedAttributeDclAccess().getType_ClassUseParserRuleCall_3_0()); }
	ruleClassUse{ after(grammarAccess.getInheritedAttributeDclAccess().getType_ClassUseParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SynthesizedAttributeDcl__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynthesizedAttributeDclAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSynthesizedAttributeDclAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SynthesizedAttributeDcl__Type_Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSynthesizedAttributeDclAccess().getType_ClassUseParserRuleCall_3_0()); }
	ruleClassUse{ after(grammarAccess.getSynthesizedAttributeDclAccess().getType_ClassUseParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionRule__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionRuleAccess().getTypeClassUseParserRuleCall_1_0()); }
	ruleClassUse{ after(grammarAccess.getAttributionRuleAccess().getTypeClassUseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributionRule__StatementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributionRuleAccess().getStatementsStatementParserRuleCall_2_0()); }
	ruleStatement{ after(grammarAccess.getAttributionRuleAccess().getStatementsStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__FormalParametersAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureDeclarationAccess().getFormalParametersClosureParameterParserRuleCall_1_1_0()); }
	ruleClosureParameter{ after(grammarAccess.getClosureDeclarationAccess().getFormalParametersClosureParameterParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__FormalParametersAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureDeclarationAccess().getFormalParametersClosureParameterParserRuleCall_1_2_1_0()); }
	ruleClosureParameter{ after(grammarAccess.getClosureDeclarationAccess().getFormalParametersClosureParameterParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureDeclaration__StatementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureDeclarationAccess().getStatementsClosureStatementParserRuleCall_2_0()); }
	ruleClosureStatement{ after(grammarAccess.getClosureDeclarationAccess().getStatementsClosureStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitiableExpression__MethodNameAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiableExpressionAccess().getMethodNameEStringParserRuleCall_1_1_2_0()); }
	ruleEString{ after(grammarAccess.getInitiableExpressionAccess().getMethodNameEStringParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitiableExpression__WithParametersAssignment_1_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiableExpressionAccess().getWithParametersLeftParenthesisKeyword_1_1_3_0_0()); }
(
{ before(grammarAccess.getInitiableExpressionAccess().getWithParametersLeftParenthesisKeyword_1_1_3_0_0()); }

	'(' 

{ after(grammarAccess.getInitiableExpressionAccess().getWithParametersLeftParenthesisKeyword_1_1_3_0_0()); }
)

{ after(grammarAccess.getInitiableExpressionAccess().getWithParametersLeftParenthesisKeyword_1_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitiableExpression__ParametersAssignment_1_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiableExpressionAccess().getParametersExpressionParserRuleCall_1_1_3_1_0()); }
	ruleExpression{ after(grammarAccess.getInitiableExpressionAccess().getParametersExpressionParserRuleCall_1_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitiableExpression__ParametersAssignment_1_1_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiableExpressionAccess().getParametersExpressionParserRuleCall_1_1_3_2_1_0()); }
	ruleExpression{ after(grammarAccess.getInitiableExpressionAccess().getParametersExpressionParserRuleCall_1_1_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitiableExpression__ParametersAssignment_1_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitiableExpressionAccess().getParametersClosureDeclarationParserRuleCall_1_1_4_0()); }
	ruleClosureDeclaration{ after(grammarAccess.getInitiableExpressionAccess().getParametersClosureDeclarationParserRuleCall_1_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__BinaryOpAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getBinaryOpBinaryOpEnumRuleCall_1_0_1_0()); }
	ruleBinaryOp{ after(grammarAccess.getMethodCallAccess().getBinaryOpBinaryOpEnumRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__RightAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getRightExpressionParserRuleCall_1_0_2_0()); }
	ruleExpression{ after(grammarAccess.getMethodCallAccess().getRightExpressionParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__AttributeAssignment_1_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getAttributeAttributeDclCrossReference_1_1_0_2_0()); }
(
{ before(grammarAccess.getMethodCallAccess().getAttributeAttributeDclIDTerminalRuleCall_1_1_0_2_0_1()); }
	RULE_ID{ after(grammarAccess.getMethodCallAccess().getAttributeAttributeDclIDTerminalRuleCall_1_1_0_2_0_1()); }
)
{ after(grammarAccess.getMethodCallAccess().getAttributeAttributeDclCrossReference_1_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__MethodNameAssignment_1_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getMethodNameEStringParserRuleCall_1_1_1_2_0()); }
	ruleEString{ after(grammarAccess.getMethodCallAccess().getMethodNameEStringParserRuleCall_1_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__WithParametersAssignment_1_1_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getWithParametersLeftParenthesisKeyword_1_1_1_3_0_0()); }
(
{ before(grammarAccess.getMethodCallAccess().getWithParametersLeftParenthesisKeyword_1_1_1_3_0_0()); }

	'(' 

{ after(grammarAccess.getMethodCallAccess().getWithParametersLeftParenthesisKeyword_1_1_1_3_0_0()); }
)

{ after(grammarAccess.getMethodCallAccess().getWithParametersLeftParenthesisKeyword_1_1_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__ParametersAssignment_1_1_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getParametersExpressionParserRuleCall_1_1_1_3_1_0()); }
	ruleExpression{ after(grammarAccess.getMethodCallAccess().getParametersExpressionParserRuleCall_1_1_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__ParametersAssignment_1_1_1_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getParametersExpressionParserRuleCall_1_1_1_3_2_1_0()); }
	ruleExpression{ after(grammarAccess.getMethodCallAccess().getParametersExpressionParserRuleCall_1_1_1_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__ParametersAssignment_1_1_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getParametersClosureDeclarationParserRuleCall_1_1_1_4_0()); }
	ruleClosureDeclaration{ after(grammarAccess.getMethodCallAccess().getParametersClosureDeclarationParserRuleCall_1_1_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__MethodNameAssignment_1_2_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getMethodNameEStringParserRuleCall_1_2_0_2_0()); }
	ruleEString{ after(grammarAccess.getMethodCallAccess().getMethodNameEStringParserRuleCall_1_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__WithParametersAssignment_1_2_0_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getWithParametersLeftParenthesisKeyword_1_2_0_3_0_0()); }
(
{ before(grammarAccess.getMethodCallAccess().getWithParametersLeftParenthesisKeyword_1_2_0_3_0_0()); }

	'(' 

{ after(grammarAccess.getMethodCallAccess().getWithParametersLeftParenthesisKeyword_1_2_0_3_0_0()); }
)

{ after(grammarAccess.getMethodCallAccess().getWithParametersLeftParenthesisKeyword_1_2_0_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__ParametersAssignment_1_2_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getParametersExpressionParserRuleCall_1_2_0_3_1_0()); }
	ruleExpression{ after(grammarAccess.getMethodCallAccess().getParametersExpressionParserRuleCall_1_2_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__ParametersAssignment_1_2_0_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getParametersExpressionParserRuleCall_1_2_0_3_2_1_0()); }
	ruleExpression{ after(grammarAccess.getMethodCallAccess().getParametersExpressionParserRuleCall_1_2_0_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__ParametersAssignment_1_2_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getParametersClosureDeclarationParserRuleCall_1_2_0_4_0()); }
	ruleClosureDeclaration{ after(grammarAccess.getMethodCallAccess().getParametersClosureDeclarationParserRuleCall_1_2_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__AttributeAssignment_1_2_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getAttributeAttributeDclCrossReference_1_2_1_0_2_0()); }
(
{ before(grammarAccess.getMethodCallAccess().getAttributeAttributeDclIDTerminalRuleCall_1_2_1_0_2_0_1()); }
	RULE_ID{ after(grammarAccess.getMethodCallAccess().getAttributeAttributeDclIDTerminalRuleCall_1_2_1_0_2_0_1()); }
)
{ after(grammarAccess.getMethodCallAccess().getAttributeAttributeDclCrossReference_1_2_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__ModuleAssignment_1_2_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getModuleUseDeclarationCrossReference_1_2_1_1_2_0()); }
(
{ before(grammarAccess.getMethodCallAccess().getModuleUseDeclarationIDTerminalRuleCall_1_2_1_1_2_0_1()); }
	RULE_ID{ after(grammarAccess.getMethodCallAccess().getModuleUseDeclarationIDTerminalRuleCall_1_2_1_1_2_0_1()); }
)
{ after(grammarAccess.getMethodCallAccess().getModuleUseDeclarationCrossReference_1_2_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__IsExternalAssignment_1_2_1_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getIsExternalExclamationMarkKeyword_1_2_1_1_3_0()); }
(
{ before(grammarAccess.getMethodCallAccess().getIsExternalExclamationMarkKeyword_1_2_1_1_3_0()); }

	'!' 

{ after(grammarAccess.getMethodCallAccess().getIsExternalExclamationMarkKeyword_1_2_1_1_3_0()); }
)

{ after(grammarAccess.getMethodCallAccess().getIsExternalExclamationMarkKeyword_1_2_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__LinkNameAssignment_1_2_1_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getLinkNameEStringParserRuleCall_1_2_1_1_4_0()); }
	ruleEString{ after(grammarAccess.getMethodCallAccess().getLinkNameEStringParserRuleCall_1_2_1_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodCall__FeatureNameAssignment_1_2_1_1_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodCallAccess().getFeatureNameEStringParserRuleCall_1_2_1_1_5_1_0()); }
	ruleEString{ after(grammarAccess.getMethodCallAccess().getFeatureNameEStringParserRuleCall_1_2_1_1_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeInit__ReceptorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeInitAccess().getReceptorInitiableExpressionParserRuleCall_0_0()); }
	ruleInitiableExpression{ after(grammarAccess.getAttributeInitAccess().getReceptorInitiableExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeInit__AttributeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeInitAccess().getAttributeAttributeDclCrossReference_2_0()); }
(
{ before(grammarAccess.getAttributeInitAccess().getAttributeAttributeDclIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getAttributeInitAccess().getAttributeAttributeDclIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getAttributeInitAccess().getAttributeAttributeDclCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeInit__RightAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeInitAccess().getRightExpressionParserRuleCall_5_0()); }
	ruleExpression{ after(grammarAccess.getAttributeInitAccess().getRightExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__TraceDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getTraceDefinitionAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__ElementsAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getElementsTraceElementInlineParserRuleCall_2_0_1_0()); }
	ruleTraceElementInline{ after(grammarAccess.getTraceDefinitionAccess().getElementsTraceElementInlineParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__ElementsAssignment_2_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getElementsTraceElementInlineParserRuleCall_2_0_2_1_0()); }
	ruleTraceElementInline{ after(grammarAccess.getTraceDefinitionAccess().getElementsTraceElementInlineParserRuleCall_2_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__ElementsAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getElementsTraceElementExpandedParserRuleCall_2_1_0_0()); }
	ruleTraceElementExpanded{ after(grammarAccess.getTraceDefinitionAccess().getElementsTraceElementExpandedParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraceDefinition__ElementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceDefinitionAccess().getElementsTraceElementExpandedParserRuleCall_2_1_1_0()); }
	ruleTraceElementExpanded{ after(grammarAccess.getTraceDefinitionAccess().getElementsTraceElementExpandedParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraceElementInline__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceElementInlineAccess().getNameEStringParserRuleCall_0_0()); }
	ruleEString{ after(grammarAccess.getTraceElementInlineAccess().getNameEStringParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraceElementInline__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceElementInlineAccess().getTypeTypeExpressionParserRuleCall_2_0()); }
	ruleTypeExpression{ after(grammarAccess.getTraceElementInlineAccess().getTypeTypeExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraceElementExpanded__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceElementExpandedAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getTraceElementExpandedAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraceElementExpanded__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceElementExpandedAccess().getTypeTypeExpressionParserRuleCall_3_0()); }
	ruleTypeExpression{ after(grammarAccess.getTraceElementExpandedAccess().getTypeTypeExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PotencyAnnotation__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotencyAnnotationAccess().getValueINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getPotencyAnnotationAccess().getValueINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyWrite__ReceptorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyWriteAccess().getReceptorVariableCrossReference_0_0()); }
(
{ before(grammarAccess.getPropertyWriteAccess().getReceptorVariableIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getPropertyWriteAccess().getReceptorVariableIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getPropertyWriteAccess().getReceptorVariableCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyWrite__PropertyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyWriteAccess().getPropertyIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getPropertyWriteAccess().getPropertyIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyWrite__ExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyWriteAccess().getExpressionExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getPropertyWriteAccess().getExpressionExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefineVariable__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineVariableAccess().getNameEStringParserRuleCall_0_0()); }
	ruleEString{ after(grammarAccess.getDefineVariableAccess().getNameEStringParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefineVariable__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefineVariableAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getDefineVariableAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelReference__ModelAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelReferenceAccess().getModelRepresentModelCrossReference_0_0()); }
(
{ before(grammarAccess.getModelReferenceAccess().getModelRepresentModelIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getModelReferenceAccess().getModelRepresentModelIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getModelReferenceAccess().getModelRepresentModelCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModelReference__ClassNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelReferenceAccess().getClassNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getModelReferenceAccess().getClassNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__VariableAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getVariableVariableCrossReference_0()); }
(
{ before(grammarAccess.getVariableReferenceAccess().getVariableVariableIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getVariableReferenceAccess().getVariableVariableIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getVariableReferenceAccess().getVariableVariableCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClosureParameter__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClosureParameterAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getClosureParameterAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

























rule__TraceExprLanguage__TraceVarAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceExprLanguageAccess().getTraceVarTraceElementCrossReference_0_0()); }
(
{ before(grammarAccess.getTraceExprLanguageAccess().getTraceVarTraceElementIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getTraceExprLanguageAccess().getTraceVarTraceElementIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getTraceExprLanguageAccess().getTraceVarTraceElementCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TraceExprLanguage__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTraceExprLanguageAccess().getExprExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getTraceExprLanguageAccess().getExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__PutTraceParameter__TraceVarAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPutTraceParameterAccess().getTraceVarTraceElementCrossReference_0_0()); }
(
{ before(grammarAccess.getPutTraceParameterAccess().getTraceVarTraceElementIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getPutTraceParameterAccess().getTraceVarTraceElementIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getPutTraceParameterAccess().getTraceVarTraceElementCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PutTraceParameter__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPutTraceParameterAccess().getValueExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getPutTraceParameterAccess().getValueExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumLiteralAccess().getValueEIntParserRuleCall_0()); }
	ruleEInt{ after(grammarAccess.getNumLiteralAccess().getValueEIntParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FloatLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatLiteralAccess().getValueEDoubleParserRuleCall_0()); }
	ruleEDouble{ after(grammarAccess.getFloatLiteralAccess().getValueEDoubleParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueEBooleanParserRuleCall_0()); }
	ruleEBoolean{ after(grammarAccess.getBooleanLiteralAccess().getValueEBooleanParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_KEYWORD_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')* ':';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


