/*
* generated by Xtext
*/
package org.eclectic.frontend.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.eclectic.frontend.services.QoolGrammarAccess;

public class QoolParser extends AbstractContentAssistParser {
	
	@Inject
	private QoolGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.eclectic.frontend.ui.contentassist.antlr.internal.InternalQoolParser createParser() {
		org.eclectic.frontend.ui.contentassist.antlr.internal.InternalQoolParser result = new org.eclectic.frontend.ui.contentassist.antlr.internal.InternalQoolParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getInlineClassAccess().getAlternatives_2(), "rule__InlineClass__Alternatives_2");
					put(grammarAccess.getInlineFeatureExpandedAccess().getAlternatives(), "rule__InlineFeatureExpanded__Alternatives");
					put(grammarAccess.getQoolQueueAccess().getAlternatives(), "rule__QoolQueue__Alternatives");
					put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
					put(grammarAccess.getPrimaryExpressionAccess().getAlternatives(), "rule__PrimaryExpression__Alternatives");
					put(grammarAccess.getInvokeTransformationAccess().getAlternatives(), "rule__InvokeTransformation__Alternatives");
					put(grammarAccess.getInvokeExternalAccess().getAlternatives_10(), "rule__InvokeExternal__Alternatives_10");
					put(grammarAccess.getPredicateAccess().getAlternatives(), "rule__Predicate__Alternatives");
					put(grammarAccess.getCopierCallbackDefinitionAccess().getAlternatives_0(), "rule__CopierCallbackDefinition__Alternatives_0");
					put(grammarAccess.getTraceDefinitionAccess().getAlternatives_2(), "rule__TraceDefinition__Alternatives_2");
					put(grammarAccess.getPotencyAnnotationAccess().getAlternatives_0(), "rule__PotencyAnnotation__Alternatives_0");
					put(grammarAccess.getLiteralAccess().getAlternatives(), "rule__Literal__Alternatives");
					put(grammarAccess.getMethodCallAccess().getAlternatives_1(), "rule__MethodCall__Alternatives_1");
					put(grammarAccess.getWithResolveMethodCallAccess().getAlternatives_1(), "rule__WithResolveMethodCall__Alternatives_1");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
					put(grammarAccess.getBinaryOpAccess().getAlternatives(), "rule__BinaryOp__Alternatives");
					put(grammarAccess.getQoolTransformationAccess().getGroup(), "rule__QoolTransformation__Group__0");
					put(grammarAccess.getQoolTransformationAccess().getGroup_4(), "rule__QoolTransformation__Group_4__0");
					put(grammarAccess.getQoolTransformationAccess().getGroup_8(), "rule__QoolTransformation__Group_8__0");
					put(grammarAccess.getQoolTransformationAccess().getGroup_8_1(), "rule__QoolTransformation__Group_8_1__0");
					put(grammarAccess.getImportedModelAccess().getGroup(), "rule__ImportedModel__Group__0");
					put(grammarAccess.getMetamodelModelAnnotationAccess().getGroup(), "rule__MetamodelModelAnnotation__Group__0");
					put(grammarAccess.getTransformationDefinitionParameterAccess().getGroup(), "rule__TransformationDefinitionParameter__Group__0");
					put(grammarAccess.getInlineModelAccess().getGroup(), "rule__InlineModel__Group__0");
					put(grammarAccess.getInlineClassAccess().getGroup(), "rule__InlineClass__Group__0");
					put(grammarAccess.getInlineClassAccess().getGroup_2_0(), "rule__InlineClass__Group_2_0__0");
					put(grammarAccess.getInlineClassAccess().getGroup_2_0_2(), "rule__InlineClass__Group_2_0_2__0");
					put(grammarAccess.getInlineClassAccess().getGroup_2_1(), "rule__InlineClass__Group_2_1__0");
					put(grammarAccess.getInlineReferenceInlineAccess().getGroup(), "rule__InlineReferenceInline__Group__0");
					put(grammarAccess.getInlineAttributeExpandedAccess().getGroup(), "rule__InlineAttributeExpanded__Group__0");
					put(grammarAccess.getInlineReferenceExpandedAccess().getGroup(), "rule__InlineReferenceExpanded__Group__0");
					put(grammarAccess.getLocalQueueAccess().getGroup(), "rule__LocalQueue__Group__0");
					put(grammarAccess.getLocalQueueAccess().getGroup_5(), "rule__LocalQueue__Group_5__0");
					put(grammarAccess.getModelElementQueueAccess().getGroup(), "rule__ModelElementQueue__Group__0");
					put(grammarAccess.getModelElementQueueAccess().getGroup_5(), "rule__ModelElementQueue__Group_5__0");
					put(grammarAccess.getAccessByFeatureOptimizationAccess().getGroup(), "rule__AccessByFeatureOptimization__Group__0");
					put(grammarAccess.getSegmentAccess().getGroup(), "rule__Segment__Group__0");
					put(grammarAccess.getNamedInvocationParameterAccess().getGroup(), "rule__NamedInvocationParameter__Group__0");
					put(grammarAccess.getInvokeInternalAccess().getGroup(), "rule__InvokeInternal__Group__0");
					put(grammarAccess.getInvokeInternalAccess().getGroup_3(), "rule__InvokeInternal__Group_3__0");
					put(grammarAccess.getInvokeInternalAccess().getGroup_3_1(), "rule__InvokeInternal__Group_3_1__0");
					put(grammarAccess.getInvokeInternalAccess().getGroup_7(), "rule__InvokeInternal__Group_7__0");
					put(grammarAccess.getInvokeInternalAccess().getGroup_7_1(), "rule__InvokeInternal__Group_7_1__0");
					put(grammarAccess.getInvokeInternalAccess().getGroup_9(), "rule__InvokeInternal__Group_9__0");
					put(grammarAccess.getInvokeInternalAccess().getGroup_10(), "rule__InvokeInternal__Group_10__0");
					put(grammarAccess.getInvokeInternalAccess().getGroup_10_4(), "rule__InvokeInternal__Group_10_4__0");
					put(grammarAccess.getInvokeExternalAccess().getGroup(), "rule__InvokeExternal__Group__0");
					put(grammarAccess.getInvokeExternalAccess().getGroup_3(), "rule__InvokeExternal__Group_3__0");
					put(grammarAccess.getInvokeExternalAccess().getGroup_3_1(), "rule__InvokeExternal__Group_3_1__0");
					put(grammarAccess.getInvokeExternalAccess().getGroup_7(), "rule__InvokeExternal__Group_7__0");
					put(grammarAccess.getInvokeExternalAccess().getGroup_7_1(), "rule__InvokeExternal__Group_7_1__0");
					put(grammarAccess.getInvokeExternalAccess().getGroup_9(), "rule__InvokeExternal__Group_9__0");
					put(grammarAccess.getInvokeExternalAccess().getGroup_9_3(), "rule__InvokeExternal__Group_9_3__0");
					put(grammarAccess.getInvokeExternalAccess().getGroup_10_0(), "rule__InvokeExternal__Group_10_0__0");
					put(grammarAccess.getInvokeExternalAccess().getGroup_10_0_4(), "rule__InvokeExternal__Group_10_0_4__0");
					put(grammarAccess.getInvokeExternalAccess().getGroup_10_1(), "rule__InvokeExternal__Group_10_1__0");
					put(grammarAccess.getInvokeExternalAccess().getGroup_10_1_2(), "rule__InvokeExternal__Group_10_1_2__0");
					put(grammarAccess.getInvocationParameterAccess().getGroup(), "rule__InvocationParameter__Group__0");
					put(grammarAccess.getForAllStatementAccess().getGroup(), "rule__ForAllStatement__Group__0");
					put(grammarAccess.getForAllStatementAccess().getGroup_4(), "rule__ForAllStatement__Group_4__0");
					put(grammarAccess.getEmitStatementAccess().getGroup(), "rule__EmitStatement__Group__0");
					put(grammarAccess.getMatchExpressionAccess().getGroup(), "rule__MatchExpression__Group__0");
					put(grammarAccess.getMatchExpressionAccess().getGroup_3(), "rule__MatchExpression__Group_3__0");
					put(grammarAccess.getKindOfPredicateAccess().getGroup(), "rule__KindOfPredicate__Group__0");
					put(grammarAccess.getPropertyEqualsPredicateAccess().getGroup(), "rule__PropertyEqualsPredicate__Group__0");
					put(grammarAccess.getCopierAccess().getGroup(), "rule__Copier__Group__0");
					put(grammarAccess.getCopierAccess().getGroup_3(), "rule__Copier__Group_3__0");
					put(grammarAccess.getCopierAccess().getGroup_7(), "rule__Copier__Group_7__0");
					put(grammarAccess.getCopierAccess().getGroup_7_2(), "rule__Copier__Group_7_2__0");
					put(grammarAccess.getCopierCallbackDefinitionAccess().getGroup(), "rule__CopierCallbackDefinition__Group__0");
					put(grammarAccess.getTraceInterfaceAccess().getGroup(), "rule__TraceInterface__Group__0");
					put(grammarAccess.getTraceDefinitionAccess().getGroup(), "rule__TraceDefinition__Group__0");
					put(grammarAccess.getTraceDefinitionAccess().getGroup_2_0(), "rule__TraceDefinition__Group_2_0__0");
					put(grammarAccess.getTraceDefinitionAccess().getGroup_2_0_2(), "rule__TraceDefinition__Group_2_0_2__0");
					put(grammarAccess.getTraceDefinitionAccess().getGroup_2_1(), "rule__TraceDefinition__Group_2_1__0");
					put(grammarAccess.getTraceElementInlineAccess().getGroup(), "rule__TraceElementInline__Group__0");
					put(grammarAccess.getTraceElementExpandedAccess().getGroup(), "rule__TraceElementExpanded__Group__0");
					put(grammarAccess.getClassUseAccess().getGroup(), "rule__ClassUse__Group__0");
					put(grammarAccess.getPotencyAnnotationAccess().getGroup(), "rule__PotencyAnnotation__Group__0");
					put(grammarAccess.getPropertyWriteAccess().getGroup(), "rule__PropertyWrite__Group__0");
					put(grammarAccess.getDefineVariableAccess().getGroup(), "rule__DefineVariable__Group__0");
					put(grammarAccess.getModelReferenceAccess().getGroup(), "rule__ModelReference__Group__0");
					put(grammarAccess.getParenthesizedExpressionAccess().getGroup(), "rule__ParenthesizedExpression__Group__0");
					put(grammarAccess.getClosureDeclarationAccess().getGroup(), "rule__ClosureDeclaration__Group__0");
					put(grammarAccess.getClosureDeclarationAccess().getGroup_1(), "rule__ClosureDeclaration__Group_1__0");
					put(grammarAccess.getClosureDeclarationAccess().getGroup_1_2(), "rule__ClosureDeclaration__Group_1_2__0");
					put(grammarAccess.getMethodCallAccess().getGroup(), "rule__MethodCall__Group__0");
					put(grammarAccess.getMethodCallAccess().getGroup_1_0(), "rule__MethodCall__Group_1_0__0");
					put(grammarAccess.getMethodCallAccess().getGroup_1_1(), "rule__MethodCall__Group_1_1__0");
					put(grammarAccess.getMethodCallAccess().getGroup_1_1_0(), "rule__MethodCall__Group_1_1_0__0");
					put(grammarAccess.getMethodCallAccess().getGroup_1_1_3(), "rule__MethodCall__Group_1_1_3__0");
					put(grammarAccess.getMethodCallAccess().getGroup_1_1_3_2(), "rule__MethodCall__Group_1_1_3_2__0");
					put(grammarAccess.getWithResolveMethodCallAccess().getGroup(), "rule__WithResolveMethodCall__Group__0");
					put(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_0(), "rule__WithResolveMethodCall__Group_1_0__0");
					put(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1(), "rule__WithResolveMethodCall__Group_1_1__0");
					put(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1_0(), "rule__WithResolveMethodCall__Group_1_1_0__0");
					put(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1_0_2(), "rule__WithResolveMethodCall__Group_1_1_0_2__0");
					put(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1_0_4(), "rule__WithResolveMethodCall__Group_1_1_0_4__0");
					put(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1_1(), "rule__WithResolveMethodCall__Group_1_1_1__0");
					put(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1_1_0(), "rule__WithResolveMethodCall__Group_1_1_1_0__0");
					put(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1_1_3(), "rule__WithResolveMethodCall__Group_1_1_1_3__0");
					put(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_1_1_3_2(), "rule__WithResolveMethodCall__Group_1_1_1_3_2__0");
					put(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2(), "rule__WithResolveMethodCall__Group_1_2__0");
					put(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2_0(), "rule__WithResolveMethodCall__Group_1_2_0__0");
					put(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2_0_0(), "rule__WithResolveMethodCall__Group_1_2_0_0__0");
					put(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2_0_3(), "rule__WithResolveMethodCall__Group_1_2_0_3__0");
					put(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2_0_3_2(), "rule__WithResolveMethodCall__Group_1_2_0_3_2__0");
					put(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2_1(), "rule__WithResolveMethodCall__Group_1_2_1__0");
					put(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2_1_2(), "rule__WithResolveMethodCall__Group_1_2_1_2__0");
					put(grammarAccess.getWithResolveMethodCallAccess().getGroup_1_2_1_4(), "rule__WithResolveMethodCall__Group_1_2_1_4__0");
					put(grammarAccess.getKeywordParameterAccess().getGroup(), "rule__KeywordParameter__Group__0");
					put(grammarAccess.getMatchTraceExpressionAccess().getGroup(), "rule__MatchTraceExpression__Group__0");
					put(grammarAccess.getMatchTraceExpressionAccess().getGroup_1(), "rule__MatchTraceExpression__Group_1__0");
					put(grammarAccess.getTraceExprLanguageAccess().getGroup(), "rule__TraceExprLanguage__Group__0");
					put(grammarAccess.getPutTraceExpressionAccess().getGroup(), "rule__PutTraceExpression__Group__0");
					put(grammarAccess.getPutTraceExpressionAccess().getGroup_1(), "rule__PutTraceExpression__Group_1__0");
					put(grammarAccess.getPutTraceExpressionAccess().getGroup_6(), "rule__PutTraceExpression__Group_6__0");
					put(grammarAccess.getPutTraceParameterAccess().getGroup(), "rule__PutTraceParameter__Group__0");
					put(grammarAccess.getEDoubleAccess().getGroup(), "rule__EDouble__Group__0");
					put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getQoolTransformationAccess().getNameAssignment_1(), "rule__QoolTransformation__NameAssignment_1");
					put(grammarAccess.getQoolTransformationAccess().getInModelsAssignment_3(), "rule__QoolTransformation__InModelsAssignment_3");
					put(grammarAccess.getQoolTransformationAccess().getInModelsAssignment_4_1(), "rule__QoolTransformation__InModelsAssignment_4_1");
					put(grammarAccess.getQoolTransformationAccess().getOutModelsAssignment_8_0(), "rule__QoolTransformation__OutModelsAssignment_8_0");
					put(grammarAccess.getQoolTransformationAccess().getOutModelsAssignment_8_1_1(), "rule__QoolTransformation__OutModelsAssignment_8_1_1");
					put(grammarAccess.getQoolTransformationAccess().getAnnotationsAssignment_10(), "rule__QoolTransformation__AnnotationsAssignment_10");
					put(grammarAccess.getQoolTransformationAccess().getInlineModelsAssignment_11(), "rule__QoolTransformation__InlineModelsAssignment_11");
					put(grammarAccess.getQoolTransformationAccess().getImportedModelsAssignment_12(), "rule__QoolTransformation__ImportedModelsAssignment_12");
					put(grammarAccess.getQoolTransformationAccess().getQueuesAssignment_13(), "rule__QoolTransformation__QueuesAssignment_13");
					put(grammarAccess.getQoolTransformationAccess().getSegmentsAssignment_14(), "rule__QoolTransformation__SegmentsAssignment_14");
					put(grammarAccess.getImportedModelAccess().getNameAssignment_1(), "rule__ImportedModel__NameAssignment_1");
					put(grammarAccess.getMetamodelModelAnnotationAccess().getAnnotatedElementAssignment_0(), "rule__MetamodelModelAnnotation__AnnotatedElementAssignment_0");
					put(grammarAccess.getMetamodelModelAnnotationAccess().getMetamodelAssignment_2(), "rule__MetamodelModelAnnotation__MetamodelAssignment_2");
					put(grammarAccess.getTransformationDefinitionParameterAccess().getNameAssignment_1(), "rule__TransformationDefinitionParameter__NameAssignment_1");
					put(grammarAccess.getInlineModelAccess().getNameAssignment_1(), "rule__InlineModel__NameAssignment_1");
					put(grammarAccess.getInlineModelAccess().getClassesAssignment_2(), "rule__InlineModel__ClassesAssignment_2");
					put(grammarAccess.getInlineClassAccess().getNameAssignment_1(), "rule__InlineClass__NameAssignment_1");
					put(grammarAccess.getInlineClassAccess().getFeaturesAssignment_2_0_1(), "rule__InlineClass__FeaturesAssignment_2_0_1");
					put(grammarAccess.getInlineClassAccess().getFeaturesAssignment_2_0_2_1(), "rule__InlineClass__FeaturesAssignment_2_0_2_1");
					put(grammarAccess.getInlineClassAccess().getFeaturesAssignment_2_1_0(), "rule__InlineClass__FeaturesAssignment_2_1_0");
					put(grammarAccess.getInlineClassAccess().getFeaturesAssignment_2_1_1(), "rule__InlineClass__FeaturesAssignment_2_1_1");
					put(grammarAccess.getInlineReferenceInlineAccess().getNameAssignment_0(), "rule__InlineReferenceInline__NameAssignment_0");
					put(grammarAccess.getInlineReferenceInlineAccess().getTypeAssignment_2(), "rule__InlineReferenceInline__TypeAssignment_2");
					put(grammarAccess.getInlineAttributeExpandedAccess().getNameAssignment_1(), "rule__InlineAttributeExpanded__NameAssignment_1");
					put(grammarAccess.getInlineAttributeExpandedAccess().getTypeAssignment_3(), "rule__InlineAttributeExpanded__TypeAssignment_3");
					put(grammarAccess.getInlineAttributeExpandedAccess().getMultivaluedAssignment_4(), "rule__InlineAttributeExpanded__MultivaluedAssignment_4");
					put(grammarAccess.getInlineReferenceExpandedAccess().getNameAssignment_1(), "rule__InlineReferenceExpanded__NameAssignment_1");
					put(grammarAccess.getInlineReferenceExpandedAccess().getTypeAssignment_3(), "rule__InlineReferenceExpanded__TypeAssignment_3");
					put(grammarAccess.getInlineReferenceExpandedAccess().getMultivaluedAssignment_4(), "rule__InlineReferenceExpanded__MultivaluedAssignment_4");
					put(grammarAccess.getLocalQueueAccess().getNameAssignment_2(), "rule__LocalQueue__NameAssignment_2");
					put(grammarAccess.getLocalQueueAccess().getType_Assignment_4(), "rule__LocalQueue__Type_Assignment_4");
					put(grammarAccess.getLocalQueueAccess().getOptimizationsAssignment_5_1(), "rule__LocalQueue__OptimizationsAssignment_5_1");
					put(grammarAccess.getModelElementQueueAccess().getNameAssignment_2(), "rule__ModelElementQueue__NameAssignment_2");
					put(grammarAccess.getModelElementQueueAccess().getClass_Assignment_4(), "rule__ModelElementQueue__Class_Assignment_4");
					put(grammarAccess.getModelElementQueueAccess().getAdditionalsAssignment_5_1(), "rule__ModelElementQueue__AdditionalsAssignment_5_1");
					put(grammarAccess.getAccessByFeatureOptimizationAccess().getFeatureNameAssignment_1(), "rule__AccessByFeatureOptimization__FeatureNameAssignment_1");
					put(grammarAccess.getAccessByFeatureOptimizationAccess().getForceAssignment_2(), "rule__AccessByFeatureOptimization__ForceAssignment_2");
					put(grammarAccess.getSegmentAccess().getNameAssignment_1(), "rule__Segment__NameAssignment_1");
					put(grammarAccess.getSegmentAccess().getStatementsAssignment_2(), "rule__Segment__StatementsAssignment_2");
					put(grammarAccess.getNamedInvocationParameterAccess().getFormalNameAssignment_0(), "rule__NamedInvocationParameter__FormalNameAssignment_0");
					put(grammarAccess.getNamedInvocationParameterAccess().getActualParameterAssignment_2(), "rule__NamedInvocationParameter__ActualParameterAssignment_2");
					put(grammarAccess.getInvokeInternalAccess().getTransformationNameAssignment_1(), "rule__InvokeInternal__TransformationNameAssignment_1");
					put(grammarAccess.getInvokeInternalAccess().getSourceModelsAssignment_3_0(), "rule__InvokeInternal__SourceModelsAssignment_3_0");
					put(grammarAccess.getInvokeInternalAccess().getSourceModelsAssignment_3_1_1(), "rule__InvokeInternal__SourceModelsAssignment_3_1_1");
					put(grammarAccess.getInvokeInternalAccess().getTargetModelsAssignment_7_0(), "rule__InvokeInternal__TargetModelsAssignment_7_0");
					put(grammarAccess.getInvokeInternalAccess().getTargetModelsAssignment_7_1_1(), "rule__InvokeInternal__TargetModelsAssignment_7_1_1");
					put(grammarAccess.getInvokeInternalAccess().getInputViewFilterAssignment_9_1(), "rule__InvokeInternal__InputViewFilterAssignment_9_1");
					put(grammarAccess.getInvokeInternalAccess().getEntryPointNameAssignment_10_1(), "rule__InvokeInternal__EntryPointNameAssignment_10_1");
					put(grammarAccess.getInvokeInternalAccess().getEntryPointParametersAssignment_10_3(), "rule__InvokeInternal__EntryPointParametersAssignment_10_3");
					put(grammarAccess.getInvokeInternalAccess().getEntryPointParametersAssignment_10_4_1(), "rule__InvokeInternal__EntryPointParametersAssignment_10_4_1");
					put(grammarAccess.getInvokeExternalAccess().getTransformationNameAssignment_1(), "rule__InvokeExternal__TransformationNameAssignment_1");
					put(grammarAccess.getInvokeExternalAccess().getSourceModelsAssignment_3_0(), "rule__InvokeExternal__SourceModelsAssignment_3_0");
					put(grammarAccess.getInvokeExternalAccess().getSourceModelsAssignment_3_1_1(), "rule__InvokeExternal__SourceModelsAssignment_3_1_1");
					put(grammarAccess.getInvokeExternalAccess().getTargetModelsAssignment_7_0(), "rule__InvokeExternal__TargetModelsAssignment_7_0");
					put(grammarAccess.getInvokeExternalAccess().getTargetModelsAssignment_7_1_1(), "rule__InvokeExternal__TargetModelsAssignment_7_1_1");
					put(grammarAccess.getInvokeExternalAccess().getParametersAssignment_9_2(), "rule__InvokeExternal__ParametersAssignment_9_2");
					put(grammarAccess.getInvokeExternalAccess().getParametersAssignment_9_3_1(), "rule__InvokeExternal__ParametersAssignment_9_3_1");
					put(grammarAccess.getInvokeExternalAccess().getEntryPointNameAssignment_10_0_1(), "rule__InvokeExternal__EntryPointNameAssignment_10_0_1");
					put(grammarAccess.getInvokeExternalAccess().getEntryPointParametersAssignment_10_0_3(), "rule__InvokeExternal__EntryPointParametersAssignment_10_0_3");
					put(grammarAccess.getInvokeExternalAccess().getEntryPointParametersAssignment_10_0_4_1(), "rule__InvokeExternal__EntryPointParametersAssignment_10_0_4_1");
					put(grammarAccess.getInvokeExternalAccess().getInputViewFilterAssignment_10_1_1(), "rule__InvokeExternal__InputViewFilterAssignment_10_1_1");
					put(grammarAccess.getInvokeExternalAccess().getOutputResolutionSourceElementAssignment_10_1_2_1(), "rule__InvokeExternal__OutputResolutionSourceElementAssignment_10_1_2_1");
					put(grammarAccess.getInvokeExternalAccess().getQueueNameAssignment_10_1_2_3(), "rule__InvokeExternal__QueueNameAssignment_10_1_2_3");
					put(grammarAccess.getInvokeExternalAccess().getTraceAttributeNameAssignment_10_1_2_5(), "rule__InvokeExternal__TraceAttributeNameAssignment_10_1_2_5");
					put(grammarAccess.getInvocationParameterAccess().getCalleeModelNameAssignment_0(), "rule__InvocationParameter__CalleeModelNameAssignment_0");
					put(grammarAccess.getInvocationParameterAccess().getModelAssignment_2(), "rule__InvocationParameter__ModelAssignment_2");
					put(grammarAccess.getForAllStatementAccess().getNameAssignment_1(), "rule__ForAllStatement__NameAssignment_1");
					put(grammarAccess.getForAllStatementAccess().getQueueAssignment_3(), "rule__ForAllStatement__QueueAssignment_3");
					put(grammarAccess.getForAllStatementAccess().getConditionAssignment_4_1(), "rule__ForAllStatement__ConditionAssignment_4_1");
					put(grammarAccess.getForAllStatementAccess().getStatementsAssignment_5(), "rule__ForAllStatement__StatementsAssignment_5");
					put(grammarAccess.getEmitStatementAccess().getValueAssignment_1(), "rule__EmitStatement__ValueAssignment_1");
					put(grammarAccess.getEmitStatementAccess().getQueueAssignment_3(), "rule__EmitStatement__QueueAssignment_3");
					put(grammarAccess.getMatchExpressionAccess().getQueueAssignment_0(), "rule__MatchExpression__QueueAssignment_0");
					put(grammarAccess.getMatchExpressionAccess().getPredicatesAssignment_2(), "rule__MatchExpression__PredicatesAssignment_2");
					put(grammarAccess.getMatchExpressionAccess().getPredicatesAssignment_3_1(), "rule__MatchExpression__PredicatesAssignment_3_1");
					put(grammarAccess.getKindOfPredicateAccess().getClass_Assignment_2(), "rule__KindOfPredicate__Class_Assignment_2");
					put(grammarAccess.getPropertyEqualsPredicateAccess().getPropertyNameAssignment_2(), "rule__PropertyEqualsPredicate__PropertyNameAssignment_2");
					put(grammarAccess.getPropertyEqualsPredicateAccess().getValueAssignment_4(), "rule__PropertyEqualsPredicate__ValueAssignment_4");
					put(grammarAccess.getCopierAccess().getObjectsAssignment_2(), "rule__Copier__ObjectsAssignment_2");
					put(grammarAccess.getCopierAccess().getObjectsAssignment_3_1(), "rule__Copier__ObjectsAssignment_3_1");
					put(grammarAccess.getCopierAccess().getCopyInModelAssignment_6(), "rule__Copier__CopyInModelAssignment_6");
					put(grammarAccess.getCopierAccess().getCallbacksAssignment_7_1(), "rule__Copier__CallbacksAssignment_7_1");
					put(grammarAccess.getCopierAccess().getCallbacksAssignment_7_2_1(), "rule__Copier__CallbacksAssignment_7_2_1");
					put(grammarAccess.getCopierCallbackDefinitionAccess().getStopAssignment_0_1(), "rule__CopierCallbackDefinition__StopAssignment_0_1");
					put(grammarAccess.getCopierCallbackDefinitionAccess().getTriggerAssignment_1(), "rule__CopierCallbackDefinition__TriggerAssignment_1");
					put(grammarAccess.getCopierCallbackDefinitionAccess().getActionAssignment_3(), "rule__CopierCallbackDefinition__ActionAssignment_3");
					put(grammarAccess.getTraceInterfaceAccess().getNameAssignment_1(), "rule__TraceInterface__NameAssignment_1");
					put(grammarAccess.getTraceInterfaceAccess().getDefinitionsAssignment_2(), "rule__TraceInterface__DefinitionsAssignment_2");
					put(grammarAccess.getTraceDefinitionAccess().getNameAssignment_1(), "rule__TraceDefinition__NameAssignment_1");
					put(grammarAccess.getTraceDefinitionAccess().getElementsAssignment_2_0_1(), "rule__TraceDefinition__ElementsAssignment_2_0_1");
					put(grammarAccess.getTraceDefinitionAccess().getElementsAssignment_2_0_2_1(), "rule__TraceDefinition__ElementsAssignment_2_0_2_1");
					put(grammarAccess.getTraceDefinitionAccess().getElementsAssignment_2_1_0(), "rule__TraceDefinition__ElementsAssignment_2_1_0");
					put(grammarAccess.getTraceDefinitionAccess().getElementsAssignment_2_1_1(), "rule__TraceDefinition__ElementsAssignment_2_1_1");
					put(grammarAccess.getTraceElementInlineAccess().getNameAssignment_0(), "rule__TraceElementInline__NameAssignment_0");
					put(grammarAccess.getTraceElementInlineAccess().getTypeAssignment_2(), "rule__TraceElementInline__TypeAssignment_2");
					put(grammarAccess.getTraceElementExpandedAccess().getNameAssignment_1(), "rule__TraceElementExpanded__NameAssignment_1");
					put(grammarAccess.getTraceElementExpandedAccess().getTypeAssignment_3(), "rule__TraceElementExpanded__TypeAssignment_3");
					put(grammarAccess.getClassUseAccess().getModelAssignment_0(), "rule__ClassUse__ModelAssignment_0");
					put(grammarAccess.getClassUseAccess().getClassNameAssignment_2(), "rule__ClassUse__ClassNameAssignment_2");
					put(grammarAccess.getClassUseAccess().getAnnotationsAssignment_3(), "rule__ClassUse__AnnotationsAssignment_3");
					put(grammarAccess.getClassUseAccess().getStrictTypeAssignment_4(), "rule__ClassUse__StrictTypeAssignment_4");
					put(grammarAccess.getPotencyAnnotationAccess().getValueAssignment_1(), "rule__PotencyAnnotation__ValueAssignment_1");
					put(grammarAccess.getPropertyWriteAccess().getReceptorAssignment_0(), "rule__PropertyWrite__ReceptorAssignment_0");
					put(grammarAccess.getPropertyWriteAccess().getPropertyAssignment_2(), "rule__PropertyWrite__PropertyAssignment_2");
					put(grammarAccess.getPropertyWriteAccess().getExpressionAssignment_4(), "rule__PropertyWrite__ExpressionAssignment_4");
					put(grammarAccess.getDefineVariableAccess().getNameAssignment_0(), "rule__DefineVariable__NameAssignment_0");
					put(grammarAccess.getDefineVariableAccess().getExpressionAssignment_2(), "rule__DefineVariable__ExpressionAssignment_2");
					put(grammarAccess.getModelReferenceAccess().getModelAssignment_0(), "rule__ModelReference__ModelAssignment_0");
					put(grammarAccess.getModelReferenceAccess().getClassNameAssignment_2(), "rule__ModelReference__ClassNameAssignment_2");
					put(grammarAccess.getVariableReferenceAccess().getVariableAssignment(), "rule__VariableReference__VariableAssignment");
					put(grammarAccess.getClosureDeclarationAccess().getFormalParametersAssignment_1_1(), "rule__ClosureDeclaration__FormalParametersAssignment_1_1");
					put(grammarAccess.getClosureDeclarationAccess().getFormalParametersAssignment_1_2_1(), "rule__ClosureDeclaration__FormalParametersAssignment_1_2_1");
					put(grammarAccess.getClosureDeclarationAccess().getStatementsAssignment_2(), "rule__ClosureDeclaration__StatementsAssignment_2");
					put(grammarAccess.getClosureParameterAccess().getNameAssignment(), "rule__ClosureParameter__NameAssignment");
					put(grammarAccess.getMethodCallAccess().getBinaryOpAssignment_1_0_1(), "rule__MethodCall__BinaryOpAssignment_1_0_1");
					put(grammarAccess.getMethodCallAccess().getRightAssignment_1_0_2(), "rule__MethodCall__RightAssignment_1_0_2");
					put(grammarAccess.getMethodCallAccess().getMethodNameAssignment_1_1_2(), "rule__MethodCall__MethodNameAssignment_1_1_2");
					put(grammarAccess.getMethodCallAccess().getWithParametersAssignment_1_1_3_0(), "rule__MethodCall__WithParametersAssignment_1_1_3_0");
					put(grammarAccess.getMethodCallAccess().getParametersAssignment_1_1_3_1(), "rule__MethodCall__ParametersAssignment_1_1_3_1");
					put(grammarAccess.getMethodCallAccess().getParametersAssignment_1_1_3_2_1(), "rule__MethodCall__ParametersAssignment_1_1_3_2_1");
					put(grammarAccess.getMethodCallAccess().getParametersAssignment_1_1_4(), "rule__MethodCall__ParametersAssignment_1_1_4");
					put(grammarAccess.getWithResolveMethodCallAccess().getBinaryOpAssignment_1_0_1(), "rule__WithResolveMethodCall__BinaryOpAssignment_1_0_1");
					put(grammarAccess.getWithResolveMethodCallAccess().getRightAssignment_1_0_2(), "rule__WithResolveMethodCall__RightAssignment_1_0_2");
					put(grammarAccess.getWithResolveMethodCallAccess().getModuleAssignment_1_1_0_2_0(), "rule__WithResolveMethodCall__ModuleAssignment_1_1_0_2_0");
					put(grammarAccess.getWithResolveMethodCallAccess().getIsExternalAssignment_1_1_0_2_1(), "rule__WithResolveMethodCall__IsExternalAssignment_1_1_0_2_1");
					put(grammarAccess.getWithResolveMethodCallAccess().getLinkNameAssignment_1_1_0_3(), "rule__WithResolveMethodCall__LinkNameAssignment_1_1_0_3");
					put(grammarAccess.getWithResolveMethodCallAccess().getFeatureNameAssignment_1_1_0_4_1(), "rule__WithResolveMethodCall__FeatureNameAssignment_1_1_0_4_1");
					put(grammarAccess.getWithResolveMethodCallAccess().getMethodNameAssignment_1_1_1_2(), "rule__WithResolveMethodCall__MethodNameAssignment_1_1_1_2");
					put(grammarAccess.getWithResolveMethodCallAccess().getWithParametersAssignment_1_1_1_3_0(), "rule__WithResolveMethodCall__WithParametersAssignment_1_1_1_3_0");
					put(grammarAccess.getWithResolveMethodCallAccess().getParametersAssignment_1_1_1_3_1(), "rule__WithResolveMethodCall__ParametersAssignment_1_1_1_3_1");
					put(grammarAccess.getWithResolveMethodCallAccess().getParametersAssignment_1_1_1_3_2_1(), "rule__WithResolveMethodCall__ParametersAssignment_1_1_1_3_2_1");
					put(grammarAccess.getWithResolveMethodCallAccess().getParametersAssignment_1_1_1_4(), "rule__WithResolveMethodCall__ParametersAssignment_1_1_1_4");
					put(grammarAccess.getWithResolveMethodCallAccess().getMethodNameAssignment_1_2_0_2(), "rule__WithResolveMethodCall__MethodNameAssignment_1_2_0_2");
					put(grammarAccess.getWithResolveMethodCallAccess().getWithParametersAssignment_1_2_0_3_0(), "rule__WithResolveMethodCall__WithParametersAssignment_1_2_0_3_0");
					put(grammarAccess.getWithResolveMethodCallAccess().getParametersAssignment_1_2_0_3_1(), "rule__WithResolveMethodCall__ParametersAssignment_1_2_0_3_1");
					put(grammarAccess.getWithResolveMethodCallAccess().getParametersAssignment_1_2_0_3_2_1(), "rule__WithResolveMethodCall__ParametersAssignment_1_2_0_3_2_1");
					put(grammarAccess.getWithResolveMethodCallAccess().getParametersAssignment_1_2_0_4(), "rule__WithResolveMethodCall__ParametersAssignment_1_2_0_4");
					put(grammarAccess.getWithResolveMethodCallAccess().getModuleAssignment_1_2_1_2_0(), "rule__WithResolveMethodCall__ModuleAssignment_1_2_1_2_0");
					put(grammarAccess.getWithResolveMethodCallAccess().getIsExternalAssignment_1_2_1_2_1(), "rule__WithResolveMethodCall__IsExternalAssignment_1_2_1_2_1");
					put(grammarAccess.getWithResolveMethodCallAccess().getLinkNameAssignment_1_2_1_3(), "rule__WithResolveMethodCall__LinkNameAssignment_1_2_1_3");
					put(grammarAccess.getWithResolveMethodCallAccess().getFeatureNameAssignment_1_2_1_4_1(), "rule__WithResolveMethodCall__FeatureNameAssignment_1_2_1_4_1");
					put(grammarAccess.getKeywordParameterAccess().getKeywordAssignment_0(), "rule__KeywordParameter__KeywordAssignment_0");
					put(grammarAccess.getKeywordParameterAccess().getValueAssignment_1(), "rule__KeywordParameter__ValueAssignment_1");
					put(grammarAccess.getMatchTraceExpressionAccess().getTraceAssignment_2(), "rule__MatchTraceExpression__TraceAssignment_2");
					put(grammarAccess.getMatchTraceExpressionAccess().getTraceExprAssignment_5(), "rule__MatchTraceExpression__TraceExprAssignment_5");
					put(grammarAccess.getTraceExprLanguageAccess().getTraceVarAssignment_0(), "rule__TraceExprLanguage__TraceVarAssignment_0");
					put(grammarAccess.getTraceExprLanguageAccess().getExprAssignment_2(), "rule__TraceExprLanguage__ExprAssignment_2");
					put(grammarAccess.getPutTraceExpressionAccess().getTraceAssignment_2(), "rule__PutTraceExpression__TraceAssignment_2");
					put(grammarAccess.getPutTraceExpressionAccess().getParametersAssignment_5(), "rule__PutTraceExpression__ParametersAssignment_5");
					put(grammarAccess.getPutTraceExpressionAccess().getParametersAssignment_6_1(), "rule__PutTraceExpression__ParametersAssignment_6_1");
					put(grammarAccess.getPutTraceParameterAccess().getTraceVarAssignment_0(), "rule__PutTraceParameter__TraceVarAssignment_0");
					put(grammarAccess.getPutTraceParameterAccess().getValueAssignment_2(), "rule__PutTraceParameter__ValueAssignment_2");
					put(grammarAccess.getNumLiteralAccess().getValueAssignment(), "rule__NumLiteral__ValueAssignment");
					put(grammarAccess.getFloatLiteralAccess().getValueAssignment(), "rule__FloatLiteral__ValueAssignment");
					put(grammarAccess.getStringLiteralAccess().getValueAssignment(), "rule__StringLiteral__ValueAssignment");
					put(grammarAccess.getBooleanLiteralAccess().getValueAssignment(), "rule__BooleanLiteral__ValueAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.eclectic.frontend.ui.contentassist.antlr.internal.InternalQoolParser typedParser = (org.eclectic.frontend.ui.contentassist.antlr.internal.InternalQoolParser) parser;
			typedParser.entryRuleQoolTransformation();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public QoolGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(QoolGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
