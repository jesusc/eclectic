/*
* generated by Xtext
*/
grammar InternalChain;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.eclectic.frontend.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclectic.frontend.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclectic.frontend.services.ChainGrammarAccess;

}

@parser::members {
 
 	private ChainGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ChainGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleMappingTransformation
entryRuleMappingTransformation 
:
{ before(grammarAccess.getMappingTransformationRule()); }
	 ruleMappingTransformation
{ after(grammarAccess.getMappingTransformationRule()); } 
	 EOF 
;

// Rule MappingTransformation
ruleMappingTransformation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMappingTransformationAccess().getGroup()); }
(rule__MappingTransformation__Group__0)
{ after(grammarAccess.getMappingTransformationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransformationDefinitionParameter
entryRuleTransformationDefinitionParameter 
:
{ before(grammarAccess.getTransformationDefinitionParameterRule()); }
	 ruleTransformationDefinitionParameter
{ after(grammarAccess.getTransformationDefinitionParameterRule()); } 
	 EOF 
;

// Rule TransformationDefinitionParameter
ruleTransformationDefinitionParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransformationDefinitionParameterAccess().getGroup()); }
(rule__TransformationDefinitionParameter__Group__0)
{ after(grammarAccess.getTransformationDefinitionParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompositeTransformation
entryRuleCompositeTransformation 
:
{ before(grammarAccess.getCompositeTransformationRule()); }
	 ruleCompositeTransformation
{ after(grammarAccess.getCompositeTransformationRule()); } 
	 EOF 
;

// Rule CompositeTransformation
ruleCompositeTransformation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompositeTransformationAccess().getGroup()); }
(rule__CompositeTransformation__Group__0)
{ after(grammarAccess.getCompositeTransformationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransformationExecution
entryRuleTransformationExecution 
:
{ before(grammarAccess.getTransformationExecutionRule()); }
	 ruleTransformationExecution
{ after(grammarAccess.getTransformationExecutionRule()); } 
	 EOF 
;

// Rule TransformationExecution
ruleTransformationExecution
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransformationExecutionAccess().getGroup()); }
(rule__TransformationExecution__Group__0)
{ after(grammarAccess.getTransformationExecutionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExternalTransformation
entryRuleExternalTransformation 
:
{ before(grammarAccess.getExternalTransformationRule()); }
	 ruleExternalTransformation
{ after(grammarAccess.getExternalTransformationRule()); } 
	 EOF 
;

// Rule ExternalTransformation
ruleExternalTransformation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExternalTransformationAccess().getGroup()); }
(rule__ExternalTransformation__Group__0)
{ after(grammarAccess.getExternalTransformationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__MappingTransformation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__0__Impl
	rule__MappingTransformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getChainKeyword_0()); }

	'chain' 

{ after(grammarAccess.getMappingTransformationAccess().getChainKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__1__Impl
	rule__MappingTransformation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getNameAssignment_1()); }
(rule__MappingTransformation__NameAssignment_1)
{ after(grammarAccess.getMappingTransformationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__2__Impl
	rule__MappingTransformation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getMappingTransformationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__3__Impl
	rule__MappingTransformation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getInModelsAssignment_3()); }
(rule__MappingTransformation__InModelsAssignment_3)?
{ after(grammarAccess.getMappingTransformationAccess().getInModelsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__4__Impl
	rule__MappingTransformation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getGroup_4()); }
(rule__MappingTransformation__Group_4__0)*
{ after(grammarAccess.getMappingTransformationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__5__Impl
	rule__MappingTransformation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getMappingTransformationAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__6__Impl
	rule__MappingTransformation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getHyphenMinusGreaterThanSignKeyword_6()); }

	'->' 

{ after(grammarAccess.getMappingTransformationAccess().getHyphenMinusGreaterThanSignKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__7__Impl
	rule__MappingTransformation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getLeftParenthesisKeyword_7()); }

	'(' 

{ after(grammarAccess.getMappingTransformationAccess().getLeftParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__8__Impl
	rule__MappingTransformation__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getOutModelsAssignment_8()); }
(rule__MappingTransformation__OutModelsAssignment_8)?
{ after(grammarAccess.getMappingTransformationAccess().getOutModelsAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__9__Impl
	rule__MappingTransformation__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getGroup_9()); }
(rule__MappingTransformation__Group_9__0)*
{ after(grammarAccess.getMappingTransformationAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__10__Impl
	rule__MappingTransformation__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getRightParenthesisKeyword_10()); }

	')' 

{ after(grammarAccess.getMappingTransformationAccess().getRightParenthesisKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__11__Impl
	rule__MappingTransformation__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getExternalsAssignment_11()); }
(rule__MappingTransformation__ExternalsAssignment_11)*
{ after(grammarAccess.getMappingTransformationAccess().getExternalsAssignment_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__12__Impl
	rule__MappingTransformation__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getCompositesAssignment_12()); }
(rule__MappingTransformation__CompositesAssignment_12)*
{ after(grammarAccess.getMappingTransformationAccess().getCompositesAssignment_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__13__Impl
	rule__MappingTransformation__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMappingTransformationAccess().getExecutionsAssignment_13()); }
(rule__MappingTransformation__ExecutionsAssignment_13)
{ after(grammarAccess.getMappingTransformationAccess().getExecutionsAssignment_13()); }
)
(
{ before(grammarAccess.getMappingTransformationAccess().getExecutionsAssignment_13()); }
(rule__MappingTransformation__ExecutionsAssignment_13)*
{ after(grammarAccess.getMappingTransformationAccess().getExecutionsAssignment_13()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group__14__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getEndKeyword_14()); }

	'end' 

{ after(grammarAccess.getMappingTransformationAccess().getEndKeyword_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}
































rule__MappingTransformation__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group_4__0__Impl
	rule__MappingTransformation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getMappingTransformationAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getInModelsAssignment_4_1()); }
(rule__MappingTransformation__InModelsAssignment_4_1)
{ after(grammarAccess.getMappingTransformationAccess().getInModelsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MappingTransformation__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group_9__0__Impl
	rule__MappingTransformation__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getCommaKeyword_9_0()); }

	',' 

{ after(grammarAccess.getMappingTransformationAccess().getCommaKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MappingTransformation__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MappingTransformation__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getOutModelsAssignment_9_1()); }
(rule__MappingTransformation__OutModelsAssignment_9_1)
{ after(grammarAccess.getMappingTransformationAccess().getOutModelsAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TransformationDefinitionParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransformationDefinitionParameter__Group__0__Impl
	rule__TransformationDefinitionParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationDefinitionParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationDefinitionParameterAccess().getTransformationDefinitionParameterAction_0()); }
(

)
{ after(grammarAccess.getTransformationDefinitionParameterAccess().getTransformationDefinitionParameterAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationDefinitionParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransformationDefinitionParameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationDefinitionParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationDefinitionParameterAccess().getNameAssignment_1()); }
(rule__TransformationDefinitionParameter__NameAssignment_1)
{ after(grammarAccess.getTransformationDefinitionParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompositeTransformation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeTransformation__Group__0__Impl
	rule__CompositeTransformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeTransformation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeTransformationAccess().getCompositeKeyword_0()); }

	'composite' 

{ after(grammarAccess.getCompositeTransformationAccess().getCompositeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeTransformation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeTransformation__Group__1__Impl
	rule__CompositeTransformation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeTransformation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeTransformationAccess().getNameAssignment_1()); }
(rule__CompositeTransformation__NameAssignment_1)
{ after(grammarAccess.getCompositeTransformationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeTransformation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeTransformation__Group__2__Impl
	rule__CompositeTransformation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeTransformation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeTransformationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getCompositeTransformationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeTransformation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeTransformation__Group__3__Impl
	rule__CompositeTransformation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeTransformation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeTransformationAccess().getInModelsAssignment_3()); }
(rule__CompositeTransformation__InModelsAssignment_3)?
{ after(grammarAccess.getCompositeTransformationAccess().getInModelsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeTransformation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeTransformation__Group__4__Impl
	rule__CompositeTransformation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeTransformation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeTransformationAccess().getGroup_4()); }
(rule__CompositeTransformation__Group_4__0)*
{ after(grammarAccess.getCompositeTransformationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeTransformation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeTransformation__Group__5__Impl
	rule__CompositeTransformation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeTransformation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeTransformationAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getCompositeTransformationAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeTransformation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeTransformation__Group__6__Impl
	rule__CompositeTransformation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeTransformation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeTransformationAccess().getHyphenMinusGreaterThanSignKeyword_6()); }

	'->' 

{ after(grammarAccess.getCompositeTransformationAccess().getHyphenMinusGreaterThanSignKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeTransformation__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeTransformation__Group__7__Impl
	rule__CompositeTransformation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeTransformation__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeTransformationAccess().getLeftParenthesisKeyword_7()); }

	'(' 

{ after(grammarAccess.getCompositeTransformationAccess().getLeftParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeTransformation__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeTransformation__Group__8__Impl
	rule__CompositeTransformation__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeTransformation__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeTransformationAccess().getOutModelsAssignment_8()); }
(rule__CompositeTransformation__OutModelsAssignment_8)?
{ after(grammarAccess.getCompositeTransformationAccess().getOutModelsAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeTransformation__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeTransformation__Group__9__Impl
	rule__CompositeTransformation__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeTransformation__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeTransformationAccess().getGroup_9()); }
(rule__CompositeTransformation__Group_9__0)*
{ after(grammarAccess.getCompositeTransformationAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeTransformation__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeTransformation__Group__10__Impl
	rule__CompositeTransformation__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeTransformation__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeTransformationAccess().getRightParenthesisKeyword_10()); }

	')' 

{ after(grammarAccess.getCompositeTransformationAccess().getRightParenthesisKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeTransformation__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeTransformation__Group__11__Impl
	rule__CompositeTransformation__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeTransformation__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getCompositeTransformationAccess().getExecutionsAssignment_11()); }
(rule__CompositeTransformation__ExecutionsAssignment_11)
{ after(grammarAccess.getCompositeTransformationAccess().getExecutionsAssignment_11()); }
)
(
{ before(grammarAccess.getCompositeTransformationAccess().getExecutionsAssignment_11()); }
(rule__CompositeTransformation__ExecutionsAssignment_11)*
{ after(grammarAccess.getCompositeTransformationAccess().getExecutionsAssignment_11()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeTransformation__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeTransformation__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeTransformation__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeTransformationAccess().getEndKeyword_12()); }

	'end' 

{ after(grammarAccess.getCompositeTransformationAccess().getEndKeyword_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__CompositeTransformation__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeTransformation__Group_4__0__Impl
	rule__CompositeTransformation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeTransformation__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeTransformationAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getCompositeTransformationAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeTransformation__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeTransformation__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeTransformation__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeTransformationAccess().getInModelsAssignment_4_1()); }
(rule__CompositeTransformation__InModelsAssignment_4_1)
{ after(grammarAccess.getCompositeTransformationAccess().getInModelsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompositeTransformation__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeTransformation__Group_9__0__Impl
	rule__CompositeTransformation__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeTransformation__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeTransformationAccess().getCommaKeyword_9_0()); }

	',' 

{ after(grammarAccess.getCompositeTransformationAccess().getCommaKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeTransformation__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeTransformation__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeTransformation__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeTransformationAccess().getOutModelsAssignment_9_1()); }
(rule__CompositeTransformation__OutModelsAssignment_9_1)
{ after(grammarAccess.getCompositeTransformationAccess().getOutModelsAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TransformationExecution__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransformationExecution__Group__0__Impl
	rule__TransformationExecution__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationExecution__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationExecutionAccess().getOutputModelsAssignment_0()); }
(rule__TransformationExecution__OutputModelsAssignment_0)
{ after(grammarAccess.getTransformationExecutionAccess().getOutputModelsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationExecution__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransformationExecution__Group__1__Impl
	rule__TransformationExecution__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationExecution__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationExecutionAccess().getGroup_1()); }
(rule__TransformationExecution__Group_1__0)*
{ after(grammarAccess.getTransformationExecutionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationExecution__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransformationExecution__Group__2__Impl
	rule__TransformationExecution__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationExecution__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationExecutionAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getTransformationExecutionAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationExecution__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransformationExecution__Group__3__Impl
	rule__TransformationExecution__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationExecution__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationExecutionAccess().getTransformationAssignment_3()); }
(rule__TransformationExecution__TransformationAssignment_3)
{ after(grammarAccess.getTransformationExecutionAccess().getTransformationAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationExecution__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransformationExecution__Group__4__Impl
	rule__TransformationExecution__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationExecution__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationExecutionAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getTransformationExecutionAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationExecution__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransformationExecution__Group__5__Impl
	rule__TransformationExecution__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationExecution__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationExecutionAccess().getInputModelsAssignment_5()); }
(rule__TransformationExecution__InputModelsAssignment_5)
{ after(grammarAccess.getTransformationExecutionAccess().getInputModelsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationExecution__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransformationExecution__Group__6__Impl
	rule__TransformationExecution__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationExecution__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationExecutionAccess().getGroup_6()); }
(rule__TransformationExecution__Group_6__0)*
{ after(grammarAccess.getTransformationExecutionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationExecution__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransformationExecution__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationExecution__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationExecutionAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getTransformationExecutionAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__TransformationExecution__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransformationExecution__Group_1__0__Impl
	rule__TransformationExecution__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationExecution__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationExecutionAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getTransformationExecutionAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationExecution__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransformationExecution__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationExecution__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationExecutionAccess().getOutputModelsAssignment_1_1()); }
(rule__TransformationExecution__OutputModelsAssignment_1_1)
{ after(grammarAccess.getTransformationExecutionAccess().getOutputModelsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TransformationExecution__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransformationExecution__Group_6__0__Impl
	rule__TransformationExecution__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationExecution__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationExecutionAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getTransformationExecutionAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationExecution__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransformationExecution__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationExecution__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationExecutionAccess().getInputModelsAssignment_6_1()); }
(rule__TransformationExecution__InputModelsAssignment_6_1)
{ after(grammarAccess.getTransformationExecutionAccess().getInputModelsAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExternalTransformation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalTransformation__Group__0__Impl
	rule__ExternalTransformation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalTransformation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalTransformationAccess().getExternalKeyword_0()); }

	'external' 

{ after(grammarAccess.getExternalTransformationAccess().getExternalKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalTransformation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalTransformation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalTransformation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalTransformationAccess().getNameAssignment_1()); }
(rule__ExternalTransformation__NameAssignment_1)
{ after(grammarAccess.getExternalTransformationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MappingTransformation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getMappingTransformationAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__InModelsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getInModelsTransformationDefinitionParameterParserRuleCall_3_0()); }
	ruleTransformationDefinitionParameter{ after(grammarAccess.getMappingTransformationAccess().getInModelsTransformationDefinitionParameterParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__InModelsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getInModelsTransformationDefinitionParameterParserRuleCall_4_1_0()); }
	ruleTransformationDefinitionParameter{ after(grammarAccess.getMappingTransformationAccess().getInModelsTransformationDefinitionParameterParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__OutModelsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getOutModelsTransformationDefinitionParameterParserRuleCall_8_0()); }
	ruleTransformationDefinitionParameter{ after(grammarAccess.getMappingTransformationAccess().getOutModelsTransformationDefinitionParameterParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__OutModelsAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getOutModelsTransformationDefinitionParameterParserRuleCall_9_1_0()); }
	ruleTransformationDefinitionParameter{ after(grammarAccess.getMappingTransformationAccess().getOutModelsTransformationDefinitionParameterParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__ExternalsAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getExternalsExternalTransformationParserRuleCall_11_0()); }
	ruleExternalTransformation{ after(grammarAccess.getMappingTransformationAccess().getExternalsExternalTransformationParserRuleCall_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__CompositesAssignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getCompositesCompositeTransformationParserRuleCall_12_0()); }
	ruleCompositeTransformation{ after(grammarAccess.getMappingTransformationAccess().getCompositesCompositeTransformationParserRuleCall_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MappingTransformation__ExecutionsAssignment_13
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingTransformationAccess().getExecutionsTransformationExecutionParserRuleCall_13_0()); }
	ruleTransformationExecution{ after(grammarAccess.getMappingTransformationAccess().getExecutionsTransformationExecutionParserRuleCall_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationDefinitionParameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationDefinitionParameterAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getTransformationDefinitionParameterAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeTransformation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeTransformationAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getCompositeTransformationAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeTransformation__InModelsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeTransformationAccess().getInModelsTransformationDefinitionParameterParserRuleCall_3_0()); }
	ruleTransformationDefinitionParameter{ after(grammarAccess.getCompositeTransformationAccess().getInModelsTransformationDefinitionParameterParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeTransformation__InModelsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeTransformationAccess().getInModelsTransformationDefinitionParameterParserRuleCall_4_1_0()); }
	ruleTransformationDefinitionParameter{ after(grammarAccess.getCompositeTransformationAccess().getInModelsTransformationDefinitionParameterParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeTransformation__OutModelsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeTransformationAccess().getOutModelsTransformationDefinitionParameterParserRuleCall_8_0()); }
	ruleTransformationDefinitionParameter{ after(grammarAccess.getCompositeTransformationAccess().getOutModelsTransformationDefinitionParameterParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeTransformation__OutModelsAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeTransformationAccess().getOutModelsTransformationDefinitionParameterParserRuleCall_9_1_0()); }
	ruleTransformationDefinitionParameter{ after(grammarAccess.getCompositeTransformationAccess().getOutModelsTransformationDefinitionParameterParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeTransformation__ExecutionsAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeTransformationAccess().getExecutionsTransformationExecutionParserRuleCall_11_0()); }
	ruleTransformationExecution{ after(grammarAccess.getCompositeTransformationAccess().getExecutionsTransformationExecutionParserRuleCall_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationExecution__OutputModelsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationExecutionAccess().getOutputModelsRepresentModelCrossReference_0_0()); }
(
{ before(grammarAccess.getTransformationExecutionAccess().getOutputModelsRepresentModelIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getTransformationExecutionAccess().getOutputModelsRepresentModelIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getTransformationExecutionAccess().getOutputModelsRepresentModelCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationExecution__OutputModelsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationExecutionAccess().getOutputModelsRepresentModelCrossReference_1_1_0()); }
(
{ before(grammarAccess.getTransformationExecutionAccess().getOutputModelsRepresentModelIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTransformationExecutionAccess().getOutputModelsRepresentModelIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getTransformationExecutionAccess().getOutputModelsRepresentModelCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationExecution__TransformationAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationExecutionAccess().getTransformationAvailableTransformationCrossReference_3_0()); }
(
{ before(grammarAccess.getTransformationExecutionAccess().getTransformationAvailableTransformationIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getTransformationExecutionAccess().getTransformationAvailableTransformationIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getTransformationExecutionAccess().getTransformationAvailableTransformationCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationExecution__InputModelsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationExecutionAccess().getInputModelsRepresentModelCrossReference_5_0()); }
(
{ before(grammarAccess.getTransformationExecutionAccess().getInputModelsRepresentModelIDTerminalRuleCall_5_0_1()); }
	RULE_ID{ after(grammarAccess.getTransformationExecutionAccess().getInputModelsRepresentModelIDTerminalRuleCall_5_0_1()); }
)
{ after(grammarAccess.getTransformationExecutionAccess().getInputModelsRepresentModelCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationExecution__InputModelsAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransformationExecutionAccess().getInputModelsRepresentModelCrossReference_6_1_0()); }
(
{ before(grammarAccess.getTransformationExecutionAccess().getInputModelsRepresentModelIDTerminalRuleCall_6_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTransformationExecutionAccess().getInputModelsRepresentModelIDTerminalRuleCall_6_1_0_1()); }
)
{ after(grammarAccess.getTransformationExecutionAccess().getInputModelsRepresentModelCrossReference_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalTransformation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalTransformationAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getExternalTransformationAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


