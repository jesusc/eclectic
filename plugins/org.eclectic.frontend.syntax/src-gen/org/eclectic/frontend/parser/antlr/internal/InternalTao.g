/*
* generated by Xtext
*/
grammar InternalTao;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.eclectic.frontend.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclectic.frontend.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclectic.frontend.services.TaoGrammarAccess;

}

@parser::members {

 	private TaoGrammarAccess grammarAccess;
 	
    public InternalTaoParser(TokenStream input, TaoGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "TaoTransformation";	
   	}
   	
   	@Override
   	protected TaoGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleTaoTransformation
entryRuleTaoTransformation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTaoTransformationRule()); }
	 iv_ruleTaoTransformation=ruleTaoTransformation 
	 { $current=$iv_ruleTaoTransformation.current; } 
	 EOF 
;

// Rule TaoTransformation
ruleTaoTransformation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='tao' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTaoTransformationAccess().getTaoKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaoTransformationAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaoTransformationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTaoTransformationAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaoTransformationAccess().getInModelsTransformationDefinitionParameterParserRuleCall_3_0()); 
	    }
		lv_inModels_3_0=ruleTransformationDefinitionParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaoTransformationRule());
	        }
       		add(
       			$current, 
       			"inModels",
        		lv_inModels_3_0, 
        		"TransformationDefinitionParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTaoTransformationAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaoTransformationAccess().getInModelsTransformationDefinitionParameterParserRuleCall_4_1_0()); 
	    }
		lv_inModels_5_0=ruleTransformationDefinitionParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaoTransformationRule());
	        }
       		add(
       			$current, 
       			"inModels",
        		lv_inModels_5_0, 
        		"TransformationDefinitionParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTaoTransformationAccess().getRightParenthesisKeyword_5());
    }
	otherlv_7='->' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTaoTransformationAccess().getHyphenMinusGreaterThanSignKeyword_6());
    }
	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTaoTransformationAccess().getLeftParenthesisKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaoTransformationAccess().getOutModelsTransformationDefinitionParameterParserRuleCall_8_0()); 
	    }
		lv_outModels_9_0=ruleTransformationDefinitionParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaoTransformationRule());
	        }
       		add(
       			$current, 
       			"outModels",
        		lv_outModels_9_0, 
        		"TransformationDefinitionParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getTaoTransformationAccess().getCommaKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaoTransformationAccess().getOutModelsTransformationDefinitionParameterParserRuleCall_9_1_0()); 
	    }
		lv_outModels_11_0=ruleTransformationDefinitionParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaoTransformationRule());
	        }
       		add(
       			$current, 
       			"outModels",
        		lv_outModels_11_0, 
        		"TransformationDefinitionParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getTaoTransformationAccess().getRightParenthesisKeyword_10());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaoTransformationAccess().getUsesUsesStatementsParserRuleCall_11_0()); 
	    }
		lv_uses_13_0=ruleUsesStatements		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaoTransformationRule());
	        }
       		add(
       			$current, 
       			"uses",
        		lv_uses_13_0, 
        		"UsesStatements");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getTaoTransformationAccess().getTemplatesTemplateParserRuleCall_12_0()); 
	    }
		lv_templates_14_0=ruleTemplate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaoTransformationRule());
	        }
       		add(
       			$current, 
       			"templates",
        		lv_templates_14_0, 
        		"Template");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleUsesStatements
entryRuleUsesStatements returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUsesStatementsRule()); }
	 iv_ruleUsesStatements=ruleUsesStatements 
	 { $current=$iv_ruleUsesStatements.current; } 
	 EOF 
;

// Rule UsesStatements
ruleUsesStatements returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getUsesStatementsAccess().getUseDeclarationParserRuleCall()); 
    }
    this_UseDeclaration_0=ruleUseDeclaration
    { 
        $current = $this_UseDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleUseDeclaration
entryRuleUseDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUseDeclarationRule()); }
	 iv_ruleUseDeclaration=ruleUseDeclaration 
	 { $current=$iv_ruleUseDeclaration.current; } 
	 EOF 
;

// Rule UseDeclaration
ruleUseDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='uses' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUseDeclarationAccess().getUsesKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUseDeclarationAccess().getModuleEStringParserRuleCall_1_0()); 
	    }
		lv_module_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUseDeclarationRule());
	        }
       		set(
       			$current, 
       			"module",
        		lv_module_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUseDeclarationAccess().getAsKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUseDeclarationAccess().getAsEStringParserRuleCall_2_1_0()); 
	    }
		lv_as_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUseDeclarationRule());
	        }
       		set(
       			$current, 
       			"as",
        		lv_as_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleTransformationDefinitionParameter
entryRuleTransformationDefinitionParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransformationDefinitionParameterRule()); }
	 iv_ruleTransformationDefinitionParameter=ruleTransformationDefinitionParameter 
	 { $current=$iv_ruleTransformationDefinitionParameter.current; } 
	 EOF 
;

// Rule TransformationDefinitionParameter
ruleTransformationDefinitionParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTransformationDefinitionParameterAccess().getTransformationDefinitionParameterAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTransformationDefinitionParameterAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransformationDefinitionParameterRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleClassUse
entryRuleClassUse returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassUseRule()); }
	 iv_ruleClassUse=ruleClassUse 
	 { $current=$iv_ruleClassUse.current; } 
	 EOF 
;

// Rule ClassUse
ruleClassUse returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassUseRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getClassUseAccess().getModelRepresentModelCrossReference_0_0()); 
	}

)
)	otherlv_1='!' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getClassUseAccess().getExclamationMarkKeyword_1());
    }
(
(
		lv_className_2_0=RULE_ID
		{
			newLeafNode(lv_className_2_0, grammarAccess.getClassUseAccess().getClassNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassUseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"className",
        		lv_className_2_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleTemplate
entryRuleTemplate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateRule()); }
	 iv_ruleTemplate=ruleTemplate 
	 { $current=$iv_ruleTemplate.current; } 
	 EOF 
;

// Rule Template
ruleTemplate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='template' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTemplateAccess().getTemplateKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTemplateAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTemplateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTemplateAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateAccess().getParametersTemplateParameterParserRuleCall_3_0()); 
	    }
		lv_parameters_3_0=ruleTemplateParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_3_0, 
        		"TemplateParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTemplateAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateAccess().getParametersTemplateParameterParserRuleCall_4_1_0()); 
	    }
		lv_parameters_5_0=ruleTemplateParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_5_0, 
        		"TemplateParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTemplateAccess().getRightParenthesisKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateAccess().getRootsTemplateRootObjectParserRuleCall_6_0()); 
	    }
		lv_roots_7_0=ruleTemplateRootObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateRule());
	        }
       		add(
       			$current, 
       			"roots",
        		lv_roots_7_0, 
        		"TemplateRootObject");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='end' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTemplateAccess().getEndKeyword_7());
    }
)
;





// Entry rule entryRuleTemplateParameter
entryRuleTemplateParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateParameterRule()); }
	 iv_ruleTemplateParameter=ruleTemplateParameter 
	 { $current=$iv_ruleTemplateParameter.current; } 
	 EOF 
;

// Rule TemplateParameter
ruleTemplateParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getTemplateParameterAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTemplateParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTemplateParameterAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateParameterAccess().getTypeClassUseParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleClassUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateParameterRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"ClassUse");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	 iv_ruleStatement=ruleStatement 
	 { $current=$iv_ruleStatement.current; } 
	 EOF 
;

// Rule Statement
ruleStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getStatementAccess().getDefineVariableParserRuleCall()); 
    }
    this_DefineVariable_0=ruleDefineVariable
    { 
        $current = $this_DefineVariable_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getWithResolveMethodCallParserRuleCall()); 
    }
    this_WithResolveMethodCall_0=ruleWithResolveMethodCall
    { 
        $current = $this_WithResolveMethodCall_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleTemplateRootObject
entryRuleTemplateRootObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateRootObjectRule()); }
	 iv_ruleTemplateRootObject=ruleTemplateRootObject 
	 { $current=$iv_ruleTemplateRootObject.current; } 
	 EOF 
;

// Rule TemplateRootObject
ruleTemplateRootObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getTemplateRootObjectAccess().getNameIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTemplateRootObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTemplateRootObjectAccess().getColonKeyword_0_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateRootObjectAccess().getTypeClassUseParserRuleCall_1_0()); 
	    }
		lv_type_2_0=ruleClassUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateRootObjectRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"ClassUse");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTemplateRootObjectAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateRootObjectAccess().getAssigmentsAssignmentParserRuleCall_3_0()); 
	    }
		lv_assigments_4_0=ruleAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateRootObjectRule());
	        }
       		add(
       			$current, 
       			"assigments",
        		lv_assigments_4_0, 
        		"Assignment");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTemplateRootObjectAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleObjectInstantiation
entryRuleObjectInstantiation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjectInstantiationRule()); }
	 iv_ruleObjectInstantiation=ruleObjectInstantiation 
	 { $current=$iv_ruleObjectInstantiation.current; } 
	 EOF 
;

// Rule ObjectInstantiation
ruleObjectInstantiation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getObjectInstantiationAccess().getNameIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectInstantiationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getObjectInstantiationAccess().getColonKeyword_0_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getObjectInstantiationAccess().getTypeClassUseParserRuleCall_1_0()); 
	    }
		lv_type_2_0=ruleClassUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectInstantiationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"ClassUse");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getObjectInstantiationAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getObjectInstantiationAccess().getAssigmentsAssignmentParserRuleCall_3_0()); 
	    }
		lv_assigments_4_0=ruleAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectInstantiationRule());
	        }
       		add(
       			$current, 
       			"assigments",
        		lv_assigments_4_0, 
        		"Assignment");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getObjectInstantiationAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	 iv_ruleAssignment=ruleAssignment 
	 { $current=$iv_ruleAssignment.current; } 
	 EOF 
;

// Rule Assignment
ruleAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAssignmentAccess().getAttributeAssigmentParserRuleCall_0()); 
    }
    this_AttributeAssigment_0=ruleAttributeAssigment
    { 
        $current = $this_AttributeAssigment_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAssignmentAccess().getObjectSyntaxParserRuleCall_1()); 
    }
    this_ObjectSyntax_1=ruleObjectSyntax
    { 
        $current = $this_ObjectSyntax_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAssignmentAccess().getInvocationParserRuleCall_2()); 
    }
    this_Invocation_2=ruleInvocation
    { 
        $current = $this_Invocation_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAttributeAssigment
entryRuleAttributeAssigment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeAssigmentRule()); }
	 iv_ruleAttributeAssigment=ruleAttributeAssigment 
	 { $current=$iv_ruleAttributeAssigment.current; } 
	 EOF 
;

// Rule AttributeAssigment
ruleAttributeAssigment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_targetFeature_0_0=RULE_ID
		{
			newLeafNode(lv_targetFeature_0_0, grammarAccess.getAttributeAssigmentAccess().getTargetFeatureIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeAssigmentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"targetFeature",
        		lv_targetFeature_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAttributeAssigmentAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAssigmentAccess().getExprSourceExpressionParserRuleCall_2_0()); 
	    }
		lv_expr_2_0=ruleSourceExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeAssigmentRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_2_0, 
        		"SourceExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSourceExpression
entryRuleSourceExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSourceExpressionRule()); }
	 iv_ruleSourceExpression=ruleSourceExpression 
	 { $current=$iv_ruleSourceExpression.current; } 
	 EOF 
;

// Rule SourceExpression
ruleSourceExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getSourceExpressionAccess().getWithOptionalVariableExpressionParserRuleCall()); 
    }
    this_WithOptionalVariableExpression_0=ruleWithOptionalVariableExpression
    { 
        $current = $this_WithOptionalVariableExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleWithOptionalVariableExpression
entryRuleWithOptionalVariableExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWithOptionalVariableExpressionRule()); }
	 iv_ruleWithOptionalVariableExpression=ruleWithOptionalVariableExpression 
	 { $current=$iv_ruleWithOptionalVariableExpression.current; } 
	 EOF 
;

// Rule WithOptionalVariableExpression
ruleWithOptionalVariableExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getWithOptionalVariableExpressionAccess().getVariableObjectSourceVariableParserRuleCall_0_0_0()); 
	    }
		lv_variable_0_0=ruleObjectSourceVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithOptionalVariableExpressionRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_0_0, 
        		"ObjectSourceVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWithOptionalVariableExpressionAccess().getColonKeyword_0_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getWithOptionalVariableExpressionAccess().getExprExpressionParserRuleCall_1_0()); 
	    }
		lv_expr_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithOptionalVariableExpressionRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleObjectSourceVariable
entryRuleObjectSourceVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjectSourceVariableRule()); }
	 iv_ruleObjectSourceVariable=ruleObjectSourceVariable 
	 { $current=$iv_ruleObjectSourceVariable.current; } 
	 EOF 
;

// Rule ObjectSourceVariable
ruleObjectSourceVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getObjectSourceVariableAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectSourceVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleObjectSyntax
entryRuleObjectSyntax returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjectSyntaxRule()); }
	 iv_ruleObjectSyntax=ruleObjectSyntax 
	 { $current=$iv_ruleObjectSyntax.current; } 
	 EOF 
;

// Rule ObjectSyntax
ruleObjectSyntax returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_targetFeature_0_0=RULE_ID
		{
			newLeafNode(lv_targetFeature_0_0, grammarAccess.getObjectSyntaxAccess().getTargetFeatureIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectSyntaxRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"targetFeature",
        		lv_targetFeature_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getObjectSyntaxAccess().getEqualsSignKeyword_1());
    }
(	otherlv_2='from' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getObjectSyntaxAccess().getFromKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getObjectSyntaxAccess().getExprSourceExpressionParserRuleCall_2_1_0()); 
	    }
		lv_expr_3_0=ruleSourceExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectSyntaxRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_3_0, 
        		"SourceExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_multivalued_4_0=	'*' 
    {
        newLeafNode(lv_multivalued_4_0, grammarAccess.getObjectSyntaxAccess().getMultivaluedAsteriskKeyword_2_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectSyntaxRule());
	        }
       		setWithLastConsumed($current, "multivalued", true, "*");
	    }

)
)?	otherlv_5='to' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getObjectSyntaxAccess().getToKeyword_2_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getObjectSyntaxAccess().getObjectObjectInstantiationParserRuleCall_3_0()); 
	    }
		lv_object_6_0=ruleObjectInstantiation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectSyntaxRule());
	        }
       		set(
       			$current, 
       			"object",
        		lv_object_6_0, 
        		"ObjectInstantiation");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInvocation
entryRuleInvocation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInvocationRule()); }
	 iv_ruleInvocation=ruleInvocation 
	 { $current=$iv_ruleInvocation.current; } 
	 EOF 
;

// Rule Invocation
ruleInvocation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_targetFeature_0_0=RULE_ID
		{
			newLeafNode(lv_targetFeature_0_0, grammarAccess.getInvocationAccess().getTargetFeatureIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInvocationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"targetFeature",
        		lv_targetFeature_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInvocationAccess().getEqualsSignKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInvocationRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getInvocationAccess().getTemplateTemplateCrossReference_2_0()); 
	}

)
)	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInvocationAccess().getLeftParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInvocationAccess().getExprSourceExpressionParserRuleCall_4_0()); 
	    }
		lv_expr_4_0=ruleSourceExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvocationRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_4_0, 
        		"SourceExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_multivalued_5_0=	'*' 
    {
        newLeafNode(lv_multivalued_5_0, grammarAccess.getInvocationAccess().getMultivaluedAsteriskKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInvocationRule());
	        }
       		setWithLastConsumed($current, "multivalued", true, "*");
	    }

)
)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInvocationAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEIntRule()); } 
	 iv_ruleEInt=ruleEInt 
	 { $current=$iv_ruleEInt.current.getText(); }  
	 EOF 
;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;







// Entry rule entryRuleTraceDefinition
entryRuleTraceDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTraceDefinitionRule()); }
	 iv_ruleTraceDefinition=ruleTraceDefinition 
	 { $current=$iv_ruleTraceDefinition.current; } 
	 EOF 
;

// Rule TraceDefinition
ruleTraceDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='link' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTraceDefinitionAccess().getLinkKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTraceDefinitionAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraceDefinitionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTraceDefinitionAccess().getLeftCurlyBracketKeyword_2_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTraceDefinitionAccess().getElementsTraceElementInlineParserRuleCall_2_0_1_0()); 
	    }
		lv_elements_3_0=ruleTraceElementInline		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraceDefinitionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_3_0, 
        		"TraceElementInline");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTraceDefinitionAccess().getSemicolonKeyword_2_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTraceDefinitionAccess().getElementsTraceElementInlineParserRuleCall_2_0_2_1_0()); 
	    }
		lv_elements_5_0=ruleTraceElementInline		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraceDefinitionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_5_0, 
        		"TraceElementInline");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTraceDefinitionAccess().getRightCurlyBracketKeyword_2_0_3());
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getTraceDefinitionAccess().getElementsTraceElementExpandedParserRuleCall_2_1_0_0()); 
	    }
		lv_elements_7_0=ruleTraceElementExpanded		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraceDefinitionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_7_0, 
        		"TraceElementExpanded");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTraceDefinitionAccess().getElementsTraceElementExpandedParserRuleCall_2_1_1_0()); 
	    }
		lv_elements_8_0=ruleTraceElementExpanded		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraceDefinitionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_8_0, 
        		"TraceElementExpanded");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='end' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTraceDefinitionAccess().getEndKeyword_2_1_2());
    }
)))
;





// Entry rule entryRuleTraceElementInline
entryRuleTraceElementInline returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTraceElementInlineRule()); }
	 iv_ruleTraceElementInline=ruleTraceElementInline 
	 { $current=$iv_ruleTraceElementInline.current; } 
	 EOF 
;

// Rule TraceElementInline
ruleTraceElementInline returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTraceElementInlineAccess().getNameEStringParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraceElementInlineRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTraceElementInlineAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTraceElementInlineAccess().getTypeTypeExpressionParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraceElementInlineRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTraceElementExpanded
entryRuleTraceElementExpanded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTraceElementExpandedRule()); }
	 iv_ruleTraceElementExpanded=ruleTraceElementExpanded 
	 { $current=$iv_ruleTraceElementExpanded.current; } 
	 EOF 
;

// Rule TraceElementExpanded
ruleTraceElementExpanded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='var' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTraceElementExpandedAccess().getVarKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTraceElementExpandedAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraceElementExpandedRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTraceElementExpandedAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTraceElementExpandedAccess().getTypeTypeExpressionParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraceElementExpandedRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTypeExpression
entryRuleTypeExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeExpressionRule()); }
	 iv_ruleTypeExpression=ruleTypeExpression 
	 { $current=$iv_ruleTypeExpression.current; } 
	 EOF 
;

// Rule TypeExpression
ruleTypeExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getTypeExpressionAccess().getClassUseParserRuleCall()); 
    }
    this_ClassUse_0=ruleClassUse
    { 
        $current = $this_ClassUse_0.current; 
        afterParserOrEnumRuleCall();
    }

;







// Entry rule entryRulePotencyAnnotation
entryRulePotencyAnnotation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPotencyAnnotationRule()); }
	 iv_rulePotencyAnnotation=rulePotencyAnnotation 
	 { $current=$iv_rulePotencyAnnotation.current; } 
	 EOF 
;

// Rule PotencyAnnotation
rulePotencyAnnotation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPotencyAnnotationAccess().getCommercialAtKeyword_0_0());
    }

    |	otherlv_1='^' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPotencyAnnotationAccess().getCircumflexAccentKeyword_0_1());
    }
)(
(
		lv_value_2_0=RULE_INT
		{
			newLeafNode(lv_value_2_0, grammarAccess.getPotencyAnnotationAccess().getValueINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPotencyAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"INT");
	    }

)
))
;







// Entry rule entryRuleDefineVariable
entryRuleDefineVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefineVariableRule()); }
	 iv_ruleDefineVariable=ruleDefineVariable 
	 { $current=$iv_ruleDefineVariable.current; } 
	 EOF 
;

// Rule DefineVariable
ruleDefineVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDefineVariableAccess().getNameEStringParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefineVariableRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDefineVariableAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDefineVariableAccess().getExpressionExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefineVariableRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleModelReference
entryRuleModelReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelReferenceRule()); }
	 iv_ruleModelReference=ruleModelReference 
	 { $current=$iv_ruleModelReference.current; } 
	 EOF 
;

// Rule ModelReference
ruleModelReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelReferenceRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getModelReferenceAccess().getModelRepresentModelCrossReference_0_0()); 
	}

)
)	otherlv_1='!' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getModelReferenceAccess().getExclamationMarkKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelReferenceAccess().getClassNameEStringParserRuleCall_2_0()); 
	    }
		lv_className_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelReferenceRule());
	        }
       		set(
       			$current, 
       			"className",
        		lv_className_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	 iv_rulePrimaryExpression=rulePrimaryExpression 
	 { $current=$iv_rulePrimaryExpression.current; } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_0()); 
    }
    this_Literal_0=ruleLiteral
    { 
        $current = $this_Literal_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getVariableReferenceParserRuleCall_1()); 
    }
    this_VariableReference_1=ruleVariableReference
    { 
        $current = $this_VariableReference_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getModelReferenceParserRuleCall_2()); 
    }
    this_ModelReference_2=ruleModelReference
    { 
        $current = $this_ModelReference_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParenthesizedExpressionParserRuleCall_3()); 
    }
    this_ParenthesizedExpression_3=ruleParenthesizedExpression
    { 
        $current = $this_ParenthesizedExpression_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getMatchTraceExpressionParserRuleCall_4()); 
    }
    this_MatchTraceExpression_4=ruleMatchTraceExpression
    { 
        $current = $this_MatchTraceExpression_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getClosureDeclarationParserRuleCall_5()); 
    }
    this_ClosureDeclaration_5=ruleClosureDeclaration
    { 
        $current = $this_ClosureDeclaration_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleParenthesizedExpression
entryRuleParenthesizedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParenthesizedExpressionRule()); }
	 iv_ruleParenthesizedExpression=ruleParenthesizedExpression 
	 { $current=$iv_ruleParenthesizedExpression.current; } 
	 EOF 
;

// Rule ParenthesizedExpression
ruleParenthesizedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getParenthesizedExpressionAccess().getExpressionParserRuleCall_1()); 
    }
    this_Expression_1=ruleExpression
    { 
        $current = $this_Expression_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	 iv_ruleLiteral=ruleLiteral 
	 { $current=$iv_ruleLiteral.current; } 
	 EOF 
;

// Rule Literal
ruleLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getFloatLiteralParserRuleCall_0()); 
    }
    this_FloatLiteral_0=ruleFloatLiteral
    { 
        $current = $this_FloatLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getNumLiteralParserRuleCall_1()); 
    }
    this_NumLiteral_1=ruleNumLiteral
    { 
        $current = $this_NumLiteral_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_2()); 
    }
    this_StringLiteral_2=ruleStringLiteral
    { 
        $current = $this_StringLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_3()); 
    }
    this_BooleanLiteral_3=ruleBooleanLiteral
    { 
        $current = $this_BooleanLiteral_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleVariableReference
entryRuleVariableReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableReferenceRule()); }
	 iv_ruleVariableReference=ruleVariableReference 
	 { $current=$iv_ruleVariableReference.current; } 
	 EOF 
;

// Rule VariableReference
ruleVariableReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariableReferenceRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getVariableReferenceAccess().getVariableVariableCrossReference_0()); 
	}

)
)
;





// Entry rule entryRuleClosureDeclaration
entryRuleClosureDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClosureDeclarationRule()); }
	 iv_ruleClosureDeclaration=ruleClosureDeclaration 
	 { $current=$iv_ruleClosureDeclaration.current; } 
	 EOF 
;

// Rule ClosureDeclaration
ruleClosureDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClosureDeclarationAccess().getLeftCurlyBracketKeyword_0());
    }
(	otherlv_1='|' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getClosureDeclarationAccess().getVerticalLineKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClosureDeclarationAccess().getFormalParametersClosureParameterParserRuleCall_1_1_0()); 
	    }
		lv_formalParameters_2_0=ruleClosureParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClosureDeclarationRule());
	        }
       		add(
       			$current, 
       			"formalParameters",
        		lv_formalParameters_2_0, 
        		"ClosureParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getClosureDeclarationAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClosureDeclarationAccess().getFormalParametersClosureParameterParserRuleCall_1_2_1_0()); 
	    }
		lv_formalParameters_4_0=ruleClosureParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClosureDeclarationRule());
	        }
       		add(
       			$current, 
       			"formalParameters",
        		lv_formalParameters_4_0, 
        		"ClosureParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='|' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getClosureDeclarationAccess().getVerticalLineKeyword_1_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClosureDeclarationAccess().getStatementsStatementParserRuleCall_2_0()); 
	    }
		lv_statements_6_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClosureDeclarationRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_6_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getClosureDeclarationAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleClosureParameter
entryRuleClosureParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClosureParameterRule()); }
	 iv_ruleClosureParameter=ruleClosureParameter 
	 { $current=$iv_ruleClosureParameter.current; } 
	 EOF 
;

// Rule ClosureParameter
ruleClosureParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getClosureParameterAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClosureParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;







// Entry rule entryRuleWithResolveMethodCall
entryRuleWithResolveMethodCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWithResolveMethodCallRule()); }
	 iv_ruleWithResolveMethodCall=ruleWithResolveMethodCall 
	 { $current=$iv_ruleWithResolveMethodCall.current; } 
	 EOF 
;

// Rule WithResolveMethodCall
ruleWithResolveMethodCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getWithResolveMethodCallAccess().getPrimaryExpressionParserRuleCall_0()); 
    }
    this_PrimaryExpression_0=rulePrimaryExpression
    { 
        $current = $this_PrimaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getWithResolveMethodCallAccess().getBinaryExprLeftAction_1_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWithResolveMethodCallAccess().getBinaryOpBinaryOpEnumRuleCall_1_0_1_0()); 
	    }
		lv_binaryOp_2_0=ruleBinaryOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithResolveMethodCallRule());
	        }
       		set(
       			$current, 
       			"binaryOp",
        		lv_binaryOp_2_0, 
        		"BinaryOp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWithResolveMethodCallAccess().getRightExpressionParserRuleCall_1_0_2_0()); 
	    }
		lv_right_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithResolveMethodCallRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getWithResolveMethodCallAccess().getResolveLinkExprAction_1_1_0_0(),
            $current);
    }
)	otherlv_5='[' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getWithResolveMethodCallAccess().getLeftSquareBracketKeyword_1_1_0_1());
    }
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getWithResolveMethodCallRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getWithResolveMethodCallAccess().getModuleUseDeclarationCrossReference_1_1_0_2_0_0()); 
	}

)
)(
(
		lv_isExternal_7_0=	'!' 
    {
        newLeafNode(lv_isExternal_7_0, grammarAccess.getWithResolveMethodCallAccess().getIsExternalExclamationMarkKeyword_1_1_0_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWithResolveMethodCallRule());
	        }
       		setWithLastConsumed($current, "isExternal", true, "!");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getWithResolveMethodCallAccess().getLinkNameEStringParserRuleCall_1_1_0_3_0()); 
	    }
		lv_linkName_8_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithResolveMethodCallRule());
	        }
       		set(
       			$current, 
       			"linkName",
        		lv_linkName_8_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9='.' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getWithResolveMethodCallAccess().getFullStopKeyword_1_1_0_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWithResolveMethodCallAccess().getFeatureNameEStringParserRuleCall_1_1_0_4_1_0()); 
	    }
		lv_featureName_10_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithResolveMethodCallRule());
	        }
       		set(
       			$current, 
       			"featureName",
        		lv_featureName_10_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_11=']' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getWithResolveMethodCallAccess().getRightSquareBracketKeyword_1_1_0_5());
    }
)((((
))=>(
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getWithResolveMethodCallAccess().getMethodCallReceptorAction_1_1_1_0_0(),
            $current);
    }
))	otherlv_13='.' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getWithResolveMethodCallAccess().getFullStopKeyword_1_1_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWithResolveMethodCallAccess().getMethodNameEStringParserRuleCall_1_1_1_2_0()); 
	    }
		lv_methodName_14_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithResolveMethodCallRule());
	        }
       		set(
       			$current, 
       			"methodName",
        		lv_methodName_14_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_withParameters_15_0=	'(' 
    {
        newLeafNode(lv_withParameters_15_0, grammarAccess.getWithResolveMethodCallAccess().getWithParametersLeftParenthesisKeyword_1_1_1_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWithResolveMethodCallRule());
	        }
       		setWithLastConsumed($current, "withParameters", true, "(");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWithResolveMethodCallAccess().getParametersExpressionParserRuleCall_1_1_1_3_1_0()); 
	    }
		lv_parameters_16_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithResolveMethodCallRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_16_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_17=',' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getWithResolveMethodCallAccess().getCommaKeyword_1_1_1_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWithResolveMethodCallAccess().getParametersExpressionParserRuleCall_1_1_1_3_2_1_0()); 
	    }
		lv_parameters_18_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithResolveMethodCallRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_18_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_19=')' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getWithResolveMethodCallAccess().getRightParenthesisKeyword_1_1_1_3_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getWithResolveMethodCallAccess().getParametersClosureDeclarationParserRuleCall_1_1_1_4_0()); 
	    }
		lv_parameters_20_0=ruleClosureDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithResolveMethodCallRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_20_0, 
        		"ClosureDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)?)?)+
    |(((((
))=>(
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getWithResolveMethodCallAccess().getMethodCallReceptorAction_1_2_0_0_0(),
            $current);
    }
))	otherlv_22='.' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getWithResolveMethodCallAccess().getFullStopKeyword_1_2_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWithResolveMethodCallAccess().getMethodNameEStringParserRuleCall_1_2_0_2_0()); 
	    }
		lv_methodName_23_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithResolveMethodCallRule());
	        }
       		set(
       			$current, 
       			"methodName",
        		lv_methodName_23_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_withParameters_24_0=	'(' 
    {
        newLeafNode(lv_withParameters_24_0, grammarAccess.getWithResolveMethodCallAccess().getWithParametersLeftParenthesisKeyword_1_2_0_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWithResolveMethodCallRule());
	        }
       		setWithLastConsumed($current, "withParameters", true, "(");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWithResolveMethodCallAccess().getParametersExpressionParserRuleCall_1_2_0_3_1_0()); 
	    }
		lv_parameters_25_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithResolveMethodCallRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_25_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_26=',' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getWithResolveMethodCallAccess().getCommaKeyword_1_2_0_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWithResolveMethodCallAccess().getParametersExpressionParserRuleCall_1_2_0_3_2_1_0()); 
	    }
		lv_parameters_27_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithResolveMethodCallRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_27_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_28=')' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getWithResolveMethodCallAccess().getRightParenthesisKeyword_1_2_0_3_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getWithResolveMethodCallAccess().getParametersClosureDeclarationParserRuleCall_1_2_0_4_0()); 
	    }
		lv_parameters_29_0=ruleClosureDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithResolveMethodCallRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_29_0, 
        		"ClosureDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)?)((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getWithResolveMethodCallAccess().getResolveLinkExprAction_1_2_1_0(),
            $current);
    }
)	otherlv_31='[' 
    {
    	newLeafNode(otherlv_31, grammarAccess.getWithResolveMethodCallAccess().getLeftSquareBracketKeyword_1_2_1_1());
    }
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getWithResolveMethodCallRule());
	        }
        }
	otherlv_32=RULE_ID
	{
		newLeafNode(otherlv_32, grammarAccess.getWithResolveMethodCallAccess().getModuleUseDeclarationCrossReference_1_2_1_2_0_0()); 
	}

)
)(
(
		lv_isExternal_33_0=	'!' 
    {
        newLeafNode(lv_isExternal_33_0, grammarAccess.getWithResolveMethodCallAccess().getIsExternalExclamationMarkKeyword_1_2_1_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWithResolveMethodCallRule());
	        }
       		setWithLastConsumed($current, "isExternal", true, "!");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getWithResolveMethodCallAccess().getLinkNameEStringParserRuleCall_1_2_1_3_0()); 
	    }
		lv_linkName_34_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithResolveMethodCallRule());
	        }
       		set(
       			$current, 
       			"linkName",
        		lv_linkName_34_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_35='.' 
    {
    	newLeafNode(otherlv_35, grammarAccess.getWithResolveMethodCallAccess().getFullStopKeyword_1_2_1_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWithResolveMethodCallAccess().getFeatureNameEStringParserRuleCall_1_2_1_4_1_0()); 
	    }
		lv_featureName_36_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWithResolveMethodCallRule());
	        }
       		set(
       			$current, 
       			"featureName",
        		lv_featureName_36_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_37=']' 
    {
    	newLeafNode(otherlv_37, grammarAccess.getWithResolveMethodCallAccess().getRightSquareBracketKeyword_1_2_1_5());
    }
)?)+)?)
;







// Entry rule entryRuleMatchTraceExpression
entryRuleMatchTraceExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMatchTraceExpressionRule()); }
	 iv_ruleMatchTraceExpression=ruleMatchTraceExpression 
	 { $current=$iv_ruleMatchTraceExpression.current; } 
	 EOF 
;

// Rule MatchTraceExpression
ruleMatchTraceExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='match' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMatchTraceExpressionAccess().getMatchKeyword_0());
    }
(this_ID_1=RULE_ID
    { 
    newLeafNode(this_ID_1, grammarAccess.getMatchTraceExpressionAccess().getIDTerminalRuleCall_1_0()); 
    }
	otherlv_2='!' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMatchTraceExpressionAccess().getExclamationMarkKeyword_1_1());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMatchTraceExpressionRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getMatchTraceExpressionAccess().getTraceTraceDefinitionCrossReference_2_0()); 
	}

)
)	otherlv_4='with' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMatchTraceExpressionAccess().getWithKeyword_3());
    }
	otherlv_5='[' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMatchTraceExpressionAccess().getLeftSquareBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMatchTraceExpressionAccess().getTraceExprTraceExprLanguageParserRuleCall_5_0()); 
	    }
		lv_traceExpr_6_0=ruleTraceExprLanguage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatchTraceExpressionRule());
	        }
       		set(
       			$current, 
       			"traceExpr",
        		lv_traceExpr_6_0, 
        		"TraceExprLanguage");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMatchTraceExpressionAccess().getRightSquareBracketKeyword_6());
    }
)
;





// Entry rule entryRuleTraceExprLanguage
entryRuleTraceExprLanguage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTraceExprLanguageRule()); }
	 iv_ruleTraceExprLanguage=ruleTraceExprLanguage 
	 { $current=$iv_ruleTraceExprLanguage.current; } 
	 EOF 
;

// Rule TraceExprLanguage
ruleTraceExprLanguage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTraceExprLanguageRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getTraceExprLanguageAccess().getTraceVarTraceElementCrossReference_0_0()); 
	}

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTraceExprLanguageAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTraceExprLanguageAccess().getExprExpressionParserRuleCall_2_0()); 
	    }
		lv_expr_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraceExprLanguageRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;







// Entry rule entryRulePutTraceParameter
entryRulePutTraceParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPutTraceParameterRule()); }
	 iv_rulePutTraceParameter=rulePutTraceParameter 
	 { $current=$iv_rulePutTraceParameter.current; } 
	 EOF 
;

// Rule PutTraceParameter
rulePutTraceParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPutTraceParameterRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getPutTraceParameterAccess().getTraceVarTraceElementCrossReference_0_0()); 
	}

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPutTraceParameterAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPutTraceParameterAccess().getValueExpressionParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPutTraceParameterRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNumLiteral
entryRuleNumLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumLiteralRule()); }
	 iv_ruleNumLiteral=ruleNumLiteral 
	 { $current=$iv_ruleNumLiteral.current; } 
	 EOF 
;

// Rule NumLiteral
ruleNumLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumLiteralAccess().getValueEIntParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumLiteralRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleFloatLiteral
entryRuleFloatLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFloatLiteralRule()); }
	 iv_ruleFloatLiteral=ruleFloatLiteral 
	 { $current=$iv_ruleFloatLiteral.current; } 
	 EOF 
;

// Rule FloatLiteral
ruleFloatLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getFloatLiteralAccess().getValueEDoubleParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleEDouble		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFloatLiteralRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"EDouble");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleEDouble
entryRuleEDouble returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEDoubleRule()); } 
	 iv_ruleEDouble=ruleEDouble 
	 { $current=$iv_ruleEDouble.current.getText(); }  
	 EOF 
;

// Rule EDouble
ruleEDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_0()); 
    }

	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEDoubleAccess().getFullStopKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	 iv_ruleStringLiteral=ruleStringLiteral 
	 { $current=$iv_ruleStringLiteral.current; } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_STRING
		{
			newLeafNode(lv_value_0_0, grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanLiteralRule()); }
	 iv_ruleBooleanLiteral=ruleBooleanLiteral 
	 { $current=$iv_ruleBooleanLiteral.current; } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanLiteralAccess().getValueEBooleanParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanLiteralRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"EBoolean");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleEBoolean
entryRuleEBoolean returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEBooleanRule()); } 
	 iv_ruleEBoolean=ruleEBoolean 
	 { $current=$iv_ruleEBoolean.current.getText(); }  
	 EOF 
;

// Rule EBoolean
ruleEBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='true' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEBooleanAccess().getTrueKeyword_0()); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEBooleanAccess().getFalseKeyword_1()); 
    }
)
    ;







// Rule BinaryOp
ruleBinaryOp returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='+' 
	{
        $current = grammarAccess.getBinaryOpAccess().getADDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getBinaryOpAccess().getADDEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='-' 
	{
        $current = grammarAccess.getBinaryOpAccess().getSUBEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getBinaryOpAccess().getSUBEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='*' 
	{
        $current = grammarAccess.getBinaryOpAccess().getMULEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getBinaryOpAccess().getMULEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='/' 
	{
        $current = grammarAccess.getBinaryOpAccess().getDIVEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getBinaryOpAccess().getDIVEnumLiteralDeclaration_3()); 
    }
));



RULE_KEYWORD_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')* ':';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


