/*
* generated by Xtext
*/
grammar InternalQool;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.eclectic.frontend.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclectic.frontend.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclectic.frontend.services.QoolGrammarAccess;

}

@parser::members {

 	private QoolGrammarAccess grammarAccess;
 	
    public InternalQoolParser(TokenStream input, QoolGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "QoolTransformation";	
   	}
   	
   	@Override
   	protected QoolGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleQoolTransformation
entryRuleQoolTransformation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQoolTransformationRule()); }
	 iv_ruleQoolTransformation=ruleQoolTransformation 
	 { $current=$iv_ruleQoolTransformation.current; } 
	 EOF 
;

// Rule QoolTransformation
ruleQoolTransformation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='qool' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQoolTransformationAccess().getQoolKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQoolTransformationAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQoolTransformationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getQoolTransformationAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQoolTransformationAccess().getInModelsTransformationDefinitionParameterParserRuleCall_3_0()); 
	    }
		lv_inModels_3_0=ruleTransformationDefinitionParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQoolTransformationRule());
	        }
       		add(
       			$current, 
       			"inModels",
        		lv_inModels_3_0, 
        		"TransformationDefinitionParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getQoolTransformationAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQoolTransformationAccess().getInModelsTransformationDefinitionParameterParserRuleCall_4_1_0()); 
	    }
		lv_inModels_5_0=ruleTransformationDefinitionParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQoolTransformationRule());
	        }
       		add(
       			$current, 
       			"inModels",
        		lv_inModels_5_0, 
        		"TransformationDefinitionParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getQoolTransformationAccess().getRightParenthesisKeyword_5());
    }
	otherlv_7='->' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getQoolTransformationAccess().getHyphenMinusGreaterThanSignKeyword_6());
    }
	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getQoolTransformationAccess().getLeftParenthesisKeyword_7());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getQoolTransformationAccess().getOutModelsTransformationDefinitionParameterParserRuleCall_8_0_0()); 
	    }
		lv_outModels_9_0=ruleTransformationDefinitionParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQoolTransformationRule());
	        }
       		add(
       			$current, 
       			"outModels",
        		lv_outModels_9_0, 
        		"TransformationDefinitionParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getQoolTransformationAccess().getCommaKeyword_8_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQoolTransformationAccess().getOutModelsTransformationDefinitionParameterParserRuleCall_8_1_1_0()); 
	    }
		lv_outModels_11_0=ruleTransformationDefinitionParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQoolTransformationRule());
	        }
       		add(
       			$current, 
       			"outModels",
        		lv_outModels_11_0, 
        		"TransformationDefinitionParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getQoolTransformationAccess().getRightParenthesisKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQoolTransformationAccess().getAnnotationsAnnotationParserRuleCall_10_0()); 
	    }
		lv_annotations_13_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQoolTransformationRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_13_0, 
        		"Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getQoolTransformationAccess().getInlineModelsInlineModelParserRuleCall_11_0()); 
	    }
		lv_inlineModels_14_0=ruleInlineModel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQoolTransformationRule());
	        }
       		add(
       			$current, 
       			"inlineModels",
        		lv_inlineModels_14_0, 
        		"InlineModel");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getQoolTransformationAccess().getImportedModelsImportedModelParserRuleCall_12_0()); 
	    }
		lv_importedModels_15_0=ruleImportedModel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQoolTransformationRule());
	        }
       		add(
       			$current, 
       			"importedModels",
        		lv_importedModels_15_0, 
        		"ImportedModel");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getQoolTransformationAccess().getQueuesQoolQueueParserRuleCall_13_0()); 
	    }
		lv_queues_16_0=ruleQoolQueue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQoolTransformationRule());
	        }
       		add(
       			$current, 
       			"queues",
        		lv_queues_16_0, 
        		"QoolQueue");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getQoolTransformationAccess().getSegmentsSegmentParserRuleCall_14_0()); 
	    }
		lv_segments_17_0=ruleSegment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQoolTransformationRule());
	        }
       		add(
       			$current, 
       			"segments",
        		lv_segments_17_0, 
        		"Segment");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleImportedModel
entryRuleImportedModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportedModelRule()); }
	 iv_ruleImportedModel=ruleImportedModel 
	 { $current=$iv_ruleImportedModel.current; } 
	 EOF 
;

// Rule ImportedModel
ruleImportedModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='imported' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportedModelAccess().getImportedKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportedModelAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportedModelRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAnnotation
entryRuleAnnotation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationRule()); }
	 iv_ruleAnnotation=ruleAnnotation 
	 { $current=$iv_ruleAnnotation.current; } 
	 EOF 
;

// Rule Annotation
ruleAnnotation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getAnnotationAccess().getMetamodelModelAnnotationParserRuleCall()); 
    }
    this_MetamodelModelAnnotation_0=ruleMetamodelModelAnnotation
    { 
        $current = $this_MetamodelModelAnnotation_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleMetamodelModelAnnotation
entryRuleMetamodelModelAnnotation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetamodelModelAnnotationRule()); }
	 iv_ruleMetamodelModelAnnotation=ruleMetamodelModelAnnotation 
	 { $current=$iv_ruleMetamodelModelAnnotation.current; } 
	 EOF 
;

// Rule MetamodelModelAnnotation
ruleMetamodelModelAnnotation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetamodelModelAnnotationRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getMetamodelModelAnnotationAccess().getAnnotatedElementRepresentModelCrossReference_0_0()); 
	}

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMetamodelModelAnnotationAccess().getColonKeyword_1());
    }
(
(
		lv_metamodel_2_0=RULE_STRING
		{
			newLeafNode(lv_metamodel_2_0, grammarAccess.getMetamodelModelAnnotationAccess().getMetamodelSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetamodelModelAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"metamodel",
        		lv_metamodel_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleTransformationDefinitionParameter
entryRuleTransformationDefinitionParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransformationDefinitionParameterRule()); }
	 iv_ruleTransformationDefinitionParameter=ruleTransformationDefinitionParameter 
	 { $current=$iv_ruleTransformationDefinitionParameter.current; } 
	 EOF 
;

// Rule TransformationDefinitionParameter
ruleTransformationDefinitionParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTransformationDefinitionParameterAccess().getTransformationDefinitionParameterAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTransformationDefinitionParameterAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransformationDefinitionParameterRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInlineModel
entryRuleInlineModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInlineModelRule()); }
	 iv_ruleInlineModel=ruleInlineModel 
	 { $current=$iv_ruleInlineModel.current; } 
	 EOF 
;

// Rule InlineModel
ruleInlineModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='model' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInlineModelAccess().getModelKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInlineModelAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInlineModelRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInlineModelAccess().getClassesInlineClassParserRuleCall_2_0()); 
	    }
		lv_classes_2_0=ruleInlineClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInlineModelRule());
	        }
       		add(
       			$current, 
       			"classes",
        		lv_classes_2_0, 
        		"InlineClass");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='end' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInlineModelAccess().getEndKeyword_3());
    }
)
;





// Entry rule entryRuleInlineClass
entryRuleInlineClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInlineClassRule()); }
	 iv_ruleInlineClass=ruleInlineClass 
	 { $current=$iv_ruleInlineClass.current; } 
	 EOF 
;

// Rule InlineClass
ruleInlineClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='class' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInlineClassAccess().getClassKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInlineClassAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInlineClassRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInlineClassAccess().getLeftCurlyBracketKeyword_2_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInlineClassAccess().getFeaturesInlineReferenceInlineParserRuleCall_2_0_1_0()); 
	    }
		lv_features_3_0=ruleInlineReferenceInline		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInlineClassRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_3_0, 
        		"InlineReferenceInline");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInlineClassAccess().getSemicolonKeyword_2_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInlineClassAccess().getFeaturesInlineReferenceInlineParserRuleCall_2_0_2_1_0()); 
	    }
		lv_features_5_0=ruleInlineReferenceInline		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInlineClassRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_5_0, 
        		"InlineReferenceInline");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInlineClassAccess().getRightCurlyBracketKeyword_2_0_3());
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getInlineClassAccess().getFeaturesInlineFeatureExpandedParserRuleCall_2_1_0_0()); 
	    }
		lv_features_7_0=ruleInlineFeatureExpanded		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInlineClassRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_7_0, 
        		"InlineFeatureExpanded");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInlineClassAccess().getFeaturesInlineFeatureExpandedParserRuleCall_2_1_1_0()); 
	    }
		lv_features_8_0=ruleInlineFeatureExpanded		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInlineClassRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_8_0, 
        		"InlineFeatureExpanded");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='end' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getInlineClassAccess().getEndKeyword_2_1_2());
    }
)))
;





// Entry rule entryRuleInlineReferenceInline
entryRuleInlineReferenceInline returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInlineReferenceInlineRule()); }
	 iv_ruleInlineReferenceInline=ruleInlineReferenceInline 
	 { $current=$iv_ruleInlineReferenceInline.current; } 
	 EOF 
;

// Rule InlineReferenceInline
ruleInlineReferenceInline returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInlineReferenceInlineAccess().getNameEStringParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInlineReferenceInlineRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInlineReferenceInlineAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInlineReferenceInlineAccess().getTypeTypeExpressionParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInlineReferenceInlineRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInlineFeatureExpanded
entryRuleInlineFeatureExpanded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInlineFeatureExpandedRule()); }
	 iv_ruleInlineFeatureExpanded=ruleInlineFeatureExpanded 
	 { $current=$iv_ruleInlineFeatureExpanded.current; } 
	 EOF 
;

// Rule InlineFeatureExpanded
ruleInlineFeatureExpanded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getInlineFeatureExpandedAccess().getInlineAttributeExpandedParserRuleCall_0()); 
    }
    this_InlineAttributeExpanded_0=ruleInlineAttributeExpanded
    { 
        $current = $this_InlineAttributeExpanded_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInlineFeatureExpandedAccess().getInlineReferenceExpandedParserRuleCall_1()); 
    }
    this_InlineReferenceExpanded_1=ruleInlineReferenceExpanded
    { 
        $current = $this_InlineReferenceExpanded_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInlineAttributeExpanded
entryRuleInlineAttributeExpanded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInlineAttributeExpandedRule()); }
	 iv_ruleInlineAttributeExpanded=ruleInlineAttributeExpanded 
	 { $current=$iv_ruleInlineAttributeExpanded.current; } 
	 EOF 
;

// Rule InlineAttributeExpanded
ruleInlineAttributeExpanded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='att' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInlineAttributeExpandedAccess().getAttKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInlineAttributeExpandedAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInlineAttributeExpandedRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInlineAttributeExpandedAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInlineAttributeExpandedAccess().getTypeTypeExpressionParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInlineAttributeExpandedRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_multivalued_4_0=	'*' 
    {
        newLeafNode(lv_multivalued_4_0, grammarAccess.getInlineAttributeExpandedAccess().getMultivaluedAsteriskKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInlineAttributeExpandedRule());
	        }
       		setWithLastConsumed($current, "multivalued", true, "*");
	    }

)
)?)
;





// Entry rule entryRuleInlineReferenceExpanded
entryRuleInlineReferenceExpanded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInlineReferenceExpandedRule()); }
	 iv_ruleInlineReferenceExpanded=ruleInlineReferenceExpanded 
	 { $current=$iv_ruleInlineReferenceExpanded.current; } 
	 EOF 
;

// Rule InlineReferenceExpanded
ruleInlineReferenceExpanded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ref' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInlineReferenceExpandedAccess().getRefKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInlineReferenceExpandedAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInlineReferenceExpandedRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInlineReferenceExpandedAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInlineReferenceExpandedAccess().getTypeTypeExpressionParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInlineReferenceExpandedRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_multivalued_4_0=	'*' 
    {
        newLeafNode(lv_multivalued_4_0, grammarAccess.getInlineReferenceExpandedAccess().getMultivaluedAsteriskKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInlineReferenceExpandedRule());
	        }
       		setWithLastConsumed($current, "multivalued", true, "*");
	    }

)
)?)
;





// Entry rule entryRuleQoolQueue
entryRuleQoolQueue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQoolQueueRule()); }
	 iv_ruleQoolQueue=ruleQoolQueue 
	 { $current=$iv_ruleQoolQueue.current; } 
	 EOF 
;

// Rule QoolQueue
ruleQoolQueue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQoolQueueAccess().getLocalQueueParserRuleCall_0()); 
    }
    this_LocalQueue_0=ruleLocalQueue
    { 
        $current = $this_LocalQueue_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getQoolQueueAccess().getModelElementQueueParserRuleCall_1()); 
    }
    this_ModelElementQueue_1=ruleModelElementQueue
    { 
        $current = $this_ModelElementQueue_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLocalQueue
entryRuleLocalQueue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLocalQueueRule()); }
	 iv_ruleLocalQueue=ruleLocalQueue 
	 { $current=$iv_ruleLocalQueue.current; } 
	 EOF 
;

// Rule LocalQueue
ruleLocalQueue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='local' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLocalQueueAccess().getLocalKeyword_0());
    }
	otherlv_1='queue' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLocalQueueAccess().getQueueKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getLocalQueueAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocalQueueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLocalQueueAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalQueueAccess().getType_TypeExpressionParserRuleCall_4_0()); 
	    }
		lv_type__4_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalQueueRule());
	        }
       		set(
       			$current, 
       			"type_",
        		lv_type__4_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='with' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLocalQueueAccess().getWithKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalQueueAccess().getOptimizationsQueueOptimizationParserRuleCall_5_1_0()); 
	    }
		lv_optimizations_6_0=ruleQueueOptimization		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalQueueRule());
	        }
       		add(
       			$current, 
       			"optimizations",
        		lv_optimizations_6_0, 
        		"QueueOptimization");
	        afterParserOrEnumRuleCall();
	    }

)
)+)?)
;





// Entry rule entryRuleModelElementQueue
entryRuleModelElementQueue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelElementQueueRule()); }
	 iv_ruleModelElementQueue=ruleModelElementQueue 
	 { $current=$iv_ruleModelElementQueue.current; } 
	 EOF 
;

// Rule ModelElementQueue
ruleModelElementQueue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='model' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModelElementQueueAccess().getModelKeyword_0());
    }
	otherlv_1='queue' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getModelElementQueueAccess().getQueueKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getModelElementQueueAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelElementQueueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getModelElementQueueAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelElementQueueAccess().getClass_ClassUseParserRuleCall_4_0()); 
	    }
		lv_class__4_0=ruleClassUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelElementQueueRule());
	        }
       		set(
       			$current, 
       			"class_",
        		lv_class__4_0, 
        		"ClassUse");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getModelElementQueueAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelElementQueueAccess().getAdditionalsClassUseParserRuleCall_5_1_0()); 
	    }
		lv_additionals_6_0=ruleClassUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelElementQueueRule());
	        }
       		add(
       			$current, 
       			"additionals",
        		lv_additionals_6_0, 
        		"ClassUse");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleQueueOptimization
entryRuleQueueOptimization returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQueueOptimizationRule()); }
	 iv_ruleQueueOptimization=ruleQueueOptimization 
	 { $current=$iv_ruleQueueOptimization.current; } 
	 EOF 
;

// Rule QueueOptimization
ruleQueueOptimization returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getQueueOptimizationAccess().getAccessByFeatureOptimizationParserRuleCall()); 
    }
    this_AccessByFeatureOptimization_0=ruleAccessByFeatureOptimization
    { 
        $current = $this_AccessByFeatureOptimization_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleAccessByFeatureOptimization
entryRuleAccessByFeatureOptimization returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAccessByFeatureOptimizationRule()); }
	 iv_ruleAccessByFeatureOptimization=ruleAccessByFeatureOptimization 
	 { $current=$iv_ruleAccessByFeatureOptimization.current; } 
	 EOF 
;

// Rule AccessByFeatureOptimization
ruleAccessByFeatureOptimization returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='access-by' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAccessByFeatureOptimizationAccess().getAccessByKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAccessByFeatureOptimizationAccess().getFeatureNameEStringParserRuleCall_1_0()); 
	    }
		lv_featureName_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAccessByFeatureOptimizationRule());
	        }
       		set(
       			$current, 
       			"featureName",
        		lv_featureName_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_force_2_0=	'!' 
    {
        newLeafNode(lv_force_2_0, grammarAccess.getAccessByFeatureOptimizationAccess().getForceExclamationMarkKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAccessByFeatureOptimizationRule());
	        }
       		setWithLastConsumed($current, "force", true, "!");
	    }

)
)?)
;





// Entry rule entryRuleSegment
entryRuleSegment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSegmentRule()); }
	 iv_ruleSegment=ruleSegment 
	 { $current=$iv_ruleSegment.current; } 
	 EOF 
;

// Rule Segment
ruleSegment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='segment' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSegmentAccess().getSegmentKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSegmentAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSegmentRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSegmentAccess().getStatementsStatementParserRuleCall_2_0()); 
	    }
		lv_statements_2_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSegmentRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_2_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='end' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSegmentAccess().getEndKeyword_3());
    }
)
;





// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	 iv_ruleStatement=ruleStatement 
	 { $current=$iv_ruleStatement.current; } 
	 EOF 
;

// Rule Statement
ruleStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getDefineVariableParserRuleCall_0()); 
    }
    this_DefineVariable_0=ruleDefineVariable
    { 
        $current = $this_DefineVariable_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getExpressionParserRuleCall_1()); 
    }
    this_Expression_1=ruleExpression
    { 
        $current = $this_Expression_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getPutTraceExpressionParserRuleCall_2()); 
    }
    this_PutTraceExpression_2=rulePutTraceExpression
    { 
        $current = $this_PutTraceExpression_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getPropertyWriteParserRuleCall_3()); 
    }
    this_PropertyWrite_3=rulePropertyWrite
    { 
        $current = $this_PropertyWrite_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getForAllStatementParserRuleCall_4()); 
    }
    this_ForAllStatement_4=ruleForAllStatement
    { 
        $current = $this_ForAllStatement_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getEmitStatementParserRuleCall_5()); 
    }
    this_EmitStatement_5=ruleEmitStatement
    { 
        $current = $this_EmitStatement_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	 iv_rulePrimaryExpression=rulePrimaryExpression 
	 { $current=$iv_rulePrimaryExpression.current; } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_0()); 
    }
    this_Literal_0=ruleLiteral
    { 
        $current = $this_Literal_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getVariableReferenceParserRuleCall_1()); 
    }
    this_VariableReference_1=ruleVariableReference
    { 
        $current = $this_VariableReference_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getModelReferenceParserRuleCall_2()); 
    }
    this_ModelReference_2=ruleModelReference
    { 
        $current = $this_ModelReference_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getParenthesizedExpressionParserRuleCall_3()); 
    }
    this_ParenthesizedExpression_3=ruleParenthesizedExpression
    { 
        $current = $this_ParenthesizedExpression_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getMatchTraceExpressionParserRuleCall_4()); 
    }
    this_MatchTraceExpression_4=ruleMatchTraceExpression
    { 
        $current = $this_MatchTraceExpression_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getClosureDeclarationParserRuleCall_5()); 
    }
    this_ClosureDeclaration_5=ruleClosureDeclaration
    { 
        $current = $this_ClosureDeclaration_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getMatchExpressionParserRuleCall_6()); 
    }
    this_MatchExpression_6=ruleMatchExpression
    { 
        $current = $this_MatchExpression_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getInvokeTransformationParserRuleCall_7()); 
    }
    this_InvokeTransformation_7=ruleInvokeTransformation
    { 
        $current = $this_InvokeTransformation_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getCopierParserRuleCall_8()); 
    }
    this_Copier_8=ruleCopier
    { 
        $current = $this_Copier_8.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNamedInvocationParameter
entryRuleNamedInvocationParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamedInvocationParameterRule()); }
	 iv_ruleNamedInvocationParameter=ruleNamedInvocationParameter 
	 { $current=$iv_ruleNamedInvocationParameter.current; } 
	 EOF 
;

// Rule NamedInvocationParameter
ruleNamedInvocationParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getNamedInvocationParameterAccess().getFormalNameEStringParserRuleCall_0_0()); 
	    }
		lv_formalName_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamedInvocationParameterRule());
	        }
       		set(
       			$current, 
       			"formalName",
        		lv_formalName_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNamedInvocationParameterAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNamedInvocationParameterAccess().getActualParameterExpressionParserRuleCall_2_0()); 
	    }
		lv_actualParameter_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamedInvocationParameterRule());
	        }
       		set(
       			$current, 
       			"actualParameter",
        		lv_actualParameter_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInvokeTransformation
entryRuleInvokeTransformation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInvokeTransformationRule()); }
	 iv_ruleInvokeTransformation=ruleInvokeTransformation 
	 { $current=$iv_ruleInvokeTransformation.current; } 
	 EOF 
;

// Rule InvokeTransformation
ruleInvokeTransformation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getInvokeTransformationAccess().getInvokeExternalParserRuleCall_0()); 
    }
    this_InvokeExternal_0=ruleInvokeExternal
    { 
        $current = $this_InvokeExternal_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInvokeTransformationAccess().getInvokeInternalParserRuleCall_1()); 
    }
    this_InvokeInternal_1=ruleInvokeInternal
    { 
        $current = $this_InvokeInternal_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInvokeInternal
entryRuleInvokeInternal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInvokeInternalRule()); }
	 iv_ruleInvokeInternal=ruleInvokeInternal 
	 { $current=$iv_ruleInvokeInternal.current; } 
	 EOF 
;

// Rule InvokeInternal
ruleInvokeInternal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='invoke-internal' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInvokeInternalAccess().getInvokeInternalKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInvokeInternalAccess().getTransformationNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_transformationName_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvokeInternalRule());
	        }
       		set(
       			$current, 
       			"transformationName",
        		lv_transformationName_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInvokeInternalAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getInvokeInternalAccess().getSourceModelsInvocationParameterParserRuleCall_3_0_0()); 
	    }
		lv_sourceModels_3_0=ruleInvocationParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvokeInternalRule());
	        }
       		add(
       			$current, 
       			"sourceModels",
        		lv_sourceModels_3_0, 
        		"InvocationParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInvokeInternalAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInvokeInternalAccess().getSourceModelsInvocationParameterParserRuleCall_3_1_1_0()); 
	    }
		lv_sourceModels_5_0=ruleInvocationParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvokeInternalRule());
	        }
       		add(
       			$current, 
       			"sourceModels",
        		lv_sourceModels_5_0, 
        		"InvocationParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInvokeInternalAccess().getRightParenthesisKeyword_4());
    }
	otherlv_7='->' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInvokeInternalAccess().getHyphenMinusGreaterThanSignKeyword_5());
    }
	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInvokeInternalAccess().getLeftParenthesisKeyword_6());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getInvokeInternalAccess().getTargetModelsInvocationParameterParserRuleCall_7_0_0()); 
	    }
		lv_targetModels_9_0=ruleInvocationParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvokeInternalRule());
	        }
       		add(
       			$current, 
       			"targetModels",
        		lv_targetModels_9_0, 
        		"InvocationParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getInvokeInternalAccess().getCommaKeyword_7_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInvokeInternalAccess().getTargetModelsInvocationParameterParserRuleCall_7_1_1_0()); 
	    }
		lv_targetModels_11_0=ruleInvocationParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvokeInternalRule());
	        }
       		add(
       			$current, 
       			"targetModels",
        		lv_targetModels_11_0, 
        		"InvocationParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getInvokeInternalAccess().getRightParenthesisKeyword_8());
    }
(	otherlv_13='input-view-filter' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getInvokeInternalAccess().getInputViewFilterKeyword_9_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInvokeInternalRule());
	        }
        }
	otherlv_14=RULE_ID
	{
		newLeafNode(otherlv_14, grammarAccess.getInvokeInternalAccess().getInputViewFilterDefineVariableCrossReference_9_1_0()); 
	}

)
))?(	otherlv_15='entrypoint' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getInvokeInternalAccess().getEntrypointKeyword_10_0());
    }
(
(
		lv_entryPointName_16_0=RULE_ID
		{
			newLeafNode(lv_entryPointName_16_0, grammarAccess.getInvokeInternalAccess().getEntryPointNameIDTerminalRuleCall_10_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInvokeInternalRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"entryPointName",
        		lv_entryPointName_16_0, 
        		"ID");
	    }

)
)	otherlv_17='(' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getInvokeInternalAccess().getLeftParenthesisKeyword_10_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInvokeInternalAccess().getEntryPointParametersExpressionParserRuleCall_10_3_0()); 
	    }
		lv_entryPointParameters_18_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvokeInternalRule());
	        }
       		add(
       			$current, 
       			"entryPointParameters",
        		lv_entryPointParameters_18_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_19=',' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getInvokeInternalAccess().getCommaKeyword_10_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInvokeInternalAccess().getEntryPointParametersExpressionParserRuleCall_10_4_1_0()); 
	    }
		lv_entryPointParameters_20_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvokeInternalRule());
	        }
       		add(
       			$current, 
       			"entryPointParameters",
        		lv_entryPointParameters_20_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_21=')' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getInvokeInternalAccess().getRightParenthesisKeyword_10_5());
    }
)?)
;





// Entry rule entryRuleInvokeExternal
entryRuleInvokeExternal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInvokeExternalRule()); }
	 iv_ruleInvokeExternal=ruleInvokeExternal 
	 { $current=$iv_ruleInvokeExternal.current; } 
	 EOF 
;

// Rule InvokeExternal
ruleInvokeExternal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='invoke-external' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInvokeExternalAccess().getInvokeExternalKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInvokeExternalAccess().getTransformationNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_transformationName_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvokeExternalRule());
	        }
       		set(
       			$current, 
       			"transformationName",
        		lv_transformationName_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInvokeExternalAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getInvokeExternalAccess().getSourceModelsInvocationParameterParserRuleCall_3_0_0()); 
	    }
		lv_sourceModels_3_0=ruleInvocationParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvokeExternalRule());
	        }
       		add(
       			$current, 
       			"sourceModels",
        		lv_sourceModels_3_0, 
        		"InvocationParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInvokeExternalAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInvokeExternalAccess().getSourceModelsInvocationParameterParserRuleCall_3_1_1_0()); 
	    }
		lv_sourceModels_5_0=ruleInvocationParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvokeExternalRule());
	        }
       		add(
       			$current, 
       			"sourceModels",
        		lv_sourceModels_5_0, 
        		"InvocationParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInvokeExternalAccess().getRightParenthesisKeyword_4());
    }
	otherlv_7='->' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInvokeExternalAccess().getHyphenMinusGreaterThanSignKeyword_5());
    }
	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInvokeExternalAccess().getLeftParenthesisKeyword_6());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getInvokeExternalAccess().getTargetModelsInvocationParameterParserRuleCall_7_0_0()); 
	    }
		lv_targetModels_9_0=ruleInvocationParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvokeExternalRule());
	        }
       		add(
       			$current, 
       			"targetModels",
        		lv_targetModels_9_0, 
        		"InvocationParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getInvokeExternalAccess().getCommaKeyword_7_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInvokeExternalAccess().getTargetModelsInvocationParameterParserRuleCall_7_1_1_0()); 
	    }
		lv_targetModels_11_0=ruleInvocationParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvokeExternalRule());
	        }
       		add(
       			$current, 
       			"targetModels",
        		lv_targetModels_11_0, 
        		"InvocationParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getInvokeExternalAccess().getRightParenthesisKeyword_8());
    }
(	otherlv_13='+' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getInvokeExternalAccess().getPlusSignKeyword_9_0());
    }
	otherlv_14='(' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getInvokeExternalAccess().getLeftParenthesisKeyword_9_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInvokeExternalAccess().getParametersNamedInvocationParameterParserRuleCall_9_2_0()); 
	    }
		lv_parameters_15_0=ruleNamedInvocationParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvokeExternalRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_15_0, 
        		"NamedInvocationParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_16=',' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getInvokeExternalAccess().getCommaKeyword_9_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInvokeExternalAccess().getParametersNamedInvocationParameterParserRuleCall_9_3_1_0()); 
	    }
		lv_parameters_17_0=ruleNamedInvocationParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvokeExternalRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_17_0, 
        		"NamedInvocationParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_18=')' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getInvokeExternalAccess().getRightParenthesisKeyword_9_4());
    }
)?((	otherlv_19='entrypoint' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getInvokeExternalAccess().getEntrypointKeyword_10_0_0());
    }
(
(
		lv_entryPointName_20_0=RULE_ID
		{
			newLeafNode(lv_entryPointName_20_0, grammarAccess.getInvokeExternalAccess().getEntryPointNameIDTerminalRuleCall_10_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInvokeExternalRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"entryPointName",
        		lv_entryPointName_20_0, 
        		"ID");
	    }

)
)	otherlv_21='(' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getInvokeExternalAccess().getLeftParenthesisKeyword_10_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInvokeExternalAccess().getEntryPointParametersExpressionParserRuleCall_10_0_3_0()); 
	    }
		lv_entryPointParameters_22_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvokeExternalRule());
	        }
       		add(
       			$current, 
       			"entryPointParameters",
        		lv_entryPointParameters_22_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_23=',' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getInvokeExternalAccess().getCommaKeyword_10_0_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInvokeExternalAccess().getEntryPointParametersExpressionParserRuleCall_10_0_4_1_0()); 
	    }
		lv_entryPointParameters_24_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvokeExternalRule());
	        }
       		add(
       			$current, 
       			"entryPointParameters",
        		lv_entryPointParameters_24_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_25=')' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getInvokeExternalAccess().getRightParenthesisKeyword_10_0_5());
    }
)?
    |(	otherlv_26='input-view-filter' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getInvokeExternalAccess().getInputViewFilterKeyword_10_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInvokeExternalRule());
	        }
        }
	otherlv_27=RULE_ID
	{
		newLeafNode(otherlv_27, grammarAccess.getInvokeExternalAccess().getInputViewFilterDefineVariableCrossReference_10_1_1_0()); 
	}

)
)(	otherlv_28='output-element' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getInvokeExternalAccess().getOutputElementKeyword_10_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInvokeExternalAccess().getOutputResolutionSourceElementExpressionParserRuleCall_10_1_2_1_0()); 
	    }
		lv_outputResolutionSourceElement_29_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvokeExternalRule());
	        }
       		set(
       			$current, 
       			"outputResolutionSourceElement",
        		lv_outputResolutionSourceElement_29_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_30='[' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getInvokeExternalAccess().getLeftSquareBracketKeyword_10_1_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInvokeExternalAccess().getQueueNameEStringParserRuleCall_10_1_2_3_0()); 
	    }
		lv_queueName_31_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvokeExternalRule());
	        }
       		set(
       			$current, 
       			"queueName",
        		lv_queueName_31_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_32='.' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getInvokeExternalAccess().getFullStopKeyword_10_1_2_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInvokeExternalAccess().getTraceAttributeNameEStringParserRuleCall_10_1_2_5_0()); 
	    }
		lv_traceAttributeName_33_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvokeExternalRule());
	        }
       		set(
       			$current, 
       			"traceAttributeName",
        		lv_traceAttributeName_33_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_34=']' 
    {
    	newLeafNode(otherlv_34, grammarAccess.getInvokeExternalAccess().getRightSquareBracketKeyword_10_1_2_6());
    }
)?)))
;





// Entry rule entryRuleInvocationParameter
entryRuleInvocationParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInvocationParameterRule()); }
	 iv_ruleInvocationParameter=ruleInvocationParameter 
	 { $current=$iv_ruleInvocationParameter.current; } 
	 EOF 
;

// Rule InvocationParameter
ruleInvocationParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_calleeModelName_0_0=RULE_ID
		{
			newLeafNode(lv_calleeModelName_0_0, grammarAccess.getInvocationParameterAccess().getCalleeModelNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInvocationParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"calleeModelName",
        		lv_calleeModelName_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInvocationParameterAccess().getEqualsSignKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInvocationParameterRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getInvocationParameterAccess().getModelTransformationDefinitionParameterCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleForAllStatement
entryRuleForAllStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getForAllStatementRule()); }
	 iv_ruleForAllStatement=ruleForAllStatement 
	 { $current=$iv_ruleForAllStatement.current; } 
	 EOF 
;

// Rule ForAllStatement
ruleForAllStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='forall' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getForAllStatementAccess().getForallKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getForAllStatementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getForAllStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='from' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getForAllStatementAccess().getFromKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getForAllStatementRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getForAllStatementAccess().getQueueQoolQueueCrossReference_3_0()); 
	}

)
)(	otherlv_4='where' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getForAllStatementAccess().getWhereKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForAllStatementAccess().getConditionExpressionParserRuleCall_4_1_0()); 
	    }
		lv_condition_5_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForAllStatementRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_5_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getForAllStatementAccess().getStatementsStatementParserRuleCall_5_0()); 
	    }
		lv_statements_6_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForAllStatementRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_6_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_7='end' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getForAllStatementAccess().getEndKeyword_6());
    }
)
;





// Entry rule entryRuleEmitStatement
entryRuleEmitStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEmitStatementRule()); }
	 iv_ruleEmitStatement=ruleEmitStatement 
	 { $current=$iv_ruleEmitStatement.current; } 
	 EOF 
;

// Rule EmitStatement
ruleEmitStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='emit' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEmitStatementAccess().getEmitKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEmitStatementAccess().getValueExpressionParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmitStatementRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='to' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEmitStatementAccess().getToKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEmitStatementRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getEmitStatementAccess().getQueueQoolQueueCrossReference_3_0()); 
	}

)
))
;





// Entry rule entryRuleMatchExpression
entryRuleMatchExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMatchExpressionRule()); }
	 iv_ruleMatchExpression=ruleMatchExpression 
	 { $current=$iv_ruleMatchExpression.current; } 
	 EOF 
;

// Rule MatchExpression
ruleMatchExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMatchExpressionRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getMatchExpressionAccess().getQueueQoolQueueCrossReference_0_0()); 
	}

)
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMatchExpressionAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMatchExpressionAccess().getPredicatesPredicateParserRuleCall_2_0()); 
	    }
		lv_predicates_2_0=rulePredicate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatchExpressionRule());
	        }
       		add(
       			$current, 
       			"predicates",
        		lv_predicates_2_0, 
        		"Predicate");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMatchExpressionAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMatchExpressionAccess().getPredicatesPredicateParserRuleCall_3_1_0()); 
	    }
		lv_predicates_4_0=rulePredicate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatchExpressionRule());
	        }
       		add(
       			$current, 
       			"predicates",
        		lv_predicates_4_0, 
        		"Predicate");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMatchExpressionAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRulePredicate
entryRulePredicate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPredicateRule()); }
	 iv_rulePredicate=rulePredicate 
	 { $current=$iv_rulePredicate.current; } 
	 EOF 
;

// Rule Predicate
rulePredicate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPredicateAccess().getKindOfPredicateParserRuleCall_0()); 
    }
    this_KindOfPredicate_0=ruleKindOfPredicate
    { 
        $current = $this_KindOfPredicate_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPredicateAccess().getPropertyEqualsPredicateParserRuleCall_1()); 
    }
    this_PropertyEqualsPredicate_1=rulePropertyEqualsPredicate
    { 
        $current = $this_PropertyEqualsPredicate_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleKindOfPredicate
entryRuleKindOfPredicate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKindOfPredicateRule()); }
	 iv_ruleKindOfPredicate=ruleKindOfPredicate 
	 { $current=$iv_ruleKindOfPredicate.current; } 
	 EOF 
;

// Rule KindOfPredicate
ruleKindOfPredicate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#kindOf' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getKindOfPredicateAccess().getKindOfKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getKindOfPredicateAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKindOfPredicateAccess().getClass_ClassUseParserRuleCall_2_0()); 
	    }
		lv_class__2_0=ruleClassUse		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKindOfPredicateRule());
	        }
       		set(
       			$current, 
       			"class_",
        		lv_class__2_0, 
        		"ClassUse");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getKindOfPredicateAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRulePropertyEqualsPredicate
entryRulePropertyEqualsPredicate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyEqualsPredicateRule()); }
	 iv_rulePropertyEqualsPredicate=rulePropertyEqualsPredicate 
	 { $current=$iv_rulePropertyEqualsPredicate.current; } 
	 EOF 
;

// Rule PropertyEqualsPredicate
rulePropertyEqualsPredicate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#p' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPropertyEqualsPredicateAccess().getPKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPropertyEqualsPredicateAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyEqualsPredicateAccess().getPropertyNameEStringParserRuleCall_2_0()); 
	    }
		lv_propertyName_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyEqualsPredicateRule());
	        }
       		set(
       			$current, 
       			"propertyName",
        		lv_propertyName_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPropertyEqualsPredicateAccess().getCommaKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyEqualsPredicateAccess().getValueExpressionParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyEqualsPredicateRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPropertyEqualsPredicateAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleCopier
entryRuleCopier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCopierRule()); }
	 iv_ruleCopier=ruleCopier 
	 { $current=$iv_ruleCopier.current; } 
	 EOF 
;

// Rule Copier
ruleCopier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='copy' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCopierAccess().getCopyKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCopierAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCopierAccess().getObjectsExpressionParserRuleCall_2_0()); 
	    }
		lv_objects_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCopierRule());
	        }
       		add(
       			$current, 
       			"objects",
        		lv_objects_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCopierAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCopierAccess().getObjectsExpressionParserRuleCall_3_1_0()); 
	    }
		lv_objects_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCopierRule());
	        }
       		add(
       			$current, 
       			"objects",
        		lv_objects_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCopierAccess().getRightParenthesisKeyword_4());
    }
	otherlv_6='model' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCopierAccess().getModelKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCopierRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getCopierAccess().getCopyInModelTransformationDefinitionParameterCrossReference_6_0()); 
	}

)
)(	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCopierAccess().getLeftCurlyBracketKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCopierAccess().getCallbacksCopierCallbackDefinitionParserRuleCall_7_1_0()); 
	    }
		lv_callbacks_9_0=ruleCopierCallbackDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCopierRule());
	        }
       		add(
       			$current, 
       			"callbacks",
        		lv_callbacks_9_0, 
        		"CopierCallbackDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getCopierAccess().getCommaKeyword_7_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCopierAccess().getCallbacksCopierCallbackDefinitionParserRuleCall_7_2_1_0()); 
	    }
		lv_callbacks_11_0=ruleCopierCallbackDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCopierRule());
	        }
       		add(
       			$current, 
       			"callbacks",
        		lv_callbacks_11_0, 
        		"CopierCallbackDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getCopierAccess().getRightCurlyBracketKeyword_7_3());
    }
)?)
;





// Entry rule entryRuleCopierCallbackDefinition
entryRuleCopierCallbackDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCopierCallbackDefinitionRule()); }
	 iv_ruleCopierCallbackDefinition=ruleCopierCallbackDefinition 
	 { $current=$iv_ruleCopierCallbackDefinition.current; } 
	 EOF 
;

// Rule CopierCallbackDefinition
ruleCopierCallbackDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='with' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCopierCallbackDefinitionAccess().getWithKeyword_0_0());
    }

    |(
(
		lv_stop_1_0=	'stop' 
    {
        newLeafNode(lv_stop_1_0, grammarAccess.getCopierCallbackDefinitionAccess().getStopStopKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCopierCallbackDefinitionRule());
	        }
       		setWithLastConsumed($current, "stop", true, "stop");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getCopierCallbackDefinitionAccess().getTriggerExpressionParserRuleCall_1_0()); 
	    }
		lv_trigger_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCopierCallbackDefinitionRule());
	        }
       		set(
       			$current, 
       			"trigger",
        		lv_trigger_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='->' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCopierCallbackDefinitionAccess().getHyphenMinusGreaterThanSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCopierCallbackDefinitionAccess().getActionExpressionParserRuleCall_3_0()); 
	    }
		lv_action_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCopierCallbackDefinitionRule());
	        }
       		set(
       			$current, 
       			"action",
        		lv_action_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;







// Entry rule entryRuleTraceDefinition
entryRuleTraceDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTraceDefinitionRule()); }
	 iv_ruleTraceDefinition=ruleTraceDefinition 
	 { $current=$iv_ruleTraceDefinition.current; } 
	 EOF 
;

// Rule TraceDefinition
ruleTraceDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='link' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTraceDefinitionAccess().getLinkKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTraceDefinitionAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraceDefinitionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTraceDefinitionAccess().getLeftCurlyBracketKeyword_2_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTraceDefinitionAccess().getElementsTraceElementInlineParserRuleCall_2_0_1_0()); 
	    }
		lv_elements_3_0=ruleTraceElementInline		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraceDefinitionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_3_0, 
        		"TraceElementInline");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTraceDefinitionAccess().getSemicolonKeyword_2_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTraceDefinitionAccess().getElementsTraceElementInlineParserRuleCall_2_0_2_1_0()); 
	    }
		lv_elements_5_0=ruleTraceElementInline		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraceDefinitionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_5_0, 
        		"TraceElementInline");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTraceDefinitionAccess().getRightCurlyBracketKeyword_2_0_3());
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getTraceDefinitionAccess().getElementsTraceElementExpandedParserRuleCall_2_1_0_0()); 
	    }
		lv_elements_7_0=ruleTraceElementExpanded		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraceDefinitionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_7_0, 
        		"TraceElementExpanded");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTraceDefinitionAccess().getElementsTraceElementExpandedParserRuleCall_2_1_1_0()); 
	    }
		lv_elements_8_0=ruleTraceElementExpanded		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraceDefinitionRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_8_0, 
        		"TraceElementExpanded");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='end' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTraceDefinitionAccess().getEndKeyword_2_1_2());
    }
)))
;





// Entry rule entryRuleTraceElementInline
entryRuleTraceElementInline returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTraceElementInlineRule()); }
	 iv_ruleTraceElementInline=ruleTraceElementInline 
	 { $current=$iv_ruleTraceElementInline.current; } 
	 EOF 
;

// Rule TraceElementInline
ruleTraceElementInline returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTraceElementInlineAccess().getNameEStringParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraceElementInlineRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTraceElementInlineAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTraceElementInlineAccess().getTypeTypeExpressionParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraceElementInlineRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTraceElementExpanded
entryRuleTraceElementExpanded returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTraceElementExpandedRule()); }
	 iv_ruleTraceElementExpanded=ruleTraceElementExpanded 
	 { $current=$iv_ruleTraceElementExpanded.current; } 
	 EOF 
;

// Rule TraceElementExpanded
ruleTraceElementExpanded returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='var' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTraceElementExpandedAccess().getVarKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTraceElementExpandedAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraceElementExpandedRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTraceElementExpandedAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTraceElementExpandedAccess().getTypeTypeExpressionParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleTypeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraceElementExpandedRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"TypeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTypeExpression
entryRuleTypeExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeExpressionRule()); }
	 iv_ruleTypeExpression=ruleTypeExpression 
	 { $current=$iv_ruleTypeExpression.current; } 
	 EOF 
;

// Rule TypeExpression
ruleTypeExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getTypeExpressionAccess().getClassUseParserRuleCall()); 
    }
    this_ClassUse_0=ruleClassUse
    { 
        $current = $this_ClassUse_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleClassUse
entryRuleClassUse returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassUseRule()); }
	 iv_ruleClassUse=ruleClassUse 
	 { $current=$iv_ruleClassUse.current; } 
	 EOF 
;

// Rule ClassUse
ruleClassUse returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassUseRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getClassUseAccess().getModelRepresentModelCrossReference_0_0()); 
	}

)
)	otherlv_1='!' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getClassUseAccess().getExclamationMarkKeyword_1());
    }
(
(
		lv_className_2_0=RULE_ID
		{
			newLeafNode(lv_className_2_0, grammarAccess.getClassUseAccess().getClassNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassUseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"className",
        		lv_className_2_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getClassUseAccess().getAnnotationsSingleAnnotationParserRuleCall_3_0()); 
	    }
		lv_annotations_3_0=ruleSingleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassUseRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_3_0, 
        		"SingleAnnotation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_strictType_4_0=	'!' 
    {
        newLeafNode(lv_strictType_4_0, grammarAccess.getClassUseAccess().getStrictTypeExclamationMarkKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassUseRule());
	        }
       		setWithLastConsumed($current, "strictType", true, "!");
	    }

)
)?)
;





// Entry rule entryRuleSingleAnnotation
entryRuleSingleAnnotation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSingleAnnotationRule()); }
	 iv_ruleSingleAnnotation=ruleSingleAnnotation 
	 { $current=$iv_ruleSingleAnnotation.current; } 
	 EOF 
;

// Rule SingleAnnotation
ruleSingleAnnotation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getSingleAnnotationAccess().getPotencyAnnotationParserRuleCall()); 
    }
    this_PotencyAnnotation_0=rulePotencyAnnotation
    { 
        $current = $this_PotencyAnnotation_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRulePotencyAnnotation
entryRulePotencyAnnotation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPotencyAnnotationRule()); }
	 iv_rulePotencyAnnotation=rulePotencyAnnotation 
	 { $current=$iv_rulePotencyAnnotation.current; } 
	 EOF 
;

// Rule PotencyAnnotation
rulePotencyAnnotation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPotencyAnnotationAccess().getCommercialAtKeyword_0_0());
    }

    |	otherlv_1='^' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPotencyAnnotationAccess().getCircumflexAccentKeyword_0_1());
    }
)(
(
		lv_value_2_0=RULE_INT
		{
			newLeafNode(lv_value_2_0, grammarAccess.getPotencyAnnotationAccess().getValueINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPotencyAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRulePropertyWrite
entryRulePropertyWrite returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyWriteRule()); }
	 iv_rulePropertyWrite=rulePropertyWrite 
	 { $current=$iv_rulePropertyWrite.current; } 
	 EOF 
;

// Rule PropertyWrite
rulePropertyWrite returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyWriteRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getPropertyWriteAccess().getReceptorVariableCrossReference_0_0()); 
	}

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPropertyWriteAccess().getFullStopKeyword_1());
    }
(
(
		lv_property_2_0=RULE_ID
		{
			newLeafNode(lv_property_2_0, grammarAccess.getPropertyWriteAccess().getPropertyIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyWriteRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"property",
        		lv_property_2_0, 
        		"ID");
	    }

)
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPropertyWriteAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyWriteAccess().getExpressionExpressionParserRuleCall_4_0()); 
	    }
		lv_expression_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyWriteRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDefineVariable
entryRuleDefineVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefineVariableRule()); }
	 iv_ruleDefineVariable=ruleDefineVariable 
	 { $current=$iv_ruleDefineVariable.current; } 
	 EOF 
;

// Rule DefineVariable
ruleDefineVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDefineVariableAccess().getNameEStringParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefineVariableRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDefineVariableAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDefineVariableAccess().getExpressionExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefineVariableRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleModelReference
entryRuleModelReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelReferenceRule()); }
	 iv_ruleModelReference=ruleModelReference 
	 { $current=$iv_ruleModelReference.current; } 
	 EOF 
;

// Rule ModelReference
ruleModelReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelReferenceRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getModelReferenceAccess().getModelRepresentModelCrossReference_0_0()); 
	}

)
)	otherlv_1='!' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getModelReferenceAccess().getExclamationMarkKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelReferenceAccess().getClassNameEStringParserRuleCall_2_0()); 
	    }
		lv_className_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelReferenceRule());
	        }
       		set(
       			$current, 
       			"className",
        		lv_className_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getMethodCallParserRuleCall()); 
    }
    this_MethodCall_0=ruleMethodCall
    { 
        $current = $this_MethodCall_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleParenthesizedExpression
entryRuleParenthesizedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParenthesizedExpressionRule()); }
	 iv_ruleParenthesizedExpression=ruleParenthesizedExpression 
	 { $current=$iv_ruleParenthesizedExpression.current; } 
	 EOF 
;

// Rule ParenthesizedExpression
ruleParenthesizedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getParenthesizedExpressionAccess().getExpressionParserRuleCall_1()); 
    }
    this_Expression_1=ruleExpression
    { 
        $current = $this_Expression_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	 iv_ruleLiteral=ruleLiteral 
	 { $current=$iv_ruleLiteral.current; } 
	 EOF 
;

// Rule Literal
ruleLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getFloatLiteralParserRuleCall_0()); 
    }
    this_FloatLiteral_0=ruleFloatLiteral
    { 
        $current = $this_FloatLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getNumLiteralParserRuleCall_1()); 
    }
    this_NumLiteral_1=ruleNumLiteral
    { 
        $current = $this_NumLiteral_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_2()); 
    }
    this_StringLiteral_2=ruleStringLiteral
    { 
        $current = $this_StringLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_3()); 
    }
    this_BooleanLiteral_3=ruleBooleanLiteral
    { 
        $current = $this_BooleanLiteral_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleVariableReference
entryRuleVariableReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableReferenceRule()); }
	 iv_ruleVariableReference=ruleVariableReference 
	 { $current=$iv_ruleVariableReference.current; } 
	 EOF 
;

// Rule VariableReference
ruleVariableReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariableReferenceRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getVariableReferenceAccess().getVariableVariableCrossReference_0()); 
	}

)
)
;





// Entry rule entryRuleClosureDeclaration
entryRuleClosureDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClosureDeclarationRule()); }
	 iv_ruleClosureDeclaration=ruleClosureDeclaration 
	 { $current=$iv_ruleClosureDeclaration.current; } 
	 EOF 
;

// Rule ClosureDeclaration
ruleClosureDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClosureDeclarationAccess().getLeftCurlyBracketKeyword_0());
    }
(	otherlv_1='|' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getClosureDeclarationAccess().getVerticalLineKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClosureDeclarationAccess().getFormalParametersClosureParameterParserRuleCall_1_1_0()); 
	    }
		lv_formalParameters_2_0=ruleClosureParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClosureDeclarationRule());
	        }
       		add(
       			$current, 
       			"formalParameters",
        		lv_formalParameters_2_0, 
        		"ClosureParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getClosureDeclarationAccess().getCommaKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClosureDeclarationAccess().getFormalParametersClosureParameterParserRuleCall_1_2_1_0()); 
	    }
		lv_formalParameters_4_0=ruleClosureParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClosureDeclarationRule());
	        }
       		add(
       			$current, 
       			"formalParameters",
        		lv_formalParameters_4_0, 
        		"ClosureParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='|' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getClosureDeclarationAccess().getVerticalLineKeyword_1_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClosureDeclarationAccess().getStatementsStatementParserRuleCall_2_0()); 
	    }
		lv_statements_6_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClosureDeclarationRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_6_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getClosureDeclarationAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleClosureParameter
entryRuleClosureParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClosureParameterRule()); }
	 iv_ruleClosureParameter=ruleClosureParameter 
	 { $current=$iv_ruleClosureParameter.current; } 
	 EOF 
;

// Rule ClosureParameter
ruleClosureParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getClosureParameterAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClosureParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleMethodCall
entryRuleMethodCall returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodCallRule()); }
	 iv_ruleMethodCall=ruleMethodCall 
	 { $current=$iv_ruleMethodCall.current; } 
	 EOF 
;

// Rule MethodCall
ruleMethodCall returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMethodCallAccess().getPrimaryExpressionParserRuleCall_0()); 
    }
    this_PrimaryExpression_0=rulePrimaryExpression
    { 
        $current = $this_PrimaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMethodCallAccess().getBinaryExprLeftAction_1_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodCallAccess().getBinaryOpBinaryOpEnumRuleCall_1_0_1_0()); 
	    }
		lv_binaryOp_2_0=ruleBinaryOp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodCallRule());
	        }
       		set(
       			$current, 
       			"binaryOp",
        		lv_binaryOp_2_0, 
        		"BinaryOp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodCallAccess().getRightExpressionParserRuleCall_1_0_2_0()); 
	    }
		lv_right_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodCallRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((((
))=>(
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMethodCallAccess().getMethodCallReceptorAction_1_1_0_0(),
            $current);
    }
))	otherlv_5='.' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMethodCallAccess().getFullStopKeyword_1_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodCallAccess().getMethodNameEStringParserRuleCall_1_1_2_0()); 
	    }
		lv_methodName_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodCallRule());
	        }
       		set(
       			$current, 
       			"methodName",
        		lv_methodName_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_withParameters_7_0=	'(' 
    {
        newLeafNode(lv_withParameters_7_0, grammarAccess.getMethodCallAccess().getWithParametersLeftParenthesisKeyword_1_1_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMethodCallRule());
	        }
       		setWithLastConsumed($current, "withParameters", true, "(");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodCallAccess().getParametersExpressionParserRuleCall_1_1_3_1_0()); 
	    }
		lv_parameters_8_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodCallRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_8_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMethodCallAccess().getCommaKeyword_1_1_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodCallAccess().getParametersExpressionParserRuleCall_1_1_3_2_1_0()); 
	    }
		lv_parameters_10_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodCallRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_10_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11=')' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getMethodCallAccess().getRightParenthesisKeyword_1_1_3_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodCallAccess().getParametersClosureDeclarationParserRuleCall_1_1_4_0()); 
	    }
		lv_parameters_12_0=ruleClosureDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodCallRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_12_0, 
        		"ClosureDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)?)+)?)
;









// Entry rule entryRuleMatchTraceExpression
entryRuleMatchTraceExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMatchTraceExpressionRule()); }
	 iv_ruleMatchTraceExpression=ruleMatchTraceExpression 
	 { $current=$iv_ruleMatchTraceExpression.current; } 
	 EOF 
;

// Rule MatchTraceExpression
ruleMatchTraceExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='match' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMatchTraceExpressionAccess().getMatchKeyword_0());
    }
(this_ID_1=RULE_ID
    { 
    newLeafNode(this_ID_1, grammarAccess.getMatchTraceExpressionAccess().getIDTerminalRuleCall_1_0()); 
    }
	otherlv_2='!' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMatchTraceExpressionAccess().getExclamationMarkKeyword_1_1());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMatchTraceExpressionRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getMatchTraceExpressionAccess().getTraceTraceDefinitionCrossReference_2_0()); 
	}

)
)	otherlv_4='with' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMatchTraceExpressionAccess().getWithKeyword_3());
    }
	otherlv_5='[' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMatchTraceExpressionAccess().getLeftSquareBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMatchTraceExpressionAccess().getTraceExprTraceExprLanguageParserRuleCall_5_0()); 
	    }
		lv_traceExpr_6_0=ruleTraceExprLanguage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMatchTraceExpressionRule());
	        }
       		set(
       			$current, 
       			"traceExpr",
        		lv_traceExpr_6_0, 
        		"TraceExprLanguage");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMatchTraceExpressionAccess().getRightSquareBracketKeyword_6());
    }
)
;





// Entry rule entryRuleTraceExprLanguage
entryRuleTraceExprLanguage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTraceExprLanguageRule()); }
	 iv_ruleTraceExprLanguage=ruleTraceExprLanguage 
	 { $current=$iv_ruleTraceExprLanguage.current; } 
	 EOF 
;

// Rule TraceExprLanguage
ruleTraceExprLanguage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTraceExprLanguageRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getTraceExprLanguageAccess().getTraceVarTraceElementCrossReference_0_0()); 
	}

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTraceExprLanguageAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTraceExprLanguageAccess().getExprExpressionParserRuleCall_2_0()); 
	    }
		lv_expr_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTraceExprLanguageRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePutTraceExpression
entryRulePutTraceExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPutTraceExpressionRule()); }
	 iv_rulePutTraceExpression=rulePutTraceExpression 
	 { $current=$iv_rulePutTraceExpression.current; } 
	 EOF 
;

// Rule PutTraceExpression
rulePutTraceExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='put' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPutTraceExpressionAccess().getPutKeyword_0());
    }
(this_ID_1=RULE_ID
    { 
    newLeafNode(this_ID_1, grammarAccess.getPutTraceExpressionAccess().getIDTerminalRuleCall_1_0()); 
    }
	otherlv_2='!' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPutTraceExpressionAccess().getExclamationMarkKeyword_1_1());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPutTraceExpressionRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getPutTraceExpressionAccess().getTraceTraceDefinitionCrossReference_2_0()); 
	}

)
)	otherlv_4='with' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPutTraceExpressionAccess().getWithKeyword_3());
    }
	otherlv_5='[' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPutTraceExpressionAccess().getLeftSquareBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPutTraceExpressionAccess().getParametersPutTraceParameterParserRuleCall_5_0()); 
	    }
		lv_parameters_6_0=rulePutTraceParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPutTraceExpressionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_6_0, 
        		"PutTraceParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPutTraceExpressionAccess().getCommaKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPutTraceExpressionAccess().getParametersPutTraceParameterParserRuleCall_6_1_0()); 
	    }
		lv_parameters_8_0=rulePutTraceParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPutTraceExpressionRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_8_0, 
        		"PutTraceParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_9=']' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPutTraceExpressionAccess().getRightSquareBracketKeyword_7());
    }
)
;





// Entry rule entryRulePutTraceParameter
entryRulePutTraceParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPutTraceParameterRule()); }
	 iv_rulePutTraceParameter=rulePutTraceParameter 
	 { $current=$iv_rulePutTraceParameter.current; } 
	 EOF 
;

// Rule PutTraceParameter
rulePutTraceParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPutTraceParameterRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getPutTraceParameterAccess().getTraceVarTraceElementCrossReference_0_0()); 
	}

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPutTraceParameterAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPutTraceParameterAccess().getValueExpressionParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPutTraceParameterRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNumLiteral
entryRuleNumLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumLiteralRule()); }
	 iv_ruleNumLiteral=ruleNumLiteral 
	 { $current=$iv_ruleNumLiteral.current; } 
	 EOF 
;

// Rule NumLiteral
ruleNumLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumLiteralAccess().getValueEIntParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumLiteralRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleFloatLiteral
entryRuleFloatLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFloatLiteralRule()); }
	 iv_ruleFloatLiteral=ruleFloatLiteral 
	 { $current=$iv_ruleFloatLiteral.current; } 
	 EOF 
;

// Rule FloatLiteral
ruleFloatLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getFloatLiteralAccess().getValueEDoubleParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleEDouble		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFloatLiteralRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"EDouble");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleEDouble
entryRuleEDouble returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEDoubleRule()); } 
	 iv_ruleEDouble=ruleEDouble 
	 { $current=$iv_ruleEDouble.current.getText(); }  
	 EOF 
;

// Rule EDouble
ruleEDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_0()); 
    }

	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEDoubleAccess().getFullStopKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	 iv_ruleStringLiteral=ruleStringLiteral 
	 { $current=$iv_ruleStringLiteral.current; } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_STRING
		{
			newLeafNode(lv_value_0_0, grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanLiteralRule()); }
	 iv_ruleBooleanLiteral=ruleBooleanLiteral 
	 { $current=$iv_ruleBooleanLiteral.current; } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanLiteralAccess().getValueEBooleanParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleEBoolean		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanLiteralRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"EBoolean");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEIntRule()); } 
	 iv_ruleEInt=ruleEInt 
	 { $current=$iv_ruleEInt.current.getText(); }  
	 EOF 
;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleEBoolean
entryRuleEBoolean returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEBooleanRule()); } 
	 iv_ruleEBoolean=ruleEBoolean 
	 { $current=$iv_ruleEBoolean.current.getText(); }  
	 EOF 
;

// Rule EBoolean
ruleEBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='true' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEBooleanAccess().getTrueKeyword_0()); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEBooleanAccess().getFalseKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getEStringParserRuleCall_0()); 
    }
    this_EString_0=ruleEString    {
		$current.merge(this_EString_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getEStringParserRuleCall_1_1()); 
    }
    this_EString_2=ruleEString    {
		$current.merge(this_EString_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)*)
    ;





// Rule BinaryOp
ruleBinaryOp returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='+' 
	{
        $current = grammarAccess.getBinaryOpAccess().getADDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getBinaryOpAccess().getADDEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='-' 
	{
        $current = grammarAccess.getBinaryOpAccess().getSUBEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getBinaryOpAccess().getSUBEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='*' 
	{
        $current = grammarAccess.getBinaryOpAccess().getMULEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getBinaryOpAccess().getMULEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='/' 
	{
        $current = grammarAccess.getBinaryOpAccess().getDIVEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getBinaryOpAccess().getDIVEnumLiteralDeclaration_3()); 
    }
));



RULE_KEYWORD_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')* ':';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


