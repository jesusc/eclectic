/*
 * generated by Xtext
 */
package org.eclectic.frontend;

import org.eclipse.xtext.common.services.DefaultTerminalConverters;
import org.eclipse.xtext.conversion.IValueConverter;
import org.eclipse.xtext.conversion.IValueConverterService;
import org.eclipse.xtext.conversion.ValueConverter;
import org.eclipse.xtext.conversion.impl.STRINGValueConverter;

import com.google.inject.Inject;

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
public class MappingsRuntimeModule extends org.eclectic.frontend.AbstractMappingsRuntimeModule {
	/**
	 * Redefined to return a new type of parser which is able of tracking line numbers
	 * and nodes.
	 */
	@Override 
	public Class<? extends org.eclipse.xtext.parser.IParser> bindIParser() {		
		return org.eclectic.frontend.MappingsParserTrackingLines.class;
	}


    @Override
    public Class<? extends IValueConverterService> bindIValueConverterService() {
        return MappingLangValueConverter.class;
    }
    
    public static class MappingLangValueConverter extends DefaultTerminalConverters {
    	@ValueConverter(rule = "StrictString")
    	public IValueConverter<String> StrictString() {
    		return STRING();
    	}

    }
}
